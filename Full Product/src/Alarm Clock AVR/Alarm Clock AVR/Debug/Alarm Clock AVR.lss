
Alarm Clock AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  0000246a  000024fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000246a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002d  00800184  00800184  00002582  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002582  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  000025f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ce5  00000000  00000000  000027fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001265  00000000  00000000  000054e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000147d  00000000  00000000  00006746  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000578  00000000  00000000  00007bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ba1  00000000  00000000  0000813c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001cb6  00000000  00000000  00008cdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000a993  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__ctors_end>
       4:	0c 94 45 0b 	jmp	0x168a	; 0x168a <__vector_1>
       8:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
       c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      10:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      14:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      18:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      1c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      20:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      24:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      28:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      2c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      30:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      34:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      38:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      3c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      40:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      44:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      48:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      4c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      50:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      54:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      58:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      5c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      60:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      64:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	52 00       	.word	0x0052	; ????
      6a:	08 00       	.word	0x0008	; ????
      6c:	52 00       	.word	0x0052	; ????
      6e:	08 00       	.word	0x0008	; ????
      70:	a5 00       	.word	0x00a5	; ????
      72:	08 00       	.word	0x0008	; ????
      74:	52 00       	.word	0x0052	; ????
      76:	08 00       	.word	0x0008	; ????
      78:	52 00       	.word	0x0052	; ????
      7a:	08 00       	.word	0x0008	; ????
      7c:	93 00       	.word	0x0093	; ????
      7e:	08 00       	.word	0x0008	; ????
      80:	52 00       	.word	0x0052	; ????
      82:	08 00       	.word	0x0008	; ????
      84:	52 00       	.word	0x0052	; ????
      86:	08 00       	.word	0x0008	; ????
      88:	83 00       	.word	0x0083	; ????
      8a:	08 00       	.word	0x0008	; ????
      8c:	52 00       	.word	0x0052	; ????
      8e:	08 00       	.word	0x0008	; ????
      90:	52 00       	.word	0x0052	; ????
      92:	08 00       	.word	0x0008	; ????
      94:	75 00       	.word	0x0075	; ????
      96:	08 00       	.word	0x0008	; ????
      98:	52 00       	.word	0x0052	; ????
      9a:	08 00       	.word	0x0008	; ????
      9c:	52 00       	.word	0x0052	; ????
      9e:	08 00       	.word	0x0008	; ????
      a0:	7b 00       	.word	0x007b	; ????
      a2:	08 00       	.word	0x0008	; ????
      a4:	83 00       	.word	0x0083	; ????
      a6:	08 00       	.word	0x0008	; ????
      a8:	52 00       	.word	0x0052	; ????
      aa:	08 00       	.word	0x0008	; ????
      ac:	52 00       	.word	0x0052	; ????
      ae:	08 00       	.word	0x0008	; ????
      b0:	a5 00       	.word	0x00a5	; ????
      b2:	08 00       	.word	0x0008	; ????
      b4:	52 00       	.word	0x0052	; ????
      b6:	08 00       	.word	0x0008	; ????
      b8:	52 00       	.word	0x0052	; ????
      ba:	08 00       	.word	0x0008	; ????
      bc:	93 00       	.word	0x0093	; ????
      be:	08 00       	.word	0x0008	; ????
      c0:	52 00       	.word	0x0052	; ????
      c2:	08 00       	.word	0x0008	; ????
      c4:	52 00       	.word	0x0052	; ????
      c6:	08 00       	.word	0x0008	; ????
      c8:	83 00       	.word	0x0083	; ????
      ca:	08 00       	.word	0x0008	; ????
      cc:	52 00       	.word	0x0052	; ????
      ce:	08 00       	.word	0x0008	; ????
      d0:	52 00       	.word	0x0052	; ????
      d2:	08 00       	.word	0x0008	; ????
      d4:	75 00       	.word	0x0075	; ????
      d6:	fe ff       	.word	0xfffe	; ????
      d8:	52 00       	.word	0x0052	; ????
      da:	08 00       	.word	0x0008	; ????
      dc:	52 00       	.word	0x0052	; ????
      de:	08 00       	.word	0x0008	; ????
      e0:	a5 00       	.word	0x00a5	; ????
      e2:	08 00       	.word	0x0008	; ????
      e4:	52 00       	.word	0x0052	; ????
      e6:	08 00       	.word	0x0008	; ????
      e8:	52 00       	.word	0x0052	; ????
      ea:	08 00       	.word	0x0008	; ????
      ec:	93 00       	.word	0x0093	; ????
      ee:	08 00       	.word	0x0008	; ????
      f0:	52 00       	.word	0x0052	; ????
      f2:	08 00       	.word	0x0008	; ????
      f4:	52 00       	.word	0x0052	; ????
      f6:	08 00       	.word	0x0008	; ????
      f8:	83 00       	.word	0x0083	; ????
      fa:	08 00       	.word	0x0008	; ????
      fc:	52 00       	.word	0x0052	; ????
      fe:	08 00       	.word	0x0008	; ????
     100:	52 00       	.word	0x0052	; ????
     102:	08 00       	.word	0x0008	; ????
     104:	75 00       	.word	0x0075	; ????
     106:	08 00       	.word	0x0008	; ????
     108:	52 00       	.word	0x0052	; ????
     10a:	08 00       	.word	0x0008	; ????
     10c:	52 00       	.word	0x0052	; ????
     10e:	08 00       	.word	0x0008	; ????
     110:	7b 00       	.word	0x007b	; ????
     112:	08 00       	.word	0x0008	; ????
     114:	83 00       	.word	0x0083	; ????
     116:	08 00       	.word	0x0008	; ????
     118:	52 00       	.word	0x0052	; ????
     11a:	08 00       	.word	0x0008	; ????
     11c:	52 00       	.word	0x0052	; ????
     11e:	08 00       	.word	0x0008	; ????
     120:	a5 00       	.word	0x00a5	; ????
     122:	08 00       	.word	0x0008	; ????
     124:	52 00       	.word	0x0052	; ????
     126:	08 00       	.word	0x0008	; ????
     128:	52 00       	.word	0x0052	; ????
     12a:	08 00       	.word	0x0008	; ????
     12c:	93 00       	.word	0x0093	; ????
     12e:	08 00       	.word	0x0008	; ????
     130:	52 00       	.word	0x0052	; ????
     132:	08 00       	.word	0x0008	; ????
     134:	52 00       	.word	0x0052	; ????
     136:	08 00       	.word	0x0008	; ????
     138:	83 00       	.word	0x0083	; ????
     13a:	08 00       	.word	0x0008	; ????
     13c:	52 00       	.word	0x0052	; ????
     13e:	08 00       	.word	0x0008	; ????
     140:	52 00       	.word	0x0052	; ????
     142:	08 00       	.word	0x0008	; ????
     144:	75 00       	.word	0x0075	; ????
     146:	fe ff       	.word	0xfffe	; ????
     148:	52 00       	.word	0x0052	; ????
     14a:	08 00       	.word	0x0008	; ????
     14c:	52 00       	.word	0x0052	; ????
     14e:	08 00       	.word	0x0008	; ????
     150:	a5 00       	.word	0x00a5	; ????
     152:	08 00       	.word	0x0008	; ????
     154:	52 00       	.word	0x0052	; ????
     156:	08 00       	.word	0x0008	; ????
     158:	52 00       	.word	0x0052	; ????
     15a:	08 00       	.word	0x0008	; ????
     15c:	93 00       	.word	0x0093	; ????
     15e:	08 00       	.word	0x0008	; ????
     160:	52 00       	.word	0x0052	; ????
     162:	08 00       	.word	0x0008	; ????
     164:	52 00       	.word	0x0052	; ????
     166:	08 00       	.word	0x0008	; ????
     168:	83 00       	.word	0x0083	; ????
     16a:	08 00       	.word	0x0008	; ????
     16c:	52 00       	.word	0x0052	; ????
     16e:	08 00       	.word	0x0008	; ????
     170:	52 00       	.word	0x0052	; ????
     172:	08 00       	.word	0x0008	; ????
     174:	75 00       	.word	0x0075	; ????
     176:	08 00       	.word	0x0008	; ????
     178:	52 00       	.word	0x0052	; ????
     17a:	08 00       	.word	0x0008	; ????
     17c:	52 00       	.word	0x0052	; ????
     17e:	08 00       	.word	0x0008	; ????
     180:	7b 00       	.word	0x007b	; ????
     182:	08 00       	.word	0x0008	; ????
     184:	83 00       	.word	0x0083	; ????
     186:	08 00       	.word	0x0008	; ????
     188:	52 00       	.word	0x0052	; ????
     18a:	08 00       	.word	0x0008	; ????
     18c:	52 00       	.word	0x0052	; ????
     18e:	08 00       	.word	0x0008	; ????
     190:	a5 00       	.word	0x00a5	; ????
     192:	08 00       	.word	0x0008	; ????
     194:	52 00       	.word	0x0052	; ????
     196:	08 00       	.word	0x0008	; ????
     198:	52 00       	.word	0x0052	; ????
     19a:	08 00       	.word	0x0008	; ????
     19c:	93 00       	.word	0x0093	; ????
     19e:	08 00       	.word	0x0008	; ????
     1a0:	52 00       	.word	0x0052	; ????
     1a2:	08 00       	.word	0x0008	; ????
     1a4:	52 00       	.word	0x0052	; ????
     1a6:	08 00       	.word	0x0008	; ????
     1a8:	83 00       	.word	0x0083	; ????
     1aa:	08 00       	.word	0x0008	; ????
     1ac:	52 00       	.word	0x0052	; ????
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	52 00       	.word	0x0052	; ????
     1b2:	08 00       	.word	0x0008	; ????
     1b4:	75 00       	.word	0x0075	; ????
     1b6:	fe ff       	.word	0xfffe	; ????
     1b8:	52 00       	.word	0x0052	; ????
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	52 00       	.word	0x0052	; ????
     1be:	08 00       	.word	0x0008	; ????
     1c0:	a5 00       	.word	0x00a5	; ????
     1c2:	08 00       	.word	0x0008	; ????
     1c4:	52 00       	.word	0x0052	; ????
     1c6:	08 00       	.word	0x0008	; ????
     1c8:	52 00       	.word	0x0052	; ????
     1ca:	08 00       	.word	0x0008	; ????
     1cc:	93 00       	.word	0x0093	; ????
     1ce:	08 00       	.word	0x0008	; ????
     1d0:	52 00       	.word	0x0052	; ????
     1d2:	08 00       	.word	0x0008	; ????
     1d4:	52 00       	.word	0x0052	; ????
     1d6:	08 00       	.word	0x0008	; ????
     1d8:	83 00       	.word	0x0083	; ????
     1da:	08 00       	.word	0x0008	; ????
     1dc:	52 00       	.word	0x0052	; ????
     1de:	08 00       	.word	0x0008	; ????
     1e0:	52 00       	.word	0x0052	; ????
     1e2:	08 00       	.word	0x0008	; ????
     1e4:	75 00       	.word	0x0075	; ????
     1e6:	08 00       	.word	0x0008	; ????
     1e8:	52 00       	.word	0x0052	; ????
     1ea:	08 00       	.word	0x0008	; ????
     1ec:	52 00       	.word	0x0052	; ????
     1ee:	08 00       	.word	0x0008	; ????
     1f0:	7b 00       	.word	0x007b	; ????
     1f2:	08 00       	.word	0x0008	; ????
     1f4:	83 00       	.word	0x0083	; ????
     1f6:	08 00       	.word	0x0008	; ????
     1f8:	52 00       	.word	0x0052	; ????
     1fa:	08 00       	.word	0x0008	; ????
     1fc:	52 00       	.word	0x0052	; ????
     1fe:	08 00       	.word	0x0008	; ????
     200:	a5 00       	.word	0x00a5	; ????
     202:	08 00       	.word	0x0008	; ????
     204:	52 00       	.word	0x0052	; ????
     206:	08 00       	.word	0x0008	; ????
     208:	52 00       	.word	0x0052	; ????
     20a:	08 00       	.word	0x0008	; ????
     20c:	93 00       	.word	0x0093	; ????
     20e:	08 00       	.word	0x0008	; ????
     210:	52 00       	.word	0x0052	; ????
     212:	08 00       	.word	0x0008	; ????
     214:	52 00       	.word	0x0052	; ????
     216:	08 00       	.word	0x0008	; ????
     218:	b9 00       	.word	0x00b9	; ????
     21a:	f0 ff       	sbrs	r31, 0
     21c:	93 00       	.word	0x0093	; ????
     21e:	f0 ff       	sbrs	r31, 0
     220:	7b 00       	.word	0x007b	; ????
     222:	f0 ff       	sbrs	r31, 0
     224:	dc 00       	.word	0x00dc	; ????
     226:	f0 ff       	sbrs	r31, 0
     228:	b9 00       	.word	0x00b9	; ????
     22a:	f0 ff       	sbrs	r31, 0
     22c:	7b 00       	.word	0x007b	; ????
     22e:	f0 ff       	sbrs	r31, 0
     230:	93 00       	.word	0x0093	; ????
     232:	f0 ff       	sbrs	r31, 0
     234:	b9 00       	.word	0x00b9	; ????
     236:	f0 ff       	sbrs	r31, 0
     238:	dc 00       	.word	0x00dc	; ????
     23a:	f0 ff       	sbrs	r31, 0
     23c:	b9 00       	.word	0x00b9	; ????
     23e:	f0 ff       	sbrs	r31, 0
     240:	93 00       	.word	0x0093	; ????
     242:	f0 ff       	sbrs	r31, 0
     244:	7b 00       	.word	0x007b	; ????
     246:	f0 ff       	sbrs	r31, 0
	...
     388:	b8 01       	movw	r22, r16
     38a:	04 00       	.word	0x0004	; ????
     38c:	b8 01       	movw	r22, r16
     38e:	04 00       	.word	0x0004	; ????
     390:	b8 01       	movw	r22, r16
     392:	04 00       	.word	0x0004	; ????
     394:	5d 01       	movw	r10, r26
     396:	f8 ff       	.word	0xfff8	; ????
     398:	0b 02       	muls	r16, r27
     39a:	10 00       	.word	0x0010	; ????
     39c:	b8 01       	movw	r22, r16
     39e:	04 00       	.word	0x0004	; ????
     3a0:	5d 01       	movw	r10, r26
     3a2:	f8 ff       	.word	0xfff8	; ????
     3a4:	0b 02       	muls	r16, r27
     3a6:	10 00       	.word	0x0010	; ????
     3a8:	b8 01       	movw	r22, r16
     3aa:	02 00       	.word	0x0002	; ????
     3ac:	93 02       	muls	r25, r19
     3ae:	04 00       	.word	0x0004	; ????
     3b0:	93 02       	muls	r25, r19
     3b2:	04 00       	.word	0x0004	; ????
     3b4:	93 02       	muls	r25, r19
     3b6:	04 00       	.word	0x0004	; ????
     3b8:	ba 02       	muls	r27, r26
     3ba:	f8 ff       	.word	0xfff8	; ????
     3bc:	0b 02       	muls	r16, r27
     3be:	10 00       	.word	0x0010	; ????
     3c0:	b8 01       	movw	r22, r16
     3c2:	04 00       	.word	0x0004	; ????
     3c4:	5d 01       	movw	r10, r26
     3c6:	f8 ff       	.word	0xfff8	; ????
     3c8:	0b 02       	muls	r16, r27
     3ca:	10 00       	.word	0x0010	; ????
     3cc:	b8 01       	movw	r22, r16
     3ce:	02 00       	.word	0x0002	; ????
     3d0:	70 03       	mulsu	r23, r16
     3d2:	04 00       	.word	0x0004	; ????
     3d4:	b8 01       	movw	r22, r16
     3d6:	f8 ff       	.word	0xfff8	; ????
     3d8:	b8 01       	movw	r22, r16
     3da:	10 00       	.word	0x0010	; ????
     3dc:	70 03       	mulsu	r23, r16
     3de:	04 00       	.word	0x0004	; ????
     3e0:	3f 03       	fmul	r19, r23
     3e2:	f8 ff       	.word	0xfff8	; ????
     3e4:	10 03       	mulsu	r17, r16
     3e6:	10 00       	.word	0x0010	; ????
     3e8:	6e 02       	muls	r22, r30
     3ea:	10 00       	.word	0x0010	; ????
     3ec:	4b 02       	muls	r20, r27
     3ee:	10 00       	.word	0x0010	; ????
     3f0:	6e 02       	muls	r22, r30
     3f2:	08 00       	.word	0x0008	; ????
     3f4:	00 00       	nop
     3f6:	08 00       	.word	0x0008	; ????
     3f8:	b8 01       	movw	r22, r16
     3fa:	08 00       	.word	0x0008	; ????
     3fc:	6e 02       	muls	r22, r30
     3fe:	04 00       	.word	0x0004	; ????
     400:	4b 02       	muls	r20, r27
     402:	f8 ff       	.word	0xfff8	; ????
     404:	2a 02       	muls	r18, r26
     406:	10 00       	.word	0x0010	; ????
     408:	0b 02       	muls	r16, r27
     40a:	10 00       	.word	0x0010	; ????
     40c:	ee 01       	movw	r28, r28
     40e:	10 00       	.word	0x0010	; ????
     410:	0b 02       	muls	r16, r27
     412:	10 00       	.word	0x0010	; ????
     414:	00 00       	nop
     416:	08 00       	.word	0x0008	; ????
     418:	5d 01       	movw	r10, r26
     41a:	08 00       	.word	0x0008	; ????
     41c:	9f 01       	movw	r18, r30
     41e:	04 00       	.word	0x0004	; ????
     420:	5d 01       	movw	r10, r26
     422:	f8 ff       	.word	0xfff8	; ????
     424:	b8 01       	movw	r22, r16
     426:	f0 ff       	sbrs	r31, 0
     428:	0b 02       	muls	r16, r27
     42a:	04 00       	.word	0x0004	; ????
     42c:	b8 01       	movw	r22, r16
     42e:	f8 ff       	.word	0xfff8	; ????
     430:	0b 02       	muls	r16, r27
     432:	10 00       	.word	0x0010	; ????
     434:	93 02       	muls	r25, r19
     436:	02 00       	.word	0x0002	; ????
     438:	70 03       	mulsu	r23, r16
     43a:	04 00       	.word	0x0004	; ????
     43c:	b8 01       	movw	r22, r16
     43e:	f8 ff       	.word	0xfff8	; ????
     440:	b8 01       	movw	r22, r16
     442:	10 00       	.word	0x0010	; ????
     444:	70 03       	mulsu	r23, r16
     446:	04 00       	.word	0x0004	; ????
     448:	3f 03       	fmul	r19, r23
     44a:	f8 ff       	.word	0xfff8	; ????
     44c:	10 03       	mulsu	r17, r16
     44e:	10 00       	.word	0x0010	; ????
     450:	6e 02       	muls	r22, r30
     452:	10 00       	.word	0x0010	; ????
     454:	4b 02       	muls	r20, r27
     456:	10 00       	.word	0x0010	; ????
     458:	6e 02       	muls	r22, r30
     45a:	08 00       	.word	0x0008	; ????
     45c:	00 00       	nop
     45e:	08 00       	.word	0x0008	; ????
     460:	b8 01       	movw	r22, r16
     462:	08 00       	.word	0x0008	; ????
     464:	6e 02       	muls	r22, r30
     466:	04 00       	.word	0x0004	; ????
     468:	4b 02       	muls	r20, r27
     46a:	f8 ff       	.word	0xfff8	; ????
     46c:	2a 02       	muls	r18, r26
     46e:	10 00       	.word	0x0010	; ????
     470:	0b 02       	muls	r16, r27
     472:	10 00       	.word	0x0010	; ????
     474:	ee 01       	movw	r28, r28
     476:	10 00       	.word	0x0010	; ????
     478:	0b 02       	muls	r16, r27
     47a:	10 00       	.word	0x0010	; ????
     47c:	00 00       	nop
     47e:	08 00       	.word	0x0008	; ????
     480:	5d 01       	movw	r10, r26
     482:	08 00       	.word	0x0008	; ????
     484:	9f 01       	movw	r18, r30
     486:	04 00       	.word	0x0004	; ????
     488:	5d 01       	movw	r10, r26
     48a:	f8 ff       	.word	0xfff8	; ????
     48c:	b8 01       	movw	r22, r16
     48e:	f0 ff       	sbrs	r31, 0
     490:	b8 01       	movw	r22, r16
     492:	04 00       	.word	0x0004	; ????
     494:	5d 01       	movw	r10, r26
     496:	f8 ff       	.word	0xfff8	; ????
     498:	0b 02       	muls	r16, r27
     49a:	10 00       	.word	0x0010	; ????
     49c:	b8 01       	movw	r22, r16
     49e:	02 00       	.word	0x0002	; ????
	...
     6a8:	88 01       	movw	r16, r16
     6aa:	08 00       	.word	0x0008	; ????
     6ac:	06 01       	movw	r0, r12
     6ae:	08 00       	.word	0x0008	; ????
     6b0:	37 01       	movw	r6, r14
     6b2:	10 00       	.word	0x0010	; ????
     6b4:	5d 01       	movw	r10, r26
     6b6:	10 00       	.word	0x0010	; ????
     6b8:	88 01       	movw	r16, r16
     6ba:	08 00       	.word	0x0008	; ????
     6bc:	06 01       	movw	r0, r12
     6be:	08 00       	.word	0x0008	; ????
     6c0:	37 01       	movw	r6, r14
     6c2:	10 00       	.word	0x0010	; ????
     6c4:	5d 01       	movw	r10, r26
     6c6:	10 00       	.word	0x0010	; ????
     6c8:	88 01       	movw	r16, r16
     6ca:	08 00       	.word	0x0008	; ????
     6cc:	06 01       	movw	r0, r12
     6ce:	08 00       	.word	0x0008	; ????
     6d0:	37 01       	movw	r6, r14
     6d2:	10 00       	.word	0x0010	; ????
     6d4:	5d 01       	movw	r10, r26
     6d6:	10 00       	.word	0x0010	; ????
     6d8:	88 01       	movw	r16, r16
     6da:	08 00       	.word	0x0008	; ????
     6dc:	06 01       	movw	r0, r12
     6de:	08 00       	.word	0x0008	; ????
     6e0:	37 01       	movw	r6, r14
     6e2:	10 00       	.word	0x0010	; ????
     6e4:	5d 01       	movw	r10, r26
     6e6:	10 00       	.word	0x0010	; ????
     6e8:	88 01       	movw	r16, r16
     6ea:	08 00       	.word	0x0008	; ????
     6ec:	06 01       	movw	r0, r12
     6ee:	08 00       	.word	0x0008	; ????
     6f0:	4a 01       	movw	r8, r20
     6f2:	10 00       	.word	0x0010	; ????
     6f4:	5d 01       	movw	r10, r26
     6f6:	10 00       	.word	0x0010	; ????
     6f8:	88 01       	movw	r16, r16
     6fa:	08 00       	.word	0x0008	; ????
     6fc:	06 01       	movw	r0, r12
     6fe:	08 00       	.word	0x0008	; ????
     700:	4a 01       	movw	r8, r20
     702:	10 00       	.word	0x0010	; ????
     704:	5d 01       	movw	r10, r26
     706:	10 00       	.word	0x0010	; ????
     708:	88 01       	movw	r16, r16
     70a:	08 00       	.word	0x0008	; ????
     70c:	06 01       	movw	r0, r12
     70e:	08 00       	.word	0x0008	; ????
     710:	4a 01       	movw	r8, r20
     712:	10 00       	.word	0x0010	; ????
     714:	5d 01       	movw	r10, r26
     716:	10 00       	.word	0x0010	; ????
     718:	88 01       	movw	r16, r16
     71a:	08 00       	.word	0x0008	; ????
     71c:	06 01       	movw	r0, r12
     71e:	08 00       	.word	0x0008	; ????
     720:	4a 01       	movw	r8, r20
     722:	10 00       	.word	0x0010	; ????
     724:	5d 01       	movw	r10, r26
     726:	10 00       	.word	0x0010	; ????
     728:	88 01       	movw	r16, r16
     72a:	fc ff       	.word	0xfffc	; ????
     72c:	06 01       	movw	r0, r12
     72e:	fc ff       	.word	0xfffc	; ????
     730:	37 01       	movw	r6, r14
     732:	10 00       	.word	0x0010	; ????
     734:	5d 01       	movw	r10, r26
     736:	10 00       	.word	0x0010	; ????
     738:	88 01       	movw	r16, r16
     73a:	04 00       	.word	0x0004	; ????
     73c:	06 01       	movw	r0, r12
     73e:	04 00       	.word	0x0004	; ????
     740:	37 01       	movw	r6, r14
     742:	10 00       	.word	0x0010	; ????
     744:	5d 01       	movw	r10, r26
     746:	10 00       	.word	0x0010	; ????
     748:	26 01       	movw	r4, r12
     74a:	ff ff       	.word	0xffff	; ????
     74c:	5d 01       	movw	r10, r26
     74e:	fc ff       	.word	0xfffc	; ????
     750:	e9 00       	.word	0x00e9	; ????
     752:	fc ff       	.word	0xfffc	; ????
     754:	37 01       	movw	r6, r14
     756:	10 00       	.word	0x0010	; ????
     758:	26 01       	movw	r4, r12
     75a:	10 00       	.word	0x0010	; ????
     75c:	5d 01       	movw	r10, r26
     75e:	04 00       	.word	0x0004	; ????
     760:	e9 00       	.word	0x00e9	; ????
     762:	fc ff       	.word	0xfffc	; ????
     764:	37 01       	movw	r6, r14
     766:	10 00       	.word	0x0010	; ????
     768:	26 01       	movw	r4, r12
     76a:	10 00       	.word	0x0010	; ????
     76c:	06 01       	movw	r0, r12
     76e:	ff ff       	.word	0xffff	; ????
     770:	88 01       	movw	r16, r16
     772:	fc ff       	.word	0xfffc	; ????
     774:	06 01       	movw	r0, r12
     776:	fc ff       	.word	0xfffc	; ????
     778:	37 01       	movw	r6, r14
     77a:	10 00       	.word	0x0010	; ????
     77c:	5d 01       	movw	r10, r26
     77e:	10 00       	.word	0x0010	; ????
     780:	88 01       	movw	r16, r16
     782:	04 00       	.word	0x0004	; ????
     784:	06 01       	movw	r0, r12
     786:	04 00       	.word	0x0004	; ????
     788:	37 01       	movw	r6, r14
     78a:	10 00       	.word	0x0010	; ????
     78c:	5d 01       	movw	r10, r26
     78e:	10 00       	.word	0x0010	; ????
     790:	26 01       	movw	r4, r12
     792:	ff ff       	.word	0xffff	; ????
     794:	5d 01       	movw	r10, r26
     796:	fc ff       	.word	0xfffc	; ????
     798:	e9 00       	.word	0x00e9	; ????
     79a:	fc ff       	.word	0xfffc	; ????
     79c:	37 01       	movw	r6, r14
     79e:	10 00       	.word	0x0010	; ????
     7a0:	26 01       	movw	r4, r12
     7a2:	10 00       	.word	0x0010	; ????
     7a4:	5d 01       	movw	r10, r26
     7a6:	04 00       	.word	0x0004	; ????
     7a8:	e9 00       	.word	0x00e9	; ????
     7aa:	fc ff       	.word	0xfffc	; ????
     7ac:	37 01       	movw	r6, r14
     7ae:	10 00       	.word	0x0010	; ????
     7b0:	26 01       	movw	r4, r12
     7b2:	10 00       	.word	0x0010	; ????
     7b4:	06 01       	movw	r0, r12
     7b6:	ff ff       	.word	0xffff	; ????
     7b8:	88 01       	movw	r16, r16
     7ba:	fc ff       	.word	0xfffc	; ????
     7bc:	06 01       	movw	r0, r12
     7be:	fc ff       	.word	0xfffc	; ????
     7c0:	37 01       	movw	r6, r14
     7c2:	10 00       	.word	0x0010	; ????
     7c4:	5d 01       	movw	r10, r26
     7c6:	10 00       	.word	0x0010	; ????
     7c8:	88 01       	movw	r16, r16
     7ca:	04 00       	.word	0x0004	; ????
     7cc:	06 01       	movw	r0, r12
     7ce:	04 00       	.word	0x0004	; ????
     7d0:	37 01       	movw	r6, r14
     7d2:	10 00       	.word	0x0010	; ????
     7d4:	5d 01       	movw	r10, r26
     7d6:	10 00       	.word	0x0010	; ????
     7d8:	26 01       	movw	r4, r12
     7da:	fe ff       	.word	0xfffe	; ????
     7dc:	5d 01       	movw	r10, r26
     7de:	fc ff       	.word	0xfffc	; ????
     7e0:	e9 00       	.word	0x00e9	; ????
     7e2:	fc ff       	.word	0xfffc	; ????
     7e4:	26 01       	movw	r4, r12
     7e6:	f8 ff       	.word	0xfff8	; ????
     7e8:	37 01       	movw	r6, r14
     7ea:	f8 ff       	.word	0xfff8	; ????
     7ec:	26 01       	movw	r4, r12
     7ee:	f8 ff       	.word	0xfff8	; ????
     7f0:	e9 00       	.word	0x00e9	; ????
     7f2:	f8 ff       	.word	0xfff8	; ????
     7f4:	06 01       	movw	r0, r12
     7f6:	ff ff       	.word	0xffff	; ????
     7f8:	0b 02       	muls	r16, r27
     7fa:	fe ff       	.word	0xfffe	; ????
     7fc:	d2 01       	movw	r26, r4
     7fe:	fe ff       	.word	0xfffe	; ????
     800:	06 01       	movw	r0, r12
     802:	fe ff       	.word	0xfffe	; ????
     804:	88 01       	movw	r16, r16
     806:	fe ff       	.word	0xfffe	; ????
     808:	37 01       	movw	r6, r14
     80a:	fe ff       	.word	0xfffe	; ????
     80c:	37 01       	movw	r6, r14
     80e:	fc ff       	.word	0xfffc	; ????
     810:	5d 01       	movw	r10, r26
     812:	fc ff       	.word	0xfffc	; ????
     814:	88 01       	movw	r16, r16
     816:	ff ff       	.word	0xffff	; ????
     818:	0b 02       	muls	r16, r27
     81a:	fe ff       	.word	0xfffe	; ????
     81c:	d2 01       	movw	r26, r4
     81e:	fe ff       	.word	0xfffe	; ????
     820:	06 01       	movw	r0, r12
     822:	fe ff       	.word	0xfffe	; ????
     824:	88 01       	movw	r16, r16
     826:	fe ff       	.word	0xfffe	; ????
     828:	37 01       	movw	r6, r14
     82a:	fe ff       	.word	0xfffe	; ????
     82c:	37 01       	movw	r6, r14
     82e:	fc ff       	.word	0xfffc	; ????
     830:	26 01       	movw	r4, r12
     832:	fc ff       	.word	0xfffc	; ????
     834:	0b 02       	muls	r16, r27
     836:	08 00       	.word	0x0008	; ????
     838:	88 01       	movw	r16, r16
     83a:	08 00       	.word	0x0008	; ????
     83c:	9f 01       	movw	r18, r30
     83e:	10 00       	.word	0x0010	; ????
     840:	d2 01       	movw	r26, r4
     842:	10 00       	.word	0x0010	; ????
     844:	0b 02       	muls	r16, r27
     846:	08 00       	.word	0x0008	; ????
     848:	88 01       	movw	r16, r16
     84a:	08 00       	.word	0x0008	; ????
     84c:	9f 01       	movw	r18, r30
     84e:	10 00       	.word	0x0010	; ????
     850:	d2 01       	movw	r26, r4
     852:	10 00       	.word	0x0010	; ????
     854:	0b 02       	muls	r16, r27
     856:	08 00       	.word	0x0008	; ????
     858:	88 01       	movw	r16, r16
     85a:	08 00       	.word	0x0008	; ????
     85c:	9f 01       	movw	r18, r30
     85e:	10 00       	.word	0x0010	; ????
     860:	d2 01       	movw	r26, r4
     862:	10 00       	.word	0x0010	; ????
     864:	0b 02       	muls	r16, r27
     866:	08 00       	.word	0x0008	; ????
     868:	88 01       	movw	r16, r16
     86a:	08 00       	.word	0x0008	; ????
     86c:	9f 01       	movw	r18, r30
     86e:	10 00       	.word	0x0010	; ????
     870:	d2 01       	movw	r26, r4
     872:	10 00       	.word	0x0010	; ????
     874:	00 00       	nop
     876:	04 00       	.word	0x0004	; ????
     878:	3f 03       	fmul	r19, r23
     87a:	10 00       	.word	0x0010	; ????
     87c:	a4 03       	fmuls	r18, r20
     87e:	10 00       	.word	0x0010	; ????
     880:	17 04       	cpc	r1, r7
     882:	08 00       	.word	0x0008	; ????
     884:	10 03       	mulsu	r17, r16
     886:	08 00       	.word	0x0008	; ????
     888:	3f 03       	fmul	r19, r23
     88a:	10 00       	.word	0x0010	; ????
     88c:	a4 03       	fmuls	r18, r20
     88e:	10 00       	.word	0x0010	; ????
     890:	17 04       	cpc	r1, r7
     892:	08 00       	.word	0x0008	; ????
     894:	10 03       	mulsu	r17, r16
     896:	10 00       	.word	0x0010	; ????
     898:	3f 03       	fmul	r19, r23
     89a:	10 00       	.word	0x0010	; ????
     89c:	a4 03       	fmuls	r18, r20
     89e:	10 00       	.word	0x0010	; ????
     8a0:	17 04       	cpc	r1, r7
     8a2:	08 00       	.word	0x0008	; ????
     8a4:	10 03       	mulsu	r17, r16
     8a6:	08 00       	.word	0x0008	; ????
     8a8:	3f 03       	fmul	r19, r23
     8aa:	10 00       	.word	0x0010	; ????
     8ac:	a4 03       	fmuls	r18, r20
     8ae:	10 00       	.word	0x0010	; ????
	...
     9c8:	4a 01       	movw	r8, r20
     9ca:	fc ff       	.word	0xfffc	; ????
     9cc:	00 00       	nop
     9ce:	08 00       	.word	0x0008	; ????
     9d0:	72 01       	movw	r14, r4
     9d2:	08 00       	.word	0x0008	; ????
     9d4:	88 01       	movw	r16, r16
     9d6:	fc ff       	.word	0xfffc	; ????
     9d8:	00 00       	nop
     9da:	08 00       	.word	0x0008	; ????
     9dc:	37 01       	movw	r6, r14
     9de:	08 00       	.word	0x0008	; ????
     9e0:	4a 01       	movw	r8, r20
     9e2:	f8 ff       	.word	0xfff8	; ????
     9e4:	72 01       	movw	r14, r4
     9e6:	08 00       	.word	0x0008	; ????
     9e8:	88 01       	movw	r16, r16
     9ea:	f8 ff       	.word	0xfff8	; ????
     9ec:	0b 02       	muls	r16, r27
     9ee:	08 00       	.word	0x0008	; ????
     9f0:	ee 01       	movw	r28, r28
     9f2:	f8 ff       	.word	0xfff8	; ????
     9f4:	4a 01       	movw	r8, r20
     9f6:	08 00       	.word	0x0008	; ????
     9f8:	88 01       	movw	r16, r16
     9fa:	f8 ff       	.word	0xfff8	; ????
     9fc:	ee 01       	movw	r28, r28
     9fe:	08 00       	.word	0x0008	; ????
     a00:	d2 01       	movw	r26, r4
     a02:	02 00       	.word	0x0002	; ????
     a04:	b8 01       	movw	r22, r16
     a06:	f0 ff       	sbrs	r31, 0
     a08:	88 01       	movw	r16, r16
     a0a:	f0 ff       	sbrs	r31, 0
     a0c:	4a 01       	movw	r8, r20
     a0e:	f0 ff       	sbrs	r31, 0
     a10:	26 01       	movw	r4, r12
     a12:	f0 ff       	sbrs	r31, 0
     a14:	4a 01       	movw	r8, r20
     a16:	02 00       	.word	0x0002	; ????
     a18:	00 00       	nop
     a1a:	04 00       	.word	0x0004	; ????
     a1c:	00 00       	nop
     a1e:	08 00       	.word	0x0008	; ????
     a20:	37 01       	movw	r6, r14
     a22:	04 00       	.word	0x0004	; ????
     a24:	4a 01       	movw	r8, r20
     a26:	fc ff       	.word	0xfffc	; ????
     a28:	00 00       	nop
     a2a:	08 00       	.word	0x0008	; ????
     a2c:	72 01       	movw	r14, r4
     a2e:	08 00       	.word	0x0008	; ????
     a30:	88 01       	movw	r16, r16
     a32:	fc ff       	.word	0xfffc	; ????
     a34:	00 00       	nop
     a36:	08 00       	.word	0x0008	; ????
     a38:	37 01       	movw	r6, r14
     a3a:	08 00       	.word	0x0008	; ????
     a3c:	4a 01       	movw	r8, r20
     a3e:	f8 ff       	.word	0xfff8	; ????
     a40:	72 01       	movw	r14, r4
     a42:	08 00       	.word	0x0008	; ????
     a44:	88 01       	movw	r16, r16
     a46:	f8 ff       	.word	0xfff8	; ????
     a48:	0b 02       	muls	r16, r27
     a4a:	08 00       	.word	0x0008	; ????
     a4c:	ee 01       	movw	r28, r28
     a4e:	f8 ff       	.word	0xfff8	; ????
     a50:	88 01       	movw	r16, r16
     a52:	08 00       	.word	0x0008	; ????
     a54:	ee 01       	movw	r28, r28
     a56:	f8 ff       	.word	0xfff8	; ????
     a58:	93 02       	muls	r25, r19
     a5a:	08 00       	.word	0x0008	; ????
     a5c:	6e 02       	muls	r22, r30
     a5e:	01 00       	.word	0x0001	; ????
     a60:	4b 02       	muls	r20, r27
     a62:	02 00       	.word	0x0002	; ????
     a64:	00 00       	nop
     a66:	04 00       	.word	0x0004	; ????
     a68:	00 00       	nop
     a6a:	08 00       	.word	0x0008	; ????
     a6c:	37 01       	movw	r6, r14
     a6e:	08 00       	.word	0x0008	; ????
     a70:	4a 01       	movw	r8, r20
     a72:	fc ff       	.word	0xfffc	; ????
     a74:	00 00       	nop
     a76:	08 00       	.word	0x0008	; ????
     a78:	72 01       	movw	r14, r4
     a7a:	08 00       	.word	0x0008	; ????
     a7c:	88 01       	movw	r16, r16
     a7e:	fc ff       	.word	0xfffc	; ????
     a80:	00 00       	nop
     a82:	08 00       	.word	0x0008	; ????
     a84:	37 01       	movw	r6, r14
     a86:	08 00       	.word	0x0008	; ????
     a88:	4a 01       	movw	r8, r20
     a8a:	f8 ff       	.word	0xfff8	; ????
     a8c:	72 01       	movw	r14, r4
     a8e:	08 00       	.word	0x0008	; ????
     a90:	88 01       	movw	r16, r16
     a92:	f8 ff       	.word	0xfff8	; ????
     a94:	0b 02       	muls	r16, r27
     a96:	08 00       	.word	0x0008	; ????
     a98:	ee 01       	movw	r28, r28
     a9a:	f8 ff       	.word	0xfff8	; ????
     a9c:	4a 01       	movw	r8, r20
     a9e:	08 00       	.word	0x0008	; ????
     aa0:	88 01       	movw	r16, r16
     aa2:	f8 ff       	.word	0xfff8	; ????
     aa4:	ee 01       	movw	r28, r28
     aa6:	08 00       	.word	0x0008	; ????
     aa8:	d2 01       	movw	r26, r4
     aaa:	02 00       	.word	0x0002	; ????
     aac:	b8 01       	movw	r22, r16
     aae:	f0 ff       	sbrs	r31, 0
     ab0:	88 01       	movw	r16, r16
     ab2:	f0 ff       	sbrs	r31, 0
     ab4:	4a 01       	movw	r8, r20
     ab6:	f0 ff       	sbrs	r31, 0
     ab8:	26 01       	movw	r4, r12
     aba:	f0 ff       	sbrs	r31, 0
     abc:	4a 01       	movw	r8, r20
     abe:	fc ff       	.word	0xfffc	; ????
     ac0:	00 00       	nop
     ac2:	04 00       	.word	0x0004	; ????
     ac4:	00 00       	nop
     ac6:	04 00       	.word	0x0004	; ????
     ac8:	93 02       	muls	r25, r19
     aca:	f8 ff       	.word	0xfff8	; ????
     acc:	4b 02       	muls	r20, r27
     ace:	08 00       	.word	0x0008	; ????
     ad0:	ee 01       	movw	r28, r28
     ad2:	f8 ff       	.word	0xfff8	; ????
     ad4:	b8 01       	movw	r22, r16
     ad6:	08 00       	.word	0x0008	; ????
     ad8:	88 01       	movw	r16, r16
     ada:	f8 ff       	.word	0xfff8	; ????
     adc:	4a 01       	movw	r8, r20
     ade:	f8 ff       	.word	0xfff8	; ????
     ae0:	d2 01       	movw	r26, r4
     ae2:	10 00       	.word	0x0010	; ????
     ae4:	b8 01       	movw	r22, r16
     ae6:	f8 ff       	.word	0xfff8	; ????
     ae8:	d2 01       	movw	r26, r4
     aea:	10 00       	.word	0x0010	; ????
     aec:	b8 01       	movw	r22, r16
     aee:	f8 ff       	.word	0xfff8	; ????
     af0:	d2 01       	movw	r26, r4
     af2:	10 00       	.word	0x0010	; ????
     af4:	b8 01       	movw	r22, r16
     af6:	f8 ff       	.word	0xfff8	; ????
     af8:	d2 01       	movw	r26, r4
     afa:	10 00       	.word	0x0010	; ????
     afc:	b8 01       	movw	r22, r16
     afe:	f8 ff       	.word	0xfff8	; ????
     b00:	88 01       	movw	r16, r16
     b02:	f0 ff       	sbrs	r31, 0
     b04:	4a 01       	movw	r8, r20
     b06:	f0 ff       	sbrs	r31, 0
     b08:	26 01       	movw	r4, r12
     b0a:	f0 ff       	sbrs	r31, 0
     b0c:	4a 01       	movw	r8, r20
     b0e:	10 00       	.word	0x0010	; ????
     b10:	4a 01       	movw	r8, r20
     b12:	10 00       	.word	0x0010	; ????
     b14:	4a 01       	movw	r8, r20
     b16:	02 00       	.word	0x0002	; ????
	...
     ce8:	00 00       	nop
     cea:	04 00       	.word	0x0004	; ????
     cec:	00 00       	nop
     cee:	08 00       	.word	0x0008	; ????
     cf0:	00 00       	nop
     cf2:	08 00       	.word	0x0008	; ????
     cf4:	00 00       	nop
     cf6:	08 00       	.word	0x0008	; ????
     cf8:	4a 01       	movw	r8, r20
     cfa:	08 00       	.word	0x0008	; ????
     cfc:	b8 01       	movw	r22, r16
     cfe:	08 00       	.word	0x0008	; ????
     d00:	0b 02       	muls	r16, r27
     d02:	08 00       	.word	0x0008	; ????
     d04:	ee 01       	movw	r28, r28
     d06:	08 00       	.word	0x0008	; ????
     d08:	b8 01       	movw	r22, r16
     d0a:	08 00       	.word	0x0008	; ????
     d0c:	0b 02       	muls	r16, r27
     d0e:	08 00       	.word	0x0008	; ????
     d10:	b8 01       	movw	r22, r16
     d12:	08 00       	.word	0x0008	; ????
     d14:	ee 01       	movw	r28, r28
     d16:	08 00       	.word	0x0008	; ????
     d18:	b8 01       	movw	r22, r16
     d1a:	08 00       	.word	0x0008	; ????
     d1c:	5d 01       	movw	r10, r26
     d1e:	08 00       	.word	0x0008	; ????
     d20:	88 01       	movw	r16, r16
     d22:	08 00       	.word	0x0008	; ????
     d24:	4a 01       	movw	r8, r20
     d26:	02 00       	.word	0x0002	; ????
     d28:	4a 01       	movw	r8, r20
     d2a:	08 00       	.word	0x0008	; ????
     d2c:	b8 01       	movw	r22, r16
     d2e:	08 00       	.word	0x0008	; ????
     d30:	0b 02       	muls	r16, r27
     d32:	08 00       	.word	0x0008	; ????
     d34:	ee 01       	movw	r28, r28
     d36:	08 00       	.word	0x0008	; ????
     d38:	b8 01       	movw	r22, r16
     d3a:	08 00       	.word	0x0008	; ????
     d3c:	0b 02       	muls	r16, r27
     d3e:	08 00       	.word	0x0008	; ????
     d40:	b8 01       	movw	r22, r16
     d42:	08 00       	.word	0x0008	; ????
     d44:	0b 02       	muls	r16, r27
     d46:	08 00       	.word	0x0008	; ????
     d48:	b8 01       	movw	r22, r16
     d4a:	08 00       	.word	0x0008	; ????
     d4c:	4a 01       	movw	r8, r20
     d4e:	08 00       	.word	0x0008	; ????
     d50:	37 01       	movw	r6, r14
     d52:	08 00       	.word	0x0008	; ????
     d54:	26 01       	movw	r4, r12
     d56:	02 00       	.word	0x0002	; ????
     d58:	26 01       	movw	r4, r12
     d5a:	08 00       	.word	0x0008	; ????
     d5c:	5d 01       	movw	r10, r26
     d5e:	08 00       	.word	0x0008	; ????
     d60:	9f 01       	movw	r18, r30
     d62:	08 00       	.word	0x0008	; ????
     d64:	ee 01       	movw	r28, r28
     d66:	02 00       	.word	0x0002	; ????
     d68:	26 01       	movw	r4, r12
     d6a:	08 00       	.word	0x0008	; ????
     d6c:	5d 01       	movw	r10, r26
     d6e:	08 00       	.word	0x0008	; ????
     d70:	9f 01       	movw	r18, r30
     d72:	08 00       	.word	0x0008	; ????
     d74:	b8 01       	movw	r22, r16
     d76:	02 00       	.word	0x0002	; ????
     d78:	06 01       	movw	r0, r12
     d7a:	08 00       	.word	0x0008	; ????
     d7c:	06 01       	movw	r0, r12
     d7e:	08 00       	.word	0x0008	; ????
     d80:	88 01       	movw	r16, r16
     d82:	08 00       	.word	0x0008	; ????
     d84:	5d 01       	movw	r10, r26
     d86:	08 00       	.word	0x0008	; ????
     d88:	4a 01       	movw	r8, r20
     d8a:	08 00       	.word	0x0008	; ????
     d8c:	88 01       	movw	r16, r16
     d8e:	08 00       	.word	0x0008	; ????
     d90:	5d 01       	movw	r10, r26
     d92:	08 00       	.word	0x0008	; ????
     d94:	5d 01       	movw	r10, r26
     d96:	08 00       	.word	0x0008	; ????
     d98:	4a 01       	movw	r8, r20
     d9a:	08 00       	.word	0x0008	; ????
     d9c:	4a 01       	movw	r8, r20
     d9e:	08 00       	.word	0x0008	; ????
     da0:	9f 01       	movw	r18, r30
     da2:	08 00       	.word	0x0008	; ????
     da4:	b8 01       	movw	r22, r16
     da6:	02 00       	.word	0x0002	; ????
     da8:	00 00       	nop
     daa:	08 00       	.word	0x0008	; ????
     dac:	b8 01       	movw	r22, r16
     dae:	08 00       	.word	0x0008	; ????
     db0:	b8 01       	movw	r22, r16
     db2:	08 00       	.word	0x0008	; ????
     db4:	9f 01       	movw	r18, r30
     db6:	08 00       	.word	0x0008	; ????
     db8:	88 01       	movw	r16, r16
     dba:	02 00       	.word	0x0002	; ????
     dbc:	ee 01       	movw	r28, r28
     dbe:	08 00       	.word	0x0008	; ????
     dc0:	b8 01       	movw	r22, r16
     dc2:	08 00       	.word	0x0008	; ????
     dc4:	5d 01       	movw	r10, r26
     dc6:	08 00       	.word	0x0008	; ????
     dc8:	4a 01       	movw	r8, r20
     dca:	02 00       	.word	0x0002	; ????
     dcc:	4a 01       	movw	r8, r20
     dce:	08 00       	.word	0x0008	; ????
     dd0:	88 01       	movw	r16, r16
     dd2:	08 00       	.word	0x0008	; ????
     dd4:	4a 01       	movw	r8, r20
     dd6:	08 00       	.word	0x0008	; ????
     dd8:	26 01       	movw	r4, r12
     dda:	02 00       	.word	0x0002	; ????
     ddc:	26 01       	movw	r4, r12
     dde:	08 00       	.word	0x0008	; ????
     de0:	26 01       	movw	r4, r12
     de2:	08 00       	.word	0x0008	; ????
     de4:	5d 01       	movw	r10, r26
     de6:	08 00       	.word	0x0008	; ????
     de8:	37 01       	movw	r6, r14
     dea:	08 00       	.word	0x0008	; ????
     dec:	4a 01       	movw	r8, r20
     dee:	02 00       	.word	0x0002	; ????
     df0:	00 00       	nop
     df2:	08 00       	.word	0x0008	; ????
     df4:	4a 01       	movw	r8, r20
     df6:	08 00       	.word	0x0008	; ????
     df8:	b8 01       	movw	r22, r16
     dfa:	08 00       	.word	0x0008	; ????
     dfc:	0b 02       	muls	r16, r27
     dfe:	08 00       	.word	0x0008	; ????
     e00:	ee 01       	movw	r28, r28
     e02:	08 00       	.word	0x0008	; ????
     e04:	b8 01       	movw	r22, r16
     e06:	08 00       	.word	0x0008	; ????
     e08:	0b 02       	muls	r16, r27
     e0a:	08 00       	.word	0x0008	; ????
     e0c:	b8 01       	movw	r22, r16
     e0e:	08 00       	.word	0x0008	; ????
     e10:	ee 01       	movw	r28, r28
     e12:	08 00       	.word	0x0008	; ????
     e14:	b8 01       	movw	r22, r16
     e16:	08 00       	.word	0x0008	; ????
     e18:	5d 01       	movw	r10, r26
     e1a:	08 00       	.word	0x0008	; ????
     e1c:	88 01       	movw	r16, r16
     e1e:	08 00       	.word	0x0008	; ????
     e20:	4a 01       	movw	r8, r20
     e22:	02 00       	.word	0x0002	; ????
     e24:	4a 01       	movw	r8, r20
     e26:	08 00       	.word	0x0008	; ????
     e28:	b8 01       	movw	r22, r16
     e2a:	08 00       	.word	0x0008	; ????
     e2c:	0b 02       	muls	r16, r27
     e2e:	08 00       	.word	0x0008	; ????
     e30:	ee 01       	movw	r28, r28
     e32:	08 00       	.word	0x0008	; ????
     e34:	b8 01       	movw	r22, r16
     e36:	08 00       	.word	0x0008	; ????
     e38:	0b 02       	muls	r16, r27
     e3a:	08 00       	.word	0x0008	; ????
     e3c:	b8 01       	movw	r22, r16
     e3e:	08 00       	.word	0x0008	; ????
     e40:	0b 02       	muls	r16, r27
     e42:	08 00       	.word	0x0008	; ????
     e44:	b8 01       	movw	r22, r16
     e46:	08 00       	.word	0x0008	; ????
     e48:	4a 01       	movw	r8, r20
     e4a:	08 00       	.word	0x0008	; ????
     e4c:	37 01       	movw	r6, r14
     e4e:	08 00       	.word	0x0008	; ????
     e50:	26 01       	movw	r4, r12
     e52:	02 00       	.word	0x0002	; ????
     e54:	26 01       	movw	r4, r12
     e56:	08 00       	.word	0x0008	; ????
     e58:	5d 01       	movw	r10, r26
     e5a:	08 00       	.word	0x0008	; ????
     e5c:	9f 01       	movw	r18, r30
     e5e:	08 00       	.word	0x0008	; ????
     e60:	ee 01       	movw	r28, r28
     e62:	02 00       	.word	0x0002	; ????
     e64:	26 01       	movw	r4, r12
     e66:	08 00       	.word	0x0008	; ????
     e68:	5d 01       	movw	r10, r26
     e6a:	08 00       	.word	0x0008	; ????
     e6c:	9f 01       	movw	r18, r30
     e6e:	08 00       	.word	0x0008	; ????
     e70:	b8 01       	movw	r22, r16
     e72:	02 00       	.word	0x0002	; ????
     e74:	06 01       	movw	r0, r12
     e76:	08 00       	.word	0x0008	; ????
     e78:	06 01       	movw	r0, r12
     e7a:	08 00       	.word	0x0008	; ????
     e7c:	88 01       	movw	r16, r16
     e7e:	08 00       	.word	0x0008	; ????
     e80:	5d 01       	movw	r10, r26
     e82:	08 00       	.word	0x0008	; ????
     e84:	4a 01       	movw	r8, r20
     e86:	08 00       	.word	0x0008	; ????
     e88:	88 01       	movw	r16, r16
     e8a:	08 00       	.word	0x0008	; ????
     e8c:	5d 01       	movw	r10, r26
     e8e:	08 00       	.word	0x0008	; ????
     e90:	5d 01       	movw	r10, r26
     e92:	08 00       	.word	0x0008	; ????
     e94:	4a 01       	movw	r8, r20
     e96:	08 00       	.word	0x0008	; ????
     e98:	4a 01       	movw	r8, r20
     e9a:	08 00       	.word	0x0008	; ????
     e9c:	9f 01       	movw	r18, r30
     e9e:	08 00       	.word	0x0008	; ????
     ea0:	b8 01       	movw	r22, r16
     ea2:	02 00       	.word	0x0002	; ????
     ea4:	00 00       	nop
     ea6:	08 00       	.word	0x0008	; ????
     ea8:	b8 01       	movw	r22, r16
     eaa:	08 00       	.word	0x0008	; ????
     eac:	b8 01       	movw	r22, r16
     eae:	08 00       	.word	0x0008	; ????
     eb0:	9f 01       	movw	r18, r30
     eb2:	08 00       	.word	0x0008	; ????
     eb4:	88 01       	movw	r16, r16
     eb6:	02 00       	.word	0x0002	; ????
     eb8:	ee 01       	movw	r28, r28
     eba:	08 00       	.word	0x0008	; ????
     ebc:	b8 01       	movw	r22, r16
     ebe:	08 00       	.word	0x0008	; ????
     ec0:	5d 01       	movw	r10, r26
     ec2:	08 00       	.word	0x0008	; ????
     ec4:	4a 01       	movw	r8, r20
     ec6:	02 00       	.word	0x0002	; ????
     ec8:	4a 01       	movw	r8, r20
     eca:	08 00       	.word	0x0008	; ????
     ecc:	88 01       	movw	r16, r16
     ece:	08 00       	.word	0x0008	; ????
     ed0:	4a 01       	movw	r8, r20
     ed2:	08 00       	.word	0x0008	; ????
     ed4:	26 01       	movw	r4, r12
     ed6:	02 00       	.word	0x0002	; ????
     ed8:	26 01       	movw	r4, r12
     eda:	08 00       	.word	0x0008	; ????
     edc:	26 01       	movw	r4, r12
     ede:	08 00       	.word	0x0008	; ????
     ee0:	5d 01       	movw	r10, r26
     ee2:	08 00       	.word	0x0008	; ????
     ee4:	37 01       	movw	r6, r14
     ee6:	08 00       	.word	0x0008	; ????
     ee8:	4a 01       	movw	r8, r20
     eea:	02 00       	.word	0x0002	; ????
	...

00001008 <__ctors_end>:
    1008:	11 24       	eor	r1, r1
    100a:	1f be       	out	0x3f, r1	; 63
    100c:	cf ef       	ldi	r28, 0xFF	; 255
    100e:	d8 e0       	ldi	r29, 0x08	; 8
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	cd bf       	out	0x3d, r28	; 61

00001014 <__do_copy_data>:
    1014:	11 e0       	ldi	r17, 0x01	; 1
    1016:	a0 e0       	ldi	r26, 0x00	; 0
    1018:	b1 e0       	ldi	r27, 0x01	; 1
    101a:	ea e6       	ldi	r30, 0x6A	; 106
    101c:	f4 e2       	ldi	r31, 0x24	; 36
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <__do_copy_data+0x10>
    1020:	05 90       	lpm	r0, Z+
    1022:	0d 92       	st	X+, r0
    1024:	a4 38       	cpi	r26, 0x84	; 132
    1026:	b1 07       	cpc	r27, r17
    1028:	d9 f7       	brne	.-10     	; 0x1020 <__do_copy_data+0xc>

0000102a <__do_clear_bss>:
    102a:	21 e0       	ldi	r18, 0x01	; 1
    102c:	a4 e8       	ldi	r26, 0x84	; 132
    102e:	b1 e0       	ldi	r27, 0x01	; 1
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <.do_clear_bss_start>

00001032 <.do_clear_bss_loop>:
    1032:	1d 92       	st	X+, r1

00001034 <.do_clear_bss_start>:
    1034:	a1 3b       	cpi	r26, 0xB1	; 177
    1036:	b2 07       	cpc	r27, r18
    1038:	e1 f7       	brne	.-8      	; 0x1032 <.do_clear_bss_loop>
    103a:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <main>
    103e:	0c 94 33 12 	jmp	0x2466	; 0x2466 <_exit>

00001042 <__bad_interrupt>:
    1042:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001046 <_Z7powerOfii>:
		return true;
	}
	else{
		return false;
	}
}
    1046:	9c 01       	movw	r18, r24
    1048:	81 e0       	ldi	r24, 0x01	; 1
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	61 15       	cp	r22, r1
    104e:	71 05       	cpc	r23, r1
    1050:	59 f0       	breq	.+22     	; 0x1068 <_Z7powerOfii+0x22>
    1052:	ac 01       	movw	r20, r24
    1054:	42 9f       	mul	r20, r18
    1056:	c0 01       	movw	r24, r0
    1058:	43 9f       	mul	r20, r19
    105a:	90 0d       	add	r25, r0
    105c:	52 9f       	mul	r21, r18
    105e:	90 0d       	add	r25, r0
    1060:	11 24       	eor	r1, r1
    1062:	61 50       	subi	r22, 0x01	; 1
    1064:	71 09       	sbc	r23, r1
    1066:	f2 cf       	rjmp	.-28     	; 0x104c <_Z7powerOfii+0x6>
    1068:	08 95       	ret

0000106a <_Z9ringAlarmv>:
void ringAlarm(){
	LCD_Clear();
    106a:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <_Z9LCD_Clearv>
	LCD_String("RING!!");
    106e:	89 e5       	ldi	r24, 0x59	; 89
    1070:	91 e0       	ldi	r25, 0x01	; 1
    1072:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	play(0);
    1076:	80 e0       	ldi	r24, 0x00	; 0
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <_Z4playi>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    107e:	2f e7       	ldi	r18, 0x7F	; 127
    1080:	8a e1       	ldi	r24, 0x1A	; 26
    1082:	96 e0       	ldi	r25, 0x06	; 6
    1084:	21 50       	subi	r18, 0x01	; 1
    1086:	80 40       	sbci	r24, 0x00	; 0
    1088:	90 40       	sbci	r25, 0x00	; 0
    108a:	e1 f7       	brne	.-8      	; 0x1084 <_Z9ringAlarmv+0x1a>
    108c:	00 c0       	rjmp	.+0      	; 0x108e <_Z9ringAlarmv+0x24>
    108e:	00 00       	nop
    1090:	08 95       	ret

00001092 <_Z8setAlarmi>:
	_delay_ms(2000);
}
void setAlarm(int alarm_time){
	if (alarm_time<2400){
    1092:	80 36       	cpi	r24, 0x60	; 96
    1094:	29 e0       	ldi	r18, 0x09	; 9
    1096:	92 07       	cpc	r25, r18
    1098:	8c f4       	brge	.+34     	; 0x10bc <_Z8setAlarmi+0x2a>
		alarmArray[numberOfAlarms] = alarm_time;
    109a:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <numberOfAlarms>
    109e:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <numberOfAlarms+0x1>
    10a2:	f9 01       	movw	r30, r18
    10a4:	ee 0f       	add	r30, r30
    10a6:	ff 1f       	adc	r31, r31
    10a8:	e5 57       	subi	r30, 0x75	; 117
    10aa:	fe 4f       	sbci	r31, 0xFE	; 254
    10ac:	91 83       	std	Z+1, r25	; 0x01
    10ae:	80 83       	st	Z, r24
		numberOfAlarms++;
    10b0:	2f 5f       	subi	r18, 0xFF	; 255
    10b2:	3f 4f       	sbci	r19, 0xFF	; 255
    10b4:	30 93 a0 01 	sts	0x01A0, r19	; 0x8001a0 <numberOfAlarms+0x1>
    10b8:	20 93 9f 01 	sts	0x019F, r18	; 0x80019f <numberOfAlarms>
    10bc:	08 95       	ret

000010be <_Z16updateAlarmArrayi>:
	}
}
void updateAlarmArray(int removeAlarm){
	for (int i=0;i<numberOfAlarms;i++){
    10be:	20 e0       	ldi	r18, 0x00	; 0
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	40 91 9f 01 	lds	r20, 0x019F	; 0x80019f <numberOfAlarms>
    10c6:	50 91 a0 01 	lds	r21, 0x01A0	; 0x8001a0 <numberOfAlarms+0x1>
    10ca:	24 17       	cp	r18, r20
    10cc:	35 07       	cpc	r19, r21
    10ce:	ac f4       	brge	.+42     	; 0x10fa <_Z16updateAlarmArrayi+0x3c>
		if (i<removeAlarm){
    10d0:	28 17       	cp	r18, r24
    10d2:	39 07       	cpc	r19, r25
    10d4:	7c f0       	brlt	.+30     	; 0x10f4 <_Z16updateAlarmArrayi+0x36>
			alarmArray[i] = alarmArray[i];
		}
		else{
			alarmArray[i] = alarmArray[i+1];
    10d6:	f9 01       	movw	r30, r18
    10d8:	31 96       	adiw	r30, 0x01	; 1
    10da:	ee 0f       	add	r30, r30
    10dc:	ff 1f       	adc	r31, r31
    10de:	e5 57       	subi	r30, 0x75	; 117
    10e0:	fe 4f       	sbci	r31, 0xFE	; 254
    10e2:	40 81       	ld	r20, Z
    10e4:	51 81       	ldd	r21, Z+1	; 0x01
    10e6:	f9 01       	movw	r30, r18
    10e8:	ee 0f       	add	r30, r30
    10ea:	ff 1f       	adc	r31, r31
    10ec:	e5 57       	subi	r30, 0x75	; 117
    10ee:	fe 4f       	sbci	r31, 0xFE	; 254
    10f0:	51 83       	std	Z+1, r21	; 0x01
    10f2:	40 83       	st	Z, r20
		alarmArray[numberOfAlarms] = alarm_time;
		numberOfAlarms++;
	}
}
void updateAlarmArray(int removeAlarm){
	for (int i=0;i<numberOfAlarms;i++){
    10f4:	2f 5f       	subi	r18, 0xFF	; 255
    10f6:	3f 4f       	sbci	r19, 0xFF	; 255
    10f8:	e4 cf       	rjmp	.-56     	; 0x10c2 <_Z16updateAlarmArrayi+0x4>
    10fa:	08 95       	ret

000010fc <_Z10checkAlarmv>:
		else{
			alarmArray[i] = alarmArray[i+1];
		}
	}
}
void checkAlarm(){
    10fc:	cf 92       	push	r12
    10fe:	df 92       	push	r13
    1100:	ef 92       	push	r14
    1102:	ff 92       	push	r15
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
	if (numberOfAlarms != 0){
    110c:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <numberOfAlarms>
    1110:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <numberOfAlarms+0x1>
    1114:	89 2b       	or	r24, r25
    1116:	09 f4       	brne	.+2      	; 0x111a <_Z10checkAlarmv+0x1e>
    1118:	4e c0       	rjmp	.+156    	; 0x11b6 <_Z10checkAlarmv+0xba>
		ds1307_getdate(&year, &month, &day, &dayofweek, &hour, &minute, &second);
    111a:	0f 2e       	mov	r0, r31
    111c:	f4 e8       	ldi	r31, 0x84	; 132
    111e:	cf 2e       	mov	r12, r31
    1120:	f1 e0       	ldi	r31, 0x01	; 1
    1122:	df 2e       	mov	r13, r31
    1124:	f0 2d       	mov	r31, r0
    1126:	0f 2e       	mov	r0, r31
    1128:	f5 e8       	ldi	r31, 0x85	; 133
    112a:	ef 2e       	mov	r14, r31
    112c:	f1 e0       	ldi	r31, 0x01	; 1
    112e:	ff 2e       	mov	r15, r31
    1130:	f0 2d       	mov	r31, r0
    1132:	06 e8       	ldi	r16, 0x86	; 134
    1134:	11 e0       	ldi	r17, 0x01	; 1
    1136:	27 e8       	ldi	r18, 0x87	; 135
    1138:	31 e0       	ldi	r19, 0x01	; 1
    113a:	48 e8       	ldi	r20, 0x88	; 136
    113c:	51 e0       	ldi	r21, 0x01	; 1
    113e:	69 e8       	ldi	r22, 0x89	; 137
    1140:	71 e0       	ldi	r23, 0x01	; 1
    1142:	8a e8       	ldi	r24, 0x8A	; 138
    1144:	91 e0       	ldi	r25, 0x01	; 1
    1146:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <_Z14ds1307_getdatePhS_S_S_S_S_S_>
		for (int i = 0; i <= numberOfAlarms;i++){
    114a:	c0 e0       	ldi	r28, 0x00	; 0
    114c:	d0 e0       	ldi	r29, 0x00	; 0
    114e:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <numberOfAlarms>
    1152:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <numberOfAlarms+0x1>
    1156:	8c 17       	cp	r24, r28
    1158:	9d 07       	cpc	r25, r29
    115a:	6c f1       	brlt	.+90     	; 0x11b6 <_Z10checkAlarmv+0xba>
			if (alarmArray[i]/100 == hour && alarmArray[i]%100 == minute){
    115c:	fe 01       	movw	r30, r28
    115e:	ee 0f       	add	r30, r30
    1160:	ff 1f       	adc	r31, r31
    1162:	e5 57       	subi	r30, 0x75	; 117
    1164:	fe 4f       	sbci	r31, 0xFE	; 254
    1166:	20 81       	ld	r18, Z
    1168:	31 81       	ldd	r19, Z+1	; 0x01
    116a:	c9 01       	movw	r24, r18
    116c:	64 e6       	ldi	r22, 0x64	; 100
    116e:	70 e0       	ldi	r23, 0x00	; 0
    1170:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__divmodhi4>
    1174:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <hour>
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	68 17       	cp	r22, r24
    117c:	79 07       	cpc	r23, r25
    117e:	c9 f4       	brne	.+50     	; 0x11b2 <_Z10checkAlarmv+0xb6>
    1180:	c9 01       	movw	r24, r18
    1182:	64 e6       	ldi	r22, 0x64	; 100
    1184:	70 e0       	ldi	r23, 0x00	; 0
    1186:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__divmodhi4>
    118a:	20 91 85 01 	lds	r18, 0x0185	; 0x800185 <minute>
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	82 17       	cp	r24, r18
    1192:	93 07       	cpc	r25, r19
    1194:	71 f4       	brne	.+28     	; 0x11b2 <_Z10checkAlarmv+0xb6>
				ringAlarm();
    1196:	0e 94 35 08 	call	0x106a	; 0x106a <_Z9ringAlarmv>
				updateAlarmArray(i);
    119a:	ce 01       	movw	r24, r28
    119c:	0e 94 5f 08 	call	0x10be	; 0x10be <_Z16updateAlarmArrayi>
				numberOfAlarms--;
    11a0:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <numberOfAlarms>
    11a4:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <numberOfAlarms+0x1>
    11a8:	01 97       	sbiw	r24, 0x01	; 1
    11aa:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <numberOfAlarms+0x1>
    11ae:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <numberOfAlarms>
	}
}
void checkAlarm(){
	if (numberOfAlarms != 0){
		ds1307_getdate(&year, &month, &day, &dayofweek, &hour, &minute, &second);
		for (int i = 0; i <= numberOfAlarms;i++){
    11b2:	21 96       	adiw	r28, 0x01	; 1
    11b4:	cc cf       	rjmp	.-104    	; 0x114e <_Z10checkAlarmv+0x52>
				numberOfAlarms--;
			}
		}
		
	}
}
    11b6:	df 91       	pop	r29
    11b8:	cf 91       	pop	r28
    11ba:	1f 91       	pop	r17
    11bc:	0f 91       	pop	r16
    11be:	ff 90       	pop	r15
    11c0:	ef 90       	pop	r14
    11c2:	df 90       	pop	r13
    11c4:	cf 90       	pop	r12
    11c6:	08 95       	ret

000011c8 <_Z6getDayiii>:
	int s = clockTime[5];
	if ((0<y) & (y<99) & (0<m)&(m<13) & (0<d)&(d<32) & (0<=h)&(h<24) & (0<=M)&(M<60) & (0<=s)&(s<60)){
		ds1307_setdate(y, m, d, D, h, M, s);
	}
}
int getDay(int y, int m, int d){
    11c8:	cf 93       	push	r28
    11ca:	df 93       	push	r29
    11cc:	ec 01       	movw	r28, r24
	int days = 0;
	for (int i = 1;i<=y;i++){
    11ce:	21 e0       	ldi	r18, 0x01	; 1
    11d0:	30 e0       	ldi	r19, 0x00	; 0
	if ((0<y) & (y<99) & (0<m)&(m<13) & (0<d)&(d<32) & (0<=h)&(h<24) & (0<=M)&(M<60) & (0<=s)&(s<60)){
		ds1307_setdate(y, m, d, D, h, M, s);
	}
}
int getDay(int y, int m, int d){
	int days = 0;
    11d2:	e0 e0       	ldi	r30, 0x00	; 0
    11d4:	f0 e0       	ldi	r31, 0x00	; 0
	for (int i = 1;i<=y;i++){
    11d6:	c2 17       	cp	r28, r18
    11d8:	d3 07       	cpc	r29, r19
    11da:	6c f0       	brlt	.+26     	; 0x11f6 <_Z6getDayiii+0x2e>
		if (i%4 == 0){
    11dc:	c9 01       	movw	r24, r18
    11de:	83 70       	andi	r24, 0x03	; 3
    11e0:	99 27       	eor	r25, r25
    11e2:	89 2b       	or	r24, r25
    11e4:	19 f4       	brne	.+6      	; 0x11ec <_Z6getDayiii+0x24>
			days+= 366;
    11e6:	e2 59       	subi	r30, 0x92	; 146
    11e8:	fe 4f       	sbci	r31, 0xFE	; 254
    11ea:	02 c0       	rjmp	.+4      	; 0x11f0 <_Z6getDayiii+0x28>
		}
		else{
			days+= 365;
    11ec:	e3 59       	subi	r30, 0x93	; 147
    11ee:	fe 4f       	sbci	r31, 0xFE	; 254
		ds1307_setdate(y, m, d, D, h, M, s);
	}
}
int getDay(int y, int m, int d){
	int days = 0;
	for (int i = 1;i<=y;i++){
    11f0:	2f 5f       	subi	r18, 0xFF	; 255
    11f2:	3f 4f       	sbci	r19, 0xFF	; 255
    11f4:	f0 cf       	rjmp	.-32     	; 0x11d6 <_Z6getDayiii+0xe>
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	30 e0       	ldi	r19, 0x00	; 0
		else{
			days+= 365;
		}
		
	}
	for (int j = 0;j<m-1;j++){
    11fa:	db 01       	movw	r26, r22
    11fc:	11 97       	sbiw	r26, 0x01	; 1
    11fe:	2a 17       	cp	r18, r26
    1200:	3b 07       	cpc	r19, r27
    1202:	3c f5       	brge	.+78     	; 0x1252 <_Z6getDayiii+0x8a>
		if ((y%4==0) & (j == 1)){
    1204:	91 e0       	ldi	r25, 0x01	; 1
    1206:	de 01       	movw	r26, r28
    1208:	a3 70       	andi	r26, 0x03	; 3
    120a:	bb 27       	eor	r27, r27
    120c:	ab 2b       	or	r26, r27
    120e:	09 f0       	breq	.+2      	; 0x1212 <_Z6getDayiii+0x4a>
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	99 23       	and	r25, r25
    1214:	91 f0       	breq	.+36     	; 0x123a <_Z6getDayiii+0x72>
    1216:	91 e0       	ldi	r25, 0x01	; 1
    1218:	21 30       	cpi	r18, 0x01	; 1
    121a:	31 05       	cpc	r19, r1
    121c:	09 f0       	breq	.+2      	; 0x1220 <_Z6getDayiii+0x58>
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	99 23       	and	r25, r25
    1222:	59 f0       	breq	.+22     	; 0x123a <_Z6getDayiii+0x72>
			days+=monthsDays[j];
    1224:	d9 01       	movw	r26, r18
    1226:	aa 0f       	add	r26, r26
    1228:	bb 1f       	adc	r27, r27
    122a:	a0 50       	subi	r26, 0x00	; 0
    122c:	bf 4f       	sbci	r27, 0xFF	; 255
    122e:	8d 91       	ld	r24, X+
    1230:	9c 91       	ld	r25, X
    1232:	e8 0f       	add	r30, r24
    1234:	f9 1f       	adc	r31, r25
			days+=1;
    1236:	31 96       	adiw	r30, 0x01	; 1
    1238:	09 c0       	rjmp	.+18     	; 0x124c <_Z6getDayiii+0x84>
		}
		else{
			days +=monthsDays[j];
    123a:	d9 01       	movw	r26, r18
    123c:	aa 0f       	add	r26, r26
    123e:	bb 1f       	adc	r27, r27
    1240:	a0 50       	subi	r26, 0x00	; 0
    1242:	bf 4f       	sbci	r27, 0xFF	; 255
    1244:	8d 91       	ld	r24, X+
    1246:	9c 91       	ld	r25, X
    1248:	e8 0f       	add	r30, r24
    124a:	f9 1f       	adc	r31, r25
		else{
			days+= 365;
		}
		
	}
	for (int j = 0;j<m-1;j++){
    124c:	2f 5f       	subi	r18, 0xFF	; 255
    124e:	3f 4f       	sbci	r19, 0xFF	; 255
    1250:	d4 cf       	rjmp	.-88     	; 0x11fa <_Z6getDayiii+0x32>
		}
		else{
			days +=monthsDays[j];
		}
	}
	return (days+d+5)%7;
    1252:	4e 0f       	add	r20, r30
    1254:	5f 1f       	adc	r21, r31
    1256:	ca 01       	movw	r24, r20
    1258:	05 96       	adiw	r24, 0x05	; 5
    125a:	67 e0       	ldi	r22, 0x07	; 7
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__divmodhi4>
}
    1262:	df 91       	pop	r29
    1264:	cf 91       	pop	r28
    1266:	08 95       	ret

00001268 <_Z12setClockTimePi>:
			}
		}
		
	}
}
void setClockTime(int clockTime[6]){
    1268:	6f 92       	push	r6
    126a:	7f 92       	push	r7
    126c:	8f 92       	push	r8
    126e:	9f 92       	push	r9
    1270:	af 92       	push	r10
    1272:	bf 92       	push	r11
    1274:	cf 92       	push	r12
    1276:	df 92       	push	r13
    1278:	ef 92       	push	r14
    127a:	ff 92       	push	r15
    127c:	0f 93       	push	r16
    127e:	1f 93       	push	r17
    1280:	cf 93       	push	r28
    1282:	df 93       	push	r29
    1284:	ec 01       	movw	r28, r24
	int y = clockTime[0];
    1286:	88 80       	ld	r8, Y
    1288:	99 80       	ldd	r9, Y+1	; 0x01
	int m = clockTime[1];
    128a:	aa 80       	ldd	r10, Y+2	; 0x02
    128c:	bb 80       	ldd	r11, Y+3	; 0x03
	int d = clockTime[2];
    128e:	6c 80       	ldd	r6, Y+4	; 0x04
    1290:	7d 80       	ldd	r7, Y+5	; 0x05
	int D = getDay(y,m,d);
    1292:	a3 01       	movw	r20, r6
    1294:	b5 01       	movw	r22, r10
    1296:	c4 01       	movw	r24, r8
    1298:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <_Z6getDayiii>
	int h = clockTime[3];
    129c:	0e 81       	ldd	r16, Y+6	; 0x06
    129e:	1f 81       	ldd	r17, Y+7	; 0x07
	int M = clockTime[4];
    12a0:	e8 84       	ldd	r14, Y+8	; 0x08
    12a2:	f9 84       	ldd	r15, Y+9	; 0x09
	int s = clockTime[5];
    12a4:	ca 84       	ldd	r12, Y+10	; 0x0a
    12a6:	db 84       	ldd	r13, Y+11	; 0x0b
	if ((0<y) & (y<99) & (0<m)&(m<13) & (0<d)&(d<32) & (0<=h)&(h<24) & (0<=M)&(M<60) & (0<=s)&(s<60)){
    12a8:	94 01       	movw	r18, r8
    12aa:	21 50       	subi	r18, 0x01	; 1
    12ac:	31 09       	sbc	r19, r1
    12ae:	c1 e0       	ldi	r28, 0x01	; 1
    12b0:	22 36       	cpi	r18, 0x62	; 98
    12b2:	31 05       	cpc	r19, r1
    12b4:	08 f0       	brcs	.+2      	; 0x12b8 <_Z12setClockTimePi+0x50>
    12b6:	c0 e0       	ldi	r28, 0x00	; 0
    12b8:	21 e0       	ldi	r18, 0x01	; 1
    12ba:	1a 14       	cp	r1, r10
    12bc:	1b 04       	cpc	r1, r11
    12be:	0c f0       	brlt	.+2      	; 0x12c2 <_Z12setClockTimePi+0x5a>
    12c0:	20 e0       	ldi	r18, 0x00	; 0
    12c2:	61 e0       	ldi	r22, 0x01	; 1
    12c4:	9d e0       	ldi	r25, 0x0D	; 13
    12c6:	a9 16       	cp	r10, r25
    12c8:	b1 04       	cpc	r11, r1
    12ca:	0c f0       	brlt	.+2      	; 0x12ce <_Z12setClockTimePi+0x66>
    12cc:	60 e0       	ldi	r22, 0x00	; 0
    12ce:	71 e0       	ldi	r23, 0x01	; 1
    12d0:	16 14       	cp	r1, r6
    12d2:	17 04       	cpc	r1, r7
    12d4:	0c f0       	brlt	.+2      	; 0x12d8 <_Z12setClockTimePi+0x70>
    12d6:	70 e0       	ldi	r23, 0x00	; 0
    12d8:	51 e0       	ldi	r21, 0x01	; 1
    12da:	90 e2       	ldi	r25, 0x20	; 32
    12dc:	69 16       	cp	r6, r25
    12de:	71 04       	cpc	r7, r1
    12e0:	0c f0       	brlt	.+2      	; 0x12e4 <_Z12setClockTimePi+0x7c>
    12e2:	50 e0       	ldi	r21, 0x00	; 0
    12e4:	31 2f       	mov	r19, r17
    12e6:	30 95       	com	r19
    12e8:	33 1f       	adc	r19, r19
    12ea:	33 27       	eor	r19, r19
    12ec:	33 1f       	adc	r19, r19
    12ee:	41 e0       	ldi	r20, 0x01	; 1
    12f0:	08 31       	cpi	r16, 0x18	; 24
    12f2:	11 05       	cpc	r17, r1
    12f4:	0c f0       	brlt	.+2      	; 0x12f8 <_Z12setClockTimePi+0x90>
    12f6:	40 e0       	ldi	r20, 0x00	; 0
    12f8:	af 2d       	mov	r26, r15
    12fa:	a0 95       	com	r26
    12fc:	aa 1f       	adc	r26, r26
    12fe:	aa 27       	eor	r26, r26
    1300:	aa 1f       	adc	r26, r26
    1302:	b1 e0       	ldi	r27, 0x01	; 1
    1304:	9c e3       	ldi	r25, 0x3C	; 60
    1306:	e9 16       	cp	r14, r25
    1308:	f1 04       	cpc	r15, r1
    130a:	0c f0       	brlt	.+2      	; 0x130e <_Z12setClockTimePi+0xa6>
    130c:	b0 e0       	ldi	r27, 0x00	; 0
    130e:	9d 2d       	mov	r25, r13
    1310:	90 95       	com	r25
    1312:	e9 2f       	mov	r30, r25
    1314:	ee 1f       	adc	r30, r30
    1316:	ee 27       	eor	r30, r30
    1318:	ee 1f       	adc	r30, r30
    131a:	f1 e0       	ldi	r31, 0x01	; 1
    131c:	9c e3       	ldi	r25, 0x3C	; 60
    131e:	c9 16       	cp	r12, r25
    1320:	d1 04       	cpc	r13, r1
    1322:	0c f0       	brlt	.+2      	; 0x1326 <_Z12setClockTimePi+0xbe>
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	2c 23       	and	r18, r28
    1328:	62 23       	and	r22, r18
    132a:	67 23       	and	r22, r23
    132c:	56 23       	and	r21, r22
    132e:	95 2f       	mov	r25, r21
    1330:	93 23       	and	r25, r19
    1332:	49 23       	and	r20, r25
    1334:	4a 23       	and	r20, r26
    1336:	94 2f       	mov	r25, r20
    1338:	9b 23       	and	r25, r27
    133a:	9e 23       	and	r25, r30
    133c:	41 f0       	breq	.+16     	; 0x134e <_Z12setClockTimePi+0xe6>
    133e:	ff 23       	and	r31, r31
    1340:	31 f0       	breq	.+12     	; 0x134e <_Z12setClockTimePi+0xe6>
		ds1307_setdate(y, m, d, D, h, M, s);
    1342:	28 2f       	mov	r18, r24
    1344:	46 2d       	mov	r20, r6
    1346:	6a 2d       	mov	r22, r10
    1348:	88 2d       	mov	r24, r8
    134a:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <_Z14ds1307_setdatehhhhhhh>
	}
}
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	1f 91       	pop	r17
    1354:	0f 91       	pop	r16
    1356:	ff 90       	pop	r15
    1358:	ef 90       	pop	r14
    135a:	df 90       	pop	r13
    135c:	cf 90       	pop	r12
    135e:	bf 90       	pop	r11
    1360:	af 90       	pop	r10
    1362:	9f 90       	pop	r9
    1364:	8f 90       	pop	r8
    1366:	7f 90       	pop	r7
    1368:	6f 90       	pop	r6
    136a:	08 95       	ret

0000136c <_Z11displayTimev>:
			days +=monthsDays[j];
		}
	}
	return (days+d+5)%7;
}
void displayTime(){
    136c:	cf 92       	push	r12
    136e:	df 92       	push	r13
    1370:	ef 92       	push	r14
    1372:	ff 92       	push	r15
    1374:	0f 93       	push	r16
    1376:	1f 93       	push	r17
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
    137c:	cd b7       	in	r28, 0x3d	; 61
    137e:	de b7       	in	r29, 0x3e	; 62
    1380:	6e 97       	sbiw	r28, 0x1e	; 30
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	de bf       	out	0x3e, r29	; 62
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	cd bf       	out	0x3d, r28	; 61
	ds1307_getdate(&year, &month, &day, &dayofweek, &hour, &minute, &second);
    138c:	0f 2e       	mov	r0, r31
    138e:	f4 e8       	ldi	r31, 0x84	; 132
    1390:	cf 2e       	mov	r12, r31
    1392:	f1 e0       	ldi	r31, 0x01	; 1
    1394:	df 2e       	mov	r13, r31
    1396:	f0 2d       	mov	r31, r0
    1398:	0f 2e       	mov	r0, r31
    139a:	f5 e8       	ldi	r31, 0x85	; 133
    139c:	ef 2e       	mov	r14, r31
    139e:	f1 e0       	ldi	r31, 0x01	; 1
    13a0:	ff 2e       	mov	r15, r31
    13a2:	f0 2d       	mov	r31, r0
    13a4:	06 e8       	ldi	r16, 0x86	; 134
    13a6:	11 e0       	ldi	r17, 0x01	; 1
    13a8:	27 e8       	ldi	r18, 0x87	; 135
    13aa:	31 e0       	ldi	r19, 0x01	; 1
    13ac:	48 e8       	ldi	r20, 0x88	; 136
    13ae:	51 e0       	ldi	r21, 0x01	; 1
    13b0:	69 e8       	ldi	r22, 0x89	; 137
    13b2:	71 e0       	ldi	r23, 0x01	; 1
    13b4:	8a e8       	ldi	r24, 0x8A	; 138
    13b6:	91 e0       	ldi	r25, 0x01	; 1
    13b8:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <_Z14ds1307_getdatePhS_S_S_S_S_S_>
	char secondS[10];char minuteS[10];char hourS[10];
	itoa(second,secondS,10);itoa(minute,minuteS,10);itoa(hour,hourS,10);
    13bc:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <__data_end>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    13c0:	4a e0       	ldi	r20, 0x0A	; 10
    13c2:	be 01       	movw	r22, r28
    13c4:	6f 5f       	subi	r22, 0xFF	; 255
    13c6:	7f 4f       	sbci	r23, 0xFF	; 255
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__itoa_ncheck>
    13ce:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <minute>
    13d2:	4a e0       	ldi	r20, 0x0A	; 10
    13d4:	be 01       	movw	r22, r28
    13d6:	65 5f       	subi	r22, 0xF5	; 245
    13d8:	7f 4f       	sbci	r23, 0xFF	; 255
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__itoa_ncheck>
    13e0:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <hour>
    13e4:	4a e0       	ldi	r20, 0x0A	; 10
    13e6:	be 01       	movw	r22, r28
    13e8:	6b 5e       	subi	r22, 0xEB	; 235
    13ea:	7f 4f       	sbci	r23, 0xFF	; 255
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__itoa_ncheck>
	LCD_Home(0);
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
	LCD_String(hourS);
    13fa:	ce 01       	movw	r24, r28
    13fc:	45 96       	adiw	r24, 0x15	; 21
    13fe:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	LCD_String(":");
    1402:	80 e6       	ldi	r24, 0x60	; 96
    1404:	91 e0       	ldi	r25, 0x01	; 1
    1406:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	LCD_String(minuteS);
    140a:	ce 01       	movw	r24, r28
    140c:	0b 96       	adiw	r24, 0x0b	; 11
    140e:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	LCD_String(":");
    1412:	80 e6       	ldi	r24, 0x60	; 96
    1414:	91 e0       	ldi	r25, 0x01	; 1
    1416:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	LCD_String(secondS);
    141a:	ce 01       	movw	r24, r28
    141c:	01 96       	adiw	r24, 0x01	; 1
    141e:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	//_delay_ms(1);

    1422:	6e 96       	adiw	r28, 0x1e	; 30
    1424:	0f b6       	in	r0, 0x3f	; 63
    1426:	f8 94       	cli
    1428:	de bf       	out	0x3e, r29	; 62
    142a:	0f be       	out	0x3f, r0	; 63
    142c:	cd bf       	out	0x3d, r28	; 61
    142e:	df 91       	pop	r29
    1430:	cf 91       	pop	r28
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	ff 90       	pop	r15
    1438:	ef 90       	pop	r14
    143a:	df 90       	pop	r13
    143c:	cf 90       	pop	r12
    143e:	08 95       	ret

00001440 <_Z11init_buzzerv>:
 
 volatile int sp = 1;    // This is a reference to stop the alarm with a button press
 
 void init_buzzer(){
	 // pins ports declaration
	 buzzer_DDR |= _BV(buzzer_PIN) ;			// make buzzer pin output
    1440:	84 b1       	in	r24, 0x04	; 4
    1442:	84 60       	ori	r24, 0x04	; 4
    1444:	84 b9       	out	0x04, r24	; 4
	 	
	 EICRA |= _BV(ISC01) | _BV(ISC00);		  // set rising edge method
    1446:	e9 e6       	ldi	r30, 0x69	; 105
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	80 81       	ld	r24, Z
    144c:	83 60       	ori	r24, 0x03	; 3
    144e:	80 83       	st	Z, r24
	 EIMSK |= _BV(INT0);					 // enable pin PD1 External interrupt
    1450:	8d b3       	in	r24, 0x1d	; 29
    1452:	81 60       	ori	r24, 0x01	; 1
    1454:	8d bb       	out	0x1d, r24	; 29
	 	
	 sei();								   //  this Enables the Global Interrupt Enable (I-bit) in the Status Register (SREG)
    1456:	78 94       	sei
    1458:	08 95       	ret

0000145a <_Z9Play_Noteff>:
	 
 }
 
 void Play_Note(float freq,float dur){
    145a:	4f 92       	push	r4
    145c:	5f 92       	push	r5
    145e:	6f 92       	push	r6
    1460:	7f 92       	push	r7
    1462:	8f 92       	push	r8
    1464:	9f 92       	push	r9
    1466:	af 92       	push	r10
    1468:	bf 92       	push	r11
    146a:	cf 92       	push	r12
    146c:	df 92       	push	r13
    146e:	ef 92       	push	r14
    1470:	ff 92       	push	r15
    1472:	cf 93       	push	r28
    1474:	df 93       	push	r29
    1476:	00 d0       	rcall	.+0      	; 0x1478 <_Z9Play_Noteff+0x1e>
    1478:	00 d0       	rcall	.+0      	; 0x147a <_Z9Play_Noteff+0x20>
    147a:	cd b7       	in	r28, 0x3d	; 61
    147c:	de b7       	in	r29, 0x3e	; 62
    147e:	6b 01       	movw	r12, r22
    1480:	7c 01       	movw	r14, r24
    1482:	49 01       	movw	r8, r18
    1484:	5a 01       	movw	r10, r20
	 // variables
	 long int i,cycles;
	 float half_period,period;
	 
	 if (freq != 0){
    1486:	20 e0       	ldi	r18, 0x00	; 0
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	a9 01       	movw	r20, r18
    148c:	0e 94 05 10 	call	0x200a	; 0x200a <__cmpsf2>
    1490:	88 23       	and	r24, r24
    1492:	09 f4       	brne	.+2      	; 0x1496 <_Z9Play_Noteff+0x3c>
    1494:	ad c0       	rjmp	.+346    	; 0x15f0 <_Z9Play_Noteff+0x196>
		 period=(1/freq)*1000;
    1496:	a7 01       	movw	r20, r14
    1498:	96 01       	movw	r18, r12
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	80 e8       	ldi	r24, 0x80	; 128
    14a0:	9f e3       	ldi	r25, 0x3F	; 63
    14a2:	0e 94 0a 10 	call	0x2014	; 0x2014 <__divsf3>
    14a6:	20 e0       	ldi	r18, 0x00	; 0
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	4a e7       	ldi	r20, 0x7A	; 122
    14ac:	54 e4       	ldi	r21, 0x44	; 68
    14ae:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    14b2:	6b 01       	movw	r12, r22
    14b4:	7c 01       	movw	r14, r24
		 cycles=dur/period;
    14b6:	9b 01       	movw	r18, r22
    14b8:	ac 01       	movw	r20, r24
    14ba:	c5 01       	movw	r24, r10
    14bc:	b4 01       	movw	r22, r8
    14be:	0e 94 0a 10 	call	0x2014	; 0x2014 <__divsf3>
    14c2:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__fixsfsi>
    14c6:	2b 01       	movw	r4, r22
    14c8:	3c 01       	movw	r6, r24
		 half_period = period/2;
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	40 e0       	ldi	r20, 0x00	; 0
    14d0:	5f e3       	ldi	r21, 0x3F	; 63
    14d2:	c7 01       	movw	r24, r14
    14d4:	b6 01       	movw	r22, r12
    14d6:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    14da:	69 83       	std	Y+1, r22	; 0x01
    14dc:	7a 83       	std	Y+2, r23	; 0x02
    14de:	8b 83       	std	Y+3, r24	; 0x03
    14e0:	9c 83       	std	Y+4, r25	; 0x04

		 for (i=0;i<cycles;i++)
    14e2:	81 2c       	mov	r8, r1
    14e4:	91 2c       	mov	r9, r1
    14e6:	54 01       	movw	r10, r8
    14e8:	84 14       	cp	r8, r4
    14ea:	95 04       	cpc	r9, r5
    14ec:	a6 04       	cpc	r10, r6
    14ee:	b7 04       	cpc	r11, r7
    14f0:	0c f0       	brlt	.+2      	; 0x14f4 <_Z9Play_Noteff+0x9a>
    14f2:	b8 c0       	rjmp	.+368    	; 0x1664 <_Z9Play_Noteff+0x20a>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	4a e7       	ldi	r20, 0x7A	; 122
    14fa:	53 e4       	ldi	r21, 0x43	; 67
    14fc:	69 81       	ldd	r22, Y+1	; 0x01
    14fe:	7a 81       	ldd	r23, Y+2	; 0x02
    1500:	8b 81       	ldd	r24, Y+3	; 0x03
    1502:	9c 81       	ldd	r25, Y+4	; 0x04
    1504:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1508:	6b 01       	movw	r12, r22
    150a:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    150c:	20 e0       	ldi	r18, 0x00	; 0
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	40 e8       	ldi	r20, 0x80	; 128
    1512:	5f e3       	ldi	r21, 0x3F	; 63
    1514:	0e 94 05 10 	call	0x200a	; 0x200a <__cmpsf2>
    1518:	88 23       	and	r24, r24
    151a:	2c f1       	brlt	.+74     	; 0x1566 <_Z9Play_Noteff+0x10c>
		__ticks = 1;
	else if (__tmp > 65535)
    151c:	20 e0       	ldi	r18, 0x00	; 0
    151e:	3f ef       	ldi	r19, 0xFF	; 255
    1520:	4f e7       	ldi	r20, 0x7F	; 127
    1522:	57 e4       	ldi	r21, 0x47	; 71
    1524:	c7 01       	movw	r24, r14
    1526:	b6 01       	movw	r22, r12
    1528:	0e 94 64 11 	call	0x22c8	; 0x22c8 <__gesf2>
    152c:	18 16       	cp	r1, r24
    152e:	b4 f4       	brge	.+44     	; 0x155c <_Z9Play_Noteff+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	40 e2       	ldi	r20, 0x20	; 32
    1536:	51 e4       	ldi	r21, 0x41	; 65
    1538:	69 81       	ldd	r22, Y+1	; 0x01
    153a:	7a 81       	ldd	r23, Y+2	; 0x02
    153c:	8b 81       	ldd	r24, Y+3	; 0x03
    153e:	9c 81       	ldd	r25, Y+4	; 0x04
    1540:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1544:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
		while(__ticks)
    1548:	61 15       	cp	r22, r1
    154a:	71 05       	cpc	r23, r1
    154c:	89 f0       	breq	.+34     	; 0x1570 <_Z9Play_Noteff+0x116>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    154e:	89 e1       	ldi	r24, 0x19	; 25
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	01 97       	sbiw	r24, 0x01	; 1
    1554:	f1 f7       	brne	.-4      	; 0x1552 <_Z9Play_Noteff+0xf8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1556:	61 50       	subi	r22, 0x01	; 1
    1558:	71 09       	sbc	r23, r1
    155a:	f6 cf       	rjmp	.-20     	; 0x1548 <_Z9Play_Noteff+0xee>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    155c:	c7 01       	movw	r24, r14
    155e:	b6 01       	movw	r22, r12
    1560:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
    1564:	02 c0       	rjmp	.+4      	; 0x156a <_Z9Play_Noteff+0x110>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1566:	61 e0       	ldi	r22, 0x01	; 1
    1568:	70 e0       	ldi	r23, 0x00	; 0
    156a:	cb 01       	movw	r24, r22
    156c:	01 97       	sbiw	r24, 0x01	; 1
    156e:	f1 f7       	brne	.-4      	; 0x156c <_Z9Play_Noteff+0x112>
		 {
			 //50% duty cycle
			 _delay_ms(half_period);
			 buzzer_PORT |= _BV(buzzer_PIN);
    1570:	85 b1       	in	r24, 0x05	; 5
    1572:	84 60       	ori	r24, 0x04	; 4
    1574:	85 b9       	out	0x05, r24	; 5
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	40 e8       	ldi	r20, 0x80	; 128
    157c:	5f e3       	ldi	r21, 0x3F	; 63
    157e:	c7 01       	movw	r24, r14
    1580:	b6 01       	movw	r22, r12
    1582:	0e 94 05 10 	call	0x200a	; 0x200a <__cmpsf2>
    1586:	88 23       	and	r24, r24
    1588:	2c f1       	brlt	.+74     	; 0x15d4 <_Z9Play_Noteff+0x17a>
		__ticks = 1;
	else if (__tmp > 65535)
    158a:	20 e0       	ldi	r18, 0x00	; 0
    158c:	3f ef       	ldi	r19, 0xFF	; 255
    158e:	4f e7       	ldi	r20, 0x7F	; 127
    1590:	57 e4       	ldi	r21, 0x47	; 71
    1592:	c7 01       	movw	r24, r14
    1594:	b6 01       	movw	r22, r12
    1596:	0e 94 64 11 	call	0x22c8	; 0x22c8 <__gesf2>
    159a:	18 16       	cp	r1, r24
    159c:	b4 f4       	brge	.+44     	; 0x15ca <_Z9Play_Noteff+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    159e:	20 e0       	ldi	r18, 0x00	; 0
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	40 e2       	ldi	r20, 0x20	; 32
    15a4:	51 e4       	ldi	r21, 0x41	; 65
    15a6:	69 81       	ldd	r22, Y+1	; 0x01
    15a8:	7a 81       	ldd	r23, Y+2	; 0x02
    15aa:	8b 81       	ldd	r24, Y+3	; 0x03
    15ac:	9c 81       	ldd	r25, Y+4	; 0x04
    15ae:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    15b2:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
		while(__ticks)
    15b6:	61 15       	cp	r22, r1
    15b8:	71 05       	cpc	r23, r1
    15ba:	89 f0       	breq	.+34     	; 0x15de <_Z9Play_Noteff+0x184>
    15bc:	89 e1       	ldi	r24, 0x19	; 25
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	01 97       	sbiw	r24, 0x01	; 1
    15c2:	f1 f7       	brne	.-4      	; 0x15c0 <_Z9Play_Noteff+0x166>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15c4:	61 50       	subi	r22, 0x01	; 1
    15c6:	71 09       	sbc	r23, r1
    15c8:	f6 cf       	rjmp	.-20     	; 0x15b6 <_Z9Play_Noteff+0x15c>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15ca:	c7 01       	movw	r24, r14
    15cc:	b6 01       	movw	r22, r12
    15ce:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <_Z9Play_Noteff+0x17e>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    15d4:	61 e0       	ldi	r22, 0x01	; 1
    15d6:	70 e0       	ldi	r23, 0x00	; 0
    15d8:	cb 01       	movw	r24, r22
    15da:	01 97       	sbiw	r24, 0x01	; 1
    15dc:	f1 f7       	brne	.-4      	; 0x15da <_Z9Play_Noteff+0x180>
			 _delay_ms(half_period);
			 buzzer_PORT &= ~ _BV(buzzer_PIN);
    15de:	85 b1       	in	r24, 0x05	; 5
    15e0:	8b 7f       	andi	r24, 0xFB	; 251
    15e2:	85 b9       	out	0x05, r24	; 5
	 if (freq != 0){
		 period=(1/freq)*1000;
		 cycles=dur/period;
		 half_period = period/2;

		 for (i=0;i<cycles;i++)
    15e4:	8f ef       	ldi	r24, 0xFF	; 255
    15e6:	88 1a       	sub	r8, r24
    15e8:	98 0a       	sbc	r9, r24
    15ea:	a8 0a       	sbc	r10, r24
    15ec:	b8 0a       	sbc	r11, r24
    15ee:	7c cf       	rjmp	.-264    	; 0x14e8 <_Z9Play_Noteff+0x8e>

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    15f0:	20 e0       	ldi	r18, 0x00	; 0
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	4a e7       	ldi	r20, 0x7A	; 122
    15f6:	53 e4       	ldi	r21, 0x43	; 67
    15f8:	c5 01       	movw	r24, r10
    15fa:	b4 01       	movw	r22, r8
    15fc:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1600:	6b 01       	movw	r12, r22
    1602:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    1604:	20 e0       	ldi	r18, 0x00	; 0
    1606:	30 e0       	ldi	r19, 0x00	; 0
    1608:	40 e8       	ldi	r20, 0x80	; 128
    160a:	5f e3       	ldi	r21, 0x3F	; 63
    160c:	0e 94 05 10 	call	0x200a	; 0x200a <__cmpsf2>
    1610:	88 23       	and	r24, r24
    1612:	1c f1       	brlt	.+70     	; 0x165a <_Z9Play_Noteff+0x200>
		__ticks = 1;
	else if (__tmp > 65535)
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	3f ef       	ldi	r19, 0xFF	; 255
    1618:	4f e7       	ldi	r20, 0x7F	; 127
    161a:	57 e4       	ldi	r21, 0x47	; 71
    161c:	c7 01       	movw	r24, r14
    161e:	b6 01       	movw	r22, r12
    1620:	0e 94 64 11 	call	0x22c8	; 0x22c8 <__gesf2>
    1624:	18 16       	cp	r1, r24
    1626:	a4 f4       	brge	.+40     	; 0x1650 <_Z9Play_Noteff+0x1f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1628:	20 e0       	ldi	r18, 0x00	; 0
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	40 e2       	ldi	r20, 0x20	; 32
    162e:	51 e4       	ldi	r21, 0x41	; 65
    1630:	c5 01       	movw	r24, r10
    1632:	b4 01       	movw	r22, r8
    1634:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1638:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
		while(__ticks)
    163c:	61 15       	cp	r22, r1
    163e:	71 05       	cpc	r23, r1
    1640:	89 f0       	breq	.+34     	; 0x1664 <_Z9Play_Noteff+0x20a>
    1642:	89 e1       	ldi	r24, 0x19	; 25
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	01 97       	sbiw	r24, 0x01	; 1
    1648:	f1 f7       	brne	.-4      	; 0x1646 <_Z9Play_Noteff+0x1ec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    164a:	61 50       	subi	r22, 0x01	; 1
    164c:	71 09       	sbc	r23, r1
    164e:	f6 cf       	rjmp	.-20     	; 0x163c <_Z9Play_Noteff+0x1e2>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1650:	c7 01       	movw	r24, r14
    1652:	b6 01       	movw	r22, r12
    1654:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
    1658:	02 c0       	rjmp	.+4      	; 0x165e <_Z9Play_Noteff+0x204>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    165a:	61 e0       	ldi	r22, 0x01	; 1
    165c:	70 e0       	ldi	r23, 0x00	; 0
    165e:	cb 01       	movw	r24, r22
    1660:	01 97       	sbiw	r24, 0x01	; 1
    1662:	f1 f7       	brne	.-4      	; 0x1660 <_Z9Play_Noteff+0x206>
	 }
	 else {
		 _delay_ms(dur);   // rest
	 }
	 return;
 }
    1664:	0f 90       	pop	r0
    1666:	0f 90       	pop	r0
    1668:	0f 90       	pop	r0
    166a:	0f 90       	pop	r0
    166c:	df 91       	pop	r29
    166e:	cf 91       	pop	r28
    1670:	ff 90       	pop	r15
    1672:	ef 90       	pop	r14
    1674:	df 90       	pop	r13
    1676:	cf 90       	pop	r12
    1678:	bf 90       	pop	r11
    167a:	af 90       	pop	r10
    167c:	9f 90       	pop	r9
    167e:	8f 90       	pop	r8
    1680:	7f 90       	pop	r7
    1682:	6f 90       	pop	r6
    1684:	5f 90       	pop	r5
    1686:	4f 90       	pop	r4
    1688:	08 95       	ret

0000168a <__vector_1>:
 
 /** External interrupt for INT0 (PD2) pin ISR function
 We will use this to stop currently playing melody **/

 ISR (INT0_vect)          //External interrupt Stop button ISR
 {
    168a:	1f 92       	push	r1
    168c:	0f 92       	push	r0
    168e:	0f b6       	in	r0, 0x3f	; 63
    1690:	0f 92       	push	r0
    1692:	11 24       	eor	r1, r1
    1694:	8f 93       	push	r24
    1696:	9f 93       	push	r25
	 sp=0;
    1698:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <sp+0x1>
    169c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <sp>
    16a0:	88 ea       	ldi	r24, 0xA8	; 168
    16a2:	91 e6       	ldi	r25, 0x61	; 97
    16a4:	01 97       	sbiw	r24, 0x01	; 1
    16a6:	f1 f7       	brne	.-4      	; 0x16a4 <__vector_1+0x1a>
	 _delay_ms(100);
 }
    16a8:	9f 91       	pop	r25
    16aa:	8f 91       	pop	r24
    16ac:	0f 90       	pop	r0
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	0f 90       	pop	r0
    16b2:	1f 90       	pop	r1
    16b4:	18 95       	reti

000016b6 <_Z11tempochoosei>:

int tempochoose(int number){
	if (number==0){return tempos[0];}
    16b6:	00 97       	sbiw	r24, 0x00	; 0
    16b8:	41 f0       	breq	.+16     	; 0x16ca <_Z11tempochoosei+0x14>
	else if (number==1){return tempos[1];}
    16ba:	81 30       	cpi	r24, 0x01	; 1
    16bc:	91 05       	cpc	r25, r1
    16be:	41 f0       	breq	.+16     	; 0x16d0 <_Z11tempochoosei+0x1a>
	else if (number==2){return tempos[2];}
    16c0:	02 97       	sbiw	r24, 0x02	; 2
    16c2:	49 f4       	brne	.+18     	; 0x16d6 <_Z11tempochoosei+0x20>
    16c4:	85 e5       	ldi	r24, 0x55	; 85
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	08 95       	ret
	 sp=0;
	 _delay_ms(100);
 }

int tempochoose(int number){
	if (number==0){return tempos[0];}
    16ca:	81 ee       	ldi	r24, 0xE1	; 225
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	08 95       	ret
	else if (number==1){return tempos[1];}
    16d0:	88 e7       	ldi	r24, 0x78	; 120
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	08 95       	ret
	else if (number==2){return tempos[2];}
	else{return tempos[3];}
    16d6:	88 e7       	ldi	r24, 0x78	; 120
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	08 95       	ret

000016dc <_Z4playi>:
		 _delay_ms(dur);   // rest
	 }
	 return;
 }
 
 void play(int number){
    16dc:	2f 92       	push	r2
    16de:	3f 92       	push	r3
    16e0:	4f 92       	push	r4
    16e2:	5f 92       	push	r5
    16e4:	6f 92       	push	r6
    16e6:	7f 92       	push	r7
    16e8:	8f 92       	push	r8
    16ea:	9f 92       	push	r9
    16ec:	af 92       	push	r10
    16ee:	bf 92       	push	r11
    16f0:	cf 92       	push	r12
    16f2:	df 92       	push	r13
    16f4:	ef 92       	push	r14
    16f6:	ff 92       	push	r15
    16f8:	0f 93       	push	r16
    16fa:	1f 93       	push	r17
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	00 d0       	rcall	.+0      	; 0x1702 <_Z4playi+0x26>
    1702:	00 d0       	rcall	.+0      	; 0x1704 <_Z4playi+0x28>
    1704:	cd b7       	in	r28, 0x3d	; 61
    1706:	de b7       	in	r29, 0x3e	; 62
    1708:	1c 01       	movw	r2, r24
	 int tempo=tempochoose(number); // choose the right tempo from the list using the function
    170a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <_Z11tempochoosei>
	 int notes = sizeof(melody0[number])/sizeof(melody0[number][0])/2;
	 int wholenote = (60000 * 2.5) / tempo;
    170e:	bc 01       	movw	r22, r24
    1710:	99 0f       	add	r25, r25
    1712:	88 0b       	sbc	r24, r24
    1714:	99 0b       	sbc	r25, r25
    1716:	0e 94 b4 10 	call	0x2168	; 0x2168 <__floatsisf>
    171a:	9b 01       	movw	r18, r22
    171c:	ac 01       	movw	r20, r24
    171e:	60 e0       	ldi	r22, 0x00	; 0
    1720:	7c e7       	ldi	r23, 0x7C	; 124
    1722:	82 e1       	ldi	r24, 0x12	; 18
    1724:	98 e4       	ldi	r25, 0x48	; 72
    1726:	0e 94 0a 10 	call	0x2014	; 0x2014 <__divsf3>
    172a:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__fixsfsi>
    172e:	7a 83       	std	Y+2, r23	; 0x02
    1730:	69 83       	std	Y+1, r22	; 0x01
	 int divider = 0;
	 int noteDuration = 0;
	 
	 for (int thisNote = 0; thisNote < notes *2 ; thisNote = thisNote + 2) {
    1732:	1c 82       	std	Y+4, r1	; 0x04
    1734:	1b 82       	std	Y+3, r1	; 0x03
 void play(int number){
	 int tempo=tempochoose(number); // choose the right tempo from the list using the function
	 int notes = sizeof(melody0[number])/sizeof(melody0[number][0])/2;
	 int wholenote = (60000 * 2.5) / tempo;
	 int divider = 0;
	 int noteDuration = 0;
    1736:	e1 2c       	mov	r14, r1
    1738:	f1 2c       	mov	r15, r1
	 
	 for (int thisNote = 0; thisNote < notes *2 ; thisNote = thisNote + 2) {
    173a:	8b 81       	ldd	r24, Y+3	; 0x03
    173c:	9c 81       	ldd	r25, Y+4	; 0x04
    173e:	80 39       	cpi	r24, 0x90	; 144
    1740:	91 40       	sbci	r25, 0x01	; 1
    1742:	0c f0       	brlt	.+2      	; 0x1746 <_Z4playi+0x6a>
    1744:	ad c0       	rjmp	.+346    	; 0x18a0 <_Z4playi+0x1c4>
		 if (sp==1){
    1746:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <sp>
    174a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <sp+0x1>
    174e:	01 97       	sbiw	r24, 0x01	; 1
    1750:	09 f0       	breq	.+2      	; 0x1754 <_Z4playi+0x78>
    1752:	a2 c0       	rjmp	.+324    	; 0x1898 <_Z4playi+0x1bc>
			 divider = pgm_read_word_near(melody0[number]+thisNote + 1);
    1754:	80 e2       	ldi	r24, 0x20	; 32
    1756:	93 e0       	ldi	r25, 0x03	; 3
    1758:	28 9e       	mul	r2, r24
    175a:	80 01       	movw	r16, r0
    175c:	29 9e       	mul	r2, r25
    175e:	10 0d       	add	r17, r0
    1760:	38 9e       	mul	r3, r24
    1762:	10 0d       	add	r17, r0
    1764:	11 24       	eor	r1, r1
    1766:	08 59       	subi	r16, 0x98	; 152
    1768:	1f 4f       	sbci	r17, 0xFF	; 255
    176a:	cb 80       	ldd	r12, Y+3	; 0x03
    176c:	dc 80       	ldd	r13, Y+4	; 0x04
    176e:	f6 01       	movw	r30, r12
    1770:	31 96       	adiw	r30, 0x01	; 1
    1772:	ee 0f       	add	r30, r30
    1774:	ff 1f       	adc	r31, r31
    1776:	e0 0f       	add	r30, r16
    1778:	f1 1f       	adc	r31, r17
    177a:	65 91       	lpm	r22, Z+
    177c:	74 91       	lpm	r23, Z
			 
			 if (divider > 0) { //positive divider ( positive duration)
    177e:	16 16       	cp	r1, r22
    1780:	17 06       	cpc	r1, r23
    1782:	34 f4       	brge	.+12     	; 0x1790 <_Z4playi+0xb4>
				 // it is a regular note
			 noteDuration = (wholenote) / divider;}
    1784:	89 81       	ldd	r24, Y+1	; 0x01
    1786:	9a 81       	ldd	r25, Y+2	; 0x02
    1788:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__divmodhi4>
    178c:	7b 01       	movw	r14, r22
    178e:	1c c0       	rjmp	.+56     	; 0x17c8 <_Z4playi+0xec>
			 
			 else if (divider<0){
    1790:	77 23       	and	r23, r23
    1792:	bc f4       	brge	.+46     	; 0x17c2 <_Z4playi+0xe6>
				 noteDuration=(wholenote)/(divider);// negative durations need to be increased and made positive
    1794:	89 81       	ldd	r24, Y+1	; 0x01
    1796:	9a 81       	ldd	r25, Y+2	; 0x02
    1798:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__divmodhi4>
				 noteDuration=noteDuration*1.5;
    179c:	07 2e       	mov	r0, r23
    179e:	00 0c       	add	r0, r0
    17a0:	88 0b       	sbc	r24, r24
    17a2:	99 0b       	sbc	r25, r25
    17a4:	0e 94 b4 10 	call	0x2168	; 0x2168 <__floatsisf>
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 ec       	ldi	r20, 0xC0	; 192
    17ae:	5f e3       	ldi	r21, 0x3F	; 63
    17b0:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    17b4:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <__fixsfsi>
				 noteDuration=-noteDuration;
    17b8:	ee 24       	eor	r14, r14
    17ba:	ff 24       	eor	r15, r15
    17bc:	e6 1a       	sub	r14, r22
    17be:	f7 0a       	sbc	r15, r23
    17c0:	03 c0       	rjmp	.+6      	; 0x17c8 <_Z4playi+0xec>
			 }
			 else if(divider==0){return;} // this will be used to stop playing
    17c2:	67 2b       	or	r22, r23
    17c4:	09 f4       	brne	.+2      	; 0x17c8 <_Z4playi+0xec>
    17c6:	6c c0       	rjmp	.+216    	; 0x18a0 <_Z4playi+0x1c4>
			 Play_Note((pgm_read_word_near(melody0[number]+thisNote)), noteDuration*0.9 ); // play the selected pitch
    17c8:	b7 01       	movw	r22, r14
    17ca:	0f 2c       	mov	r0, r15
    17cc:	00 0c       	add	r0, r0
    17ce:	88 0b       	sbc	r24, r24
    17d0:	99 0b       	sbc	r25, r25
    17d2:	0e 94 b4 10 	call	0x2168	; 0x2168 <__floatsisf>
    17d6:	2b 01       	movw	r4, r22
    17d8:	3c 01       	movw	r6, r24
    17da:	26 e6       	ldi	r18, 0x66	; 102
    17dc:	36 e6       	ldi	r19, 0x66	; 102
    17de:	46 e6       	ldi	r20, 0x66	; 102
    17e0:	5f e3       	ldi	r21, 0x3F	; 63
    17e2:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    17e6:	4b 01       	movw	r8, r22
    17e8:	5c 01       	movw	r10, r24
    17ea:	f6 01       	movw	r30, r12
    17ec:	ee 0f       	add	r30, r30
    17ee:	ff 1f       	adc	r31, r31
    17f0:	e0 0f       	add	r30, r16
    17f2:	f1 1f       	adc	r31, r17
    17f4:	65 91       	lpm	r22, Z+
    17f6:	74 91       	lpm	r23, Z
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	0e 94 b2 10 	call	0x2164	; 0x2164 <__floatunsisf>
    1800:	a5 01       	movw	r20, r10
    1802:	94 01       	movw	r18, r8
    1804:	0e 94 2d 0a 	call	0x145a	; 0x145a <_Z9Play_Noteff>
			 _delay_ms(noteDuration*0.5);
    1808:	20 e0       	ldi	r18, 0x00	; 0
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	40 e0       	ldi	r20, 0x00	; 0
    180e:	5f e3       	ldi	r21, 0x3F	; 63
    1810:	c3 01       	movw	r24, r6
    1812:	b2 01       	movw	r22, r4
    1814:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1818:	2b 01       	movw	r4, r22
    181a:	3c 01       	movw	r6, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    181c:	20 e0       	ldi	r18, 0x00	; 0
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	4a e7       	ldi	r20, 0x7A	; 122
    1822:	53 e4       	ldi	r21, 0x43	; 67
    1824:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1828:	4b 01       	movw	r8, r22
    182a:	5c 01       	movw	r10, r24
	if (__tmp < 1.0)
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e0       	ldi	r19, 0x00	; 0
    1830:	40 e8       	ldi	r20, 0x80	; 128
    1832:	5f e3       	ldi	r21, 0x3F	; 63
    1834:	0e 94 05 10 	call	0x200a	; 0x200a <__cmpsf2>
    1838:	88 23       	and	r24, r24
    183a:	1c f1       	brlt	.+70     	; 0x1882 <_Z4playi+0x1a6>
		__ticks = 1;
	else if (__tmp > 65535)
    183c:	20 e0       	ldi	r18, 0x00	; 0
    183e:	3f ef       	ldi	r19, 0xFF	; 255
    1840:	4f e7       	ldi	r20, 0x7F	; 127
    1842:	57 e4       	ldi	r21, 0x47	; 71
    1844:	c5 01       	movw	r24, r10
    1846:	b4 01       	movw	r22, r8
    1848:	0e 94 64 11 	call	0x22c8	; 0x22c8 <__gesf2>
    184c:	18 16       	cp	r1, r24
    184e:	a4 f4       	brge	.+40     	; 0x1878 <_Z4playi+0x19c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1850:	20 e0       	ldi	r18, 0x00	; 0
    1852:	30 e0       	ldi	r19, 0x00	; 0
    1854:	40 e2       	ldi	r20, 0x20	; 32
    1856:	51 e4       	ldi	r21, 0x41	; 65
    1858:	c3 01       	movw	r24, r6
    185a:	b2 01       	movw	r22, r4
    185c:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__mulsf3>
    1860:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
		while(__ticks)
    1864:	61 15       	cp	r22, r1
    1866:	71 05       	cpc	r23, r1
    1868:	89 f0       	breq	.+34     	; 0x188c <_Z4playi+0x1b0>
    186a:	89 e1       	ldi	r24, 0x19	; 25
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	01 97       	sbiw	r24, 0x01	; 1
    1870:	f1 f7       	brne	.-4      	; 0x186e <_Z4playi+0x192>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1872:	61 50       	subi	r22, 0x01	; 1
    1874:	71 09       	sbc	r23, r1
    1876:	f6 cf       	rjmp	.-20     	; 0x1864 <_Z4playi+0x188>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1878:	c5 01       	movw	r24, r10
    187a:	b4 01       	movw	r22, r8
    187c:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <_Z4playi+0x1aa>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1882:	61 e0       	ldi	r22, 0x01	; 1
    1884:	70 e0       	ldi	r23, 0x00	; 0
    1886:	cb 01       	movw	r24, r22
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	f1 f7       	brne	.-4      	; 0x1888 <_Z4playi+0x1ac>
	 int notes = sizeof(melody0[number])/sizeof(melody0[number][0])/2;
	 int wholenote = (60000 * 2.5) / tempo;
	 int divider = 0;
	 int noteDuration = 0;
	 
	 for (int thisNote = 0; thisNote < notes *2 ; thisNote = thisNote + 2) {
    188c:	8b 81       	ldd	r24, Y+3	; 0x03
    188e:	9c 81       	ldd	r25, Y+4	; 0x04
    1890:	02 96       	adiw	r24, 0x02	; 2
    1892:	9c 83       	std	Y+4, r25	; 0x04
    1894:	8b 83       	std	Y+3, r24	; 0x03
    1896:	51 cf       	rjmp	.-350    	; 0x173a <_Z4playi+0x5e>
			 else if(divider==0){return;} // this will be used to stop playing
			 Play_Note((pgm_read_word_near(melody0[number]+thisNote)), noteDuration*0.9 ); // play the selected pitch
			 _delay_ms(noteDuration*0.5);
		 }
		 else{
			 sp=0;
    1898:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <sp+0x1>
    189c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <sp>
			 break;
		 }
	 }
 }
    18a0:	0f 90       	pop	r0
    18a2:	0f 90       	pop	r0
    18a4:	0f 90       	pop	r0
    18a6:	0f 90       	pop	r0
    18a8:	df 91       	pop	r29
    18aa:	cf 91       	pop	r28
    18ac:	1f 91       	pop	r17
    18ae:	0f 91       	pop	r16
    18b0:	ff 90       	pop	r15
    18b2:	ef 90       	pop	r14
    18b4:	df 90       	pop	r13
    18b6:	cf 90       	pop	r12
    18b8:	bf 90       	pop	r11
    18ba:	af 90       	pop	r10
    18bc:	9f 90       	pop	r9
    18be:	8f 90       	pop	r8
    18c0:	7f 90       	pop	r7
    18c2:	6f 90       	pop	r6
    18c4:	5f 90       	pop	r5
    18c6:	4f 90       	pop	r4
    18c8:	3f 90       	pop	r3
    18ca:	2f 90       	pop	r2
    18cc:	08 95       	ret

000018ce <_Z11LCD_Commandh>:
    18ce:	95 b1       	in	r25, 0x05	; 5
    18d0:	9f 70       	andi	r25, 0x0F	; 15
    18d2:	28 2f       	mov	r18, r24
    18d4:	20 7f       	andi	r18, 0xF0	; 240
    18d6:	92 2b       	or	r25, r18
    18d8:	95 b9       	out	0x05, r25	; 5
    18da:	95 b1       	in	r25, 0x05	; 5
    18dc:	9e 7f       	andi	r25, 0xFE	; 254
    18de:	95 b9       	out	0x05, r25	; 5
    18e0:	95 b1       	in	r25, 0x05	; 5
    18e2:	92 60       	ori	r25, 0x02	; 2
    18e4:	95 b9       	out	0x05, r25	; 5
    18e6:	00 00       	nop
    18e8:	95 b1       	in	r25, 0x05	; 5
    18ea:	9d 7f       	andi	r25, 0xFD	; 253
    18ec:	95 b9       	out	0x05, r25	; 5
    18ee:	32 e4       	ldi	r19, 0x42	; 66
    18f0:	3a 95       	dec	r19
    18f2:	f1 f7       	brne	.-4      	; 0x18f0 <_Z11LCD_Commandh+0x22>
    18f4:	00 c0       	rjmp	.+0      	; 0x18f6 <_Z11LCD_Commandh+0x28>
    18f6:	25 b1       	in	r18, 0x05	; 5
    18f8:	30 e1       	ldi	r19, 0x10	; 16
    18fa:	83 9f       	mul	r24, r19
    18fc:	c0 01       	movw	r24, r0
    18fe:	11 24       	eor	r1, r1
    1900:	92 2f       	mov	r25, r18
    1902:	9f 70       	andi	r25, 0x0F	; 15
    1904:	89 2b       	or	r24, r25
    1906:	85 b9       	out	0x05, r24	; 5
    1908:	85 b1       	in	r24, 0x05	; 5
    190a:	82 60       	ori	r24, 0x02	; 2
    190c:	85 b9       	out	0x05, r24	; 5
    190e:	00 00       	nop
    1910:	85 b1       	in	r24, 0x05	; 5
    1912:	8d 7f       	andi	r24, 0xFD	; 253
    1914:	85 b9       	out	0x05, r24	; 5
    1916:	83 ef       	ldi	r24, 0xF3	; 243
    1918:	91 e0       	ldi	r25, 0x01	; 1
    191a:	01 97       	sbiw	r24, 0x01	; 1
    191c:	f1 f7       	brne	.-4      	; 0x191a <_Z11LCD_Commandh+0x4c>
    191e:	00 c0       	rjmp	.+0      	; 0x1920 <_Z11LCD_Commandh+0x52>
    1920:	00 00       	nop
    1922:	08 95       	ret

00001924 <_Z8LCD_Charh>:
    1924:	95 b1       	in	r25, 0x05	; 5
    1926:	9f 70       	andi	r25, 0x0F	; 15
    1928:	28 2f       	mov	r18, r24
    192a:	20 7f       	andi	r18, 0xF0	; 240
    192c:	92 2b       	or	r25, r18
    192e:	95 b9       	out	0x05, r25	; 5
    1930:	95 b1       	in	r25, 0x05	; 5
    1932:	91 60       	ori	r25, 0x01	; 1
    1934:	95 b9       	out	0x05, r25	; 5
    1936:	95 b1       	in	r25, 0x05	; 5
    1938:	92 60       	ori	r25, 0x02	; 2
    193a:	95 b9       	out	0x05, r25	; 5
    193c:	00 00       	nop
    193e:	95 b1       	in	r25, 0x05	; 5
    1940:	9d 7f       	andi	r25, 0xFD	; 253
    1942:	95 b9       	out	0x05, r25	; 5
    1944:	32 e4       	ldi	r19, 0x42	; 66
    1946:	3a 95       	dec	r19
    1948:	f1 f7       	brne	.-4      	; 0x1946 <_Z8LCD_Charh+0x22>
    194a:	00 c0       	rjmp	.+0      	; 0x194c <_Z8LCD_Charh+0x28>
    194c:	25 b1       	in	r18, 0x05	; 5
    194e:	30 e1       	ldi	r19, 0x10	; 16
    1950:	83 9f       	mul	r24, r19
    1952:	c0 01       	movw	r24, r0
    1954:	11 24       	eor	r1, r1
    1956:	92 2f       	mov	r25, r18
    1958:	9f 70       	andi	r25, 0x0F	; 15
    195a:	89 2b       	or	r24, r25
    195c:	85 b9       	out	0x05, r24	; 5
    195e:	85 b1       	in	r24, 0x05	; 5
    1960:	82 60       	ori	r24, 0x02	; 2
    1962:	85 b9       	out	0x05, r24	; 5
    1964:	00 00       	nop
    1966:	85 b1       	in	r24, 0x05	; 5
    1968:	8d 7f       	andi	r24, 0xFD	; 253
    196a:	85 b9       	out	0x05, r24	; 5
    196c:	83 ef       	ldi	r24, 0xF3	; 243
    196e:	91 e0       	ldi	r25, 0x01	; 1
    1970:	01 97       	sbiw	r24, 0x01	; 1
    1972:	f1 f7       	brne	.-4      	; 0x1970 <_Z8LCD_Charh+0x4c>
    1974:	00 c0       	rjmp	.+0      	; 0x1976 <_Z8LCD_Charh+0x52>
    1976:	00 00       	nop
    1978:	08 95       	ret

0000197a <_Z8LCD_Initv>:
    197a:	8f ef       	ldi	r24, 0xFF	; 255
    197c:	84 b9       	out	0x04, r24	; 4
    197e:	87 e8       	ldi	r24, 0x87	; 135
    1980:	93 e1       	ldi	r25, 0x13	; 19
    1982:	01 97       	sbiw	r24, 0x01	; 1
    1984:	f1 f7       	brne	.-4      	; 0x1982 <_Z8LCD_Initv+0x8>
    1986:	00 c0       	rjmp	.+0      	; 0x1988 <_Z8LCD_Initv+0xe>
    1988:	00 00       	nop
    198a:	82 e0       	ldi	r24, 0x02	; 2
    198c:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    1990:	88 e2       	ldi	r24, 0x28	; 40
    1992:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    1996:	8c e0       	ldi	r24, 0x0C	; 12
    1998:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    199c:	86 e0       	ldi	r24, 0x06	; 6
    199e:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    19a2:	81 e0       	ldi	r24, 0x01	; 1
    19a4:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    19a8:	83 ef       	ldi	r24, 0xF3	; 243
    19aa:	91 e0       	ldi	r25, 0x01	; 1
    19ac:	01 97       	sbiw	r24, 0x01	; 1
    19ae:	f1 f7       	brne	.-4      	; 0x19ac <_Z8LCD_Initv+0x32>
    19b0:	00 c0       	rjmp	.+0      	; 0x19b2 <_Z8LCD_Initv+0x38>
    19b2:	00 00       	nop
    19b4:	08 95       	ret

000019b6 <_Z10LCD_StringPc>:
    19b6:	0f 93       	push	r16
    19b8:	1f 93       	push	r17
    19ba:	cf 93       	push	r28
    19bc:	df 93       	push	r29
    19be:	8c 01       	movw	r16, r24
    19c0:	c0 e0       	ldi	r28, 0x00	; 0
    19c2:	d0 e0       	ldi	r29, 0x00	; 0
    19c4:	f8 01       	movw	r30, r16
    19c6:	ec 0f       	add	r30, r28
    19c8:	fd 1f       	adc	r31, r29
    19ca:	80 81       	ld	r24, Z
    19cc:	88 23       	and	r24, r24
    19ce:	21 f0       	breq	.+8      	; 0x19d8 <_Z10LCD_StringPc+0x22>
    19d0:	0e 94 92 0c 	call	0x1924	; 0x1924 <_Z8LCD_Charh>
    19d4:	21 96       	adiw	r28, 0x01	; 1
    19d6:	f6 cf       	rjmp	.-20     	; 0x19c4 <_Z10LCD_StringPc+0xe>
    19d8:	df 91       	pop	r29
    19da:	cf 91       	pop	r28
    19dc:	1f 91       	pop	r17
    19de:	0f 91       	pop	r16
    19e0:	08 95       	ret

000019e2 <_Z9LCD_Clearv>:
    19e2:	81 e0       	ldi	r24, 0x01	; 1
    19e4:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    19e8:	83 ef       	ldi	r24, 0xF3	; 243
    19ea:	91 e0       	ldi	r25, 0x01	; 1
    19ec:	01 97       	sbiw	r24, 0x01	; 1
    19ee:	f1 f7       	brne	.-4      	; 0x19ec <_Z9LCD_Clearv+0xa>
    19f0:	00 c0       	rjmp	.+0      	; 0x19f2 <_Z9LCD_Clearv+0x10>
    19f2:	00 00       	nop
    19f4:	80 e8       	ldi	r24, 0x80	; 128
    19f6:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    19fa:	08 95       	ret

000019fc <_Z8LCD_Homei>:
    19fc:	89 2b       	or	r24, r25
    19fe:	21 f4       	brne	.+8      	; 0x1a08 <_Z8LCD_Homei+0xc>
    1a00:	80 e8       	ldi	r24, 0x80	; 128
    1a02:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    1a06:	08 95       	ret
    1a08:	80 ec       	ldi	r24, 0xC0	; 192
    1a0a:	0e 94 67 0c 	call	0x18ce	; 0x18ce <_Z11LCD_Commandh>
    1a0e:	08 95       	ret

00001a10 <_Z12LCD_SetAlarmci>:
    1a10:	0f 93       	push	r16
    1a12:	1f 93       	push	r17
    1a14:	cf 93       	push	r28
    1a16:	df 93       	push	r29
    1a18:	c8 2f       	mov	r28, r24
    1a1a:	8b 01       	movw	r16, r22
    1a1c:	80 e0       	ldi	r24, 0x00	; 0
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
    1a24:	90 ed       	ldi	r25, 0xD0	; 208
    1a26:	9c 0f       	add	r25, r28
    1a28:	81 e0       	ldi	r24, 0x01	; 1
    1a2a:	9a 30       	cpi	r25, 0x0A	; 10
    1a2c:	08 f0       	brcs	.+2      	; 0x1a30 <_Z12LCD_SetAlarmci+0x20>
    1a2e:	80 e0       	ldi	r24, 0x00	; 0
    1a30:	91 e0       	ldi	r25, 0x01	; 1
    1a32:	02 30       	cpi	r16, 0x02	; 2
    1a34:	11 05       	cpc	r17, r1
    1a36:	09 f0       	breq	.+2      	; 0x1a3a <_Z12LCD_SetAlarmci+0x2a>
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	88 23       	and	r24, r24
    1a3c:	d1 f1       	breq	.+116    	; 0x1ab2 <_Z12LCD_SetAlarmci+0xa2>
    1a3e:	99 23       	and	r25, r25
    1a40:	c1 f1       	breq	.+112    	; 0x1ab2 <_Z12LCD_SetAlarmci+0xa2>
    1a42:	80 e0       	ldi	r24, 0x00	; 0
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
    1a4a:	d0 e0       	ldi	r29, 0x00	; 0
    1a4c:	e0 97       	sbiw	r28, 0x30	; 48
    1a4e:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <p>
    1a52:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <p+0x1>
    1a56:	8a e0       	ldi	r24, 0x0A	; 10
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	0e 94 23 08 	call	0x1046	; 0x1046 <_Z7powerOfii>
    1a5e:	9c 01       	movw	r18, r24
    1a60:	c2 9f       	mul	r28, r18
    1a62:	c0 01       	movw	r24, r0
    1a64:	c3 9f       	mul	r28, r19
    1a66:	90 0d       	add	r25, r0
    1a68:	d2 9f       	mul	r29, r18
    1a6a:	90 0d       	add	r25, r0
    1a6c:	11 24       	eor	r1, r1
    1a6e:	20 91 af 01 	lds	r18, 0x01AF	; 0x8001af <clkTime>
    1a72:	30 91 b0 01 	lds	r19, 0x01B0	; 0x8001b0 <clkTime+0x1>
    1a76:	82 0f       	add	r24, r18
    1a78:	93 1f       	adc	r25, r19
    1a7a:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <clkTime+0x1>
    1a7e:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <clkTime>
    1a82:	4a e0       	ldi	r20, 0x0A	; 10
    1a84:	63 ea       	ldi	r22, 0xA3	; 163
    1a86:	71 e0       	ldi	r23, 0x01	; 1
    1a88:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__itoa_ncheck>
    1a8c:	83 ea       	ldi	r24, 0xA3	; 163
    1a8e:	91 e0       	ldi	r25, 0x01	; 1
    1a90:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
    1a94:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <p>
    1a98:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <p+0x1>
    1a9c:	01 97       	sbiw	r24, 0x01	; 1
    1a9e:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <p+0x1>
    1aa2:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <p>
    1aa6:	87 ea       	ldi	r24, 0xA7	; 167
    1aa8:	91 e6       	ldi	r25, 0x61	; 97
    1aaa:	01 97       	sbiw	r24, 0x01	; 1
    1aac:	f1 f7       	brne	.-4      	; 0x1aaa <_Z12LCD_SetAlarmci+0x9a>
    1aae:	00 c0       	rjmp	.+0      	; 0x1ab0 <_Z12LCD_SetAlarmci+0xa0>
    1ab0:	00 00       	nop
    1ab2:	03 30       	cpi	r16, 0x03	; 3
    1ab4:	11 05       	cpc	r17, r1
    1ab6:	79 f5       	brne	.+94     	; 0x1b16 <_Z12LCD_SetAlarmci+0x106>
    1ab8:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <clkTime>
    1abc:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <clkTime+0x1>
    1ac0:	0e 94 49 08 	call	0x1092	; 0x1092 <_Z8setAlarmi>
    1ac4:	80 e0       	ldi	r24, 0x00	; 0
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
    1acc:	82 e6       	ldi	r24, 0x62	; 98
    1ace:	91 e0       	ldi	r25, 0x01	; 1
    1ad0:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
    1adc:	83 ea       	ldi	r24, 0xA3	; 163
    1ade:	91 e0       	ldi	r25, 0x01	; 1
    1ae0:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
    1ae4:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <clkTime+0x1>
    1ae8:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <clkTime>
    1aec:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <num+0x1>
    1af0:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <num>
    1af4:	83 e0       	ldi	r24, 0x03	; 3
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <p+0x1>
    1afc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <p>
    1b00:	9f e9       	ldi	r25, 0x9F	; 159
    1b02:	26 e8       	ldi	r18, 0x86	; 134
    1b04:	31 e0       	ldi	r19, 0x01	; 1
    1b06:	91 50       	subi	r25, 0x01	; 1
    1b08:	20 40       	sbci	r18, 0x00	; 0
    1b0a:	30 40       	sbci	r19, 0x00	; 0
    1b0c:	e1 f7       	brne	.-8      	; 0x1b06 <_Z12LCD_SetAlarmci+0xf6>
    1b0e:	00 c0       	rjmp	.+0      	; 0x1b10 <_Z12LCD_SetAlarmci+0x100>
    1b10:	00 00       	nop
    1b12:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <_Z9LCD_Clearv>
    1b16:	df 91       	pop	r29
    1b18:	cf 91       	pop	r28
    1b1a:	1f 91       	pop	r17
    1b1c:	0f 91       	pop	r16
    1b1e:	08 95       	ret

00001b20 <_Z8LCD_Menuci>:
    1b20:	1f 93       	push	r17
    1b22:	cf 93       	push	r28
    1b24:	df 93       	push	r29
    1b26:	18 2f       	mov	r17, r24
    1b28:	eb 01       	movw	r28, r22
    1b2a:	80 e0       	ldi	r24, 0x00	; 0
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
    1b32:	81 e0       	ldi	r24, 0x01	; 1
    1b34:	c1 30       	cpi	r28, 0x01	; 1
    1b36:	d1 05       	cpc	r29, r1
    1b38:	09 f0       	breq	.+2      	; 0x1b3c <_Z8LCD_Menuci+0x1c>
    1b3a:	80 e0       	ldi	r24, 0x00	; 0
    1b3c:	91 e0       	ldi	r25, 0x01	; 1
    1b3e:	18 33       	cpi	r17, 0x38	; 56
    1b40:	09 f0       	breq	.+2      	; 0x1b44 <_Z8LCD_Menuci+0x24>
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	99 23       	and	r25, r25
    1b46:	91 f0       	breq	.+36     	; 0x1b6c <_Z8LCD_Menuci+0x4c>
    1b48:	88 23       	and	r24, r24
    1b4a:	81 f0       	breq	.+32     	; 0x1b6c <_Z8LCD_Menuci+0x4c>
    1b4c:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <menu_Var>
    1b50:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <menu_Var+0x1>
    1b54:	2f 5f       	subi	r18, 0xFF	; 255
    1b56:	3f 4f       	sbci	r19, 0xFF	; 255
    1b58:	30 93 a2 01 	sts	0x01A2, r19	; 0x8001a2 <menu_Var+0x1>
    1b5c:	20 93 a1 01 	sts	0x01A1, r18	; 0x8001a1 <menu_Var>
    1b60:	e3 ec       	ldi	r30, 0xC3	; 195
    1b62:	f9 e0       	ldi	r31, 0x09	; 9
    1b64:	31 97       	sbiw	r30, 0x01	; 1
    1b66:	f1 f7       	brne	.-4      	; 0x1b64 <_Z8LCD_Menuci+0x44>
    1b68:	00 c0       	rjmp	.+0      	; 0x1b6a <_Z8LCD_Menuci+0x4a>
    1b6a:	00 00       	nop
    1b6c:	91 e0       	ldi	r25, 0x01	; 1
    1b6e:	12 33       	cpi	r17, 0x32	; 50
    1b70:	09 f0       	breq	.+2      	; 0x1b74 <_Z8LCD_Menuci+0x54>
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	99 23       	and	r25, r25
    1b76:	89 f0       	breq	.+34     	; 0x1b9a <_Z8LCD_Menuci+0x7a>
    1b78:	88 23       	and	r24, r24
    1b7a:	79 f0       	breq	.+30     	; 0x1b9a <_Z8LCD_Menuci+0x7a>
    1b7c:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <menu_Var>
    1b80:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <menu_Var+0x1>
    1b84:	01 97       	sbiw	r24, 0x01	; 1
    1b86:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <menu_Var+0x1>
    1b8a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <menu_Var>
    1b8e:	83 ec       	ldi	r24, 0xC3	; 195
    1b90:	99 e0       	ldi	r25, 0x09	; 9
    1b92:	01 97       	sbiw	r24, 0x01	; 1
    1b94:	f1 f7       	brne	.-4      	; 0x1b92 <_Z8LCD_Menuci+0x72>
    1b96:	00 c0       	rjmp	.+0      	; 0x1b98 <_Z8LCD_Menuci+0x78>
    1b98:	00 00       	nop
    1b9a:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <menu_Var>
    1b9e:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <menu_Var+0x1>
    1ba2:	03 97       	sbiw	r24, 0x03	; 3
    1ba4:	24 f0       	brlt	.+8      	; 0x1bae <_Z8LCD_Menuci+0x8e>
    1ba6:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <menu_Var+0x1>
    1baa:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <menu_Var>
    1bae:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <menu_Var>
    1bb2:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <menu_Var+0x1>
    1bb6:	99 23       	and	r25, r25
    1bb8:	34 f4       	brge	.+12     	; 0x1bc6 <_Z8LCD_Menuci+0xa6>
    1bba:	82 e0       	ldi	r24, 0x02	; 2
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <menu_Var+0x1>
    1bc2:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <menu_Var>
    1bc6:	c1 30       	cpi	r28, 0x01	; 1
    1bc8:	d1 05       	cpc	r29, r1
    1bca:	f9 f4       	brne	.+62     	; 0x1c0a <_Z8LCD_Menuci+0xea>
    1bcc:	80 e0       	ldi	r24, 0x00	; 0
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <_Z8LCD_Homei>
    1bd4:	82 e7       	ldi	r24, 0x72	; 114
    1bd6:	91 e0       	ldi	r25, 0x01	; 1
    1bd8:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
    1bdc:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <menu_Var>
    1be0:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <menu_Var+0x1>
    1be4:	63 e0       	ldi	r22, 0x03	; 3
    1be6:	70 e0       	ldi	r23, 0x00	; 0
    1be8:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__divmodhi4>
    1bec:	9c 01       	movw	r18, r24
    1bee:	22 0f       	add	r18, r18
    1bf0:	33 1f       	adc	r19, r19
    1bf2:	88 0f       	add	r24, r24
    1bf4:	99 1f       	adc	r25, r25
    1bf6:	88 0f       	add	r24, r24
    1bf8:	99 1f       	adc	r25, r25
    1bfa:	88 0f       	add	r24, r24
    1bfc:	99 1f       	adc	r25, r25
    1bfe:	82 0f       	add	r24, r18
    1c00:	93 1f       	adc	r25, r19
    1c02:	86 5e       	subi	r24, 0xE6	; 230
    1c04:	9e 4f       	sbci	r25, 0xFE	; 254
    1c06:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
    1c0a:	81 e0       	ldi	r24, 0x01	; 1
    1c0c:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <menu_Var>
    1c10:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <menu_Var+0x1>
    1c14:	23 2b       	or	r18, r19
    1c16:	09 f0       	breq	.+2      	; 0x1c1a <_Z8LCD_Menuci+0xfa>
    1c18:	80 e0       	ldi	r24, 0x00	; 0
    1c1a:	88 23       	and	r24, r24
    1c1c:	59 f0       	breq	.+22     	; 0x1c34 <_Z8LCD_Menuci+0x114>
    1c1e:	81 e0       	ldi	r24, 0x01	; 1
    1c20:	c2 30       	cpi	r28, 0x02	; 2
    1c22:	d1 05       	cpc	r29, r1
    1c24:	0c f4       	brge	.+2      	; 0x1c28 <_Z8LCD_Menuci+0x108>
    1c26:	80 e0       	ldi	r24, 0x00	; 0
    1c28:	88 23       	and	r24, r24
    1c2a:	21 f0       	breq	.+8      	; 0x1c34 <_Z8LCD_Menuci+0x114>
    1c2c:	be 01       	movw	r22, r28
    1c2e:	81 2f       	mov	r24, r17
    1c30:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <_Z12LCD_SetAlarmci>
    1c34:	df 91       	pop	r29
    1c36:	cf 91       	pop	r28
    1c38:	1f 91       	pop	r17
    1c3a:	08 95       	ret

00001c3c <_Z14ds1307_dec2bcdh>:
    1c3c:	9d ec       	ldi	r25, 0xCD	; 205
    1c3e:	89 9f       	mul	r24, r25
    1c40:	91 2d       	mov	r25, r1
    1c42:	11 24       	eor	r1, r1
    1c44:	96 95       	lsr	r25
    1c46:	96 95       	lsr	r25
    1c48:	96 95       	lsr	r25
    1c4a:	29 2f       	mov	r18, r25
    1c4c:	22 0f       	add	r18, r18
    1c4e:	92 0f       	add	r25, r18
    1c50:	29 2f       	mov	r18, r25
    1c52:	22 0f       	add	r18, r18
    1c54:	82 0f       	add	r24, r18
    1c56:	08 95       	ret

00001c58 <_Z14ds1307_bcd2dech>:
    1c58:	28 2f       	mov	r18, r24
    1c5a:	30 e0       	ldi	r19, 0x00	; 0
    1c5c:	35 95       	asr	r19
    1c5e:	27 95       	ror	r18
    1c60:	35 95       	asr	r19
    1c62:	27 95       	ror	r18
    1c64:	35 95       	asr	r19
    1c66:	27 95       	ror	r18
    1c68:	35 95       	asr	r19
    1c6a:	27 95       	ror	r18
    1c6c:	92 2f       	mov	r25, r18
    1c6e:	99 0f       	add	r25, r25
    1c70:	29 0f       	add	r18, r25
    1c72:	92 2f       	mov	r25, r18
    1c74:	99 0f       	add	r25, r25
    1c76:	89 1b       	sub	r24, r25
    1c78:	08 95       	ret

00001c7a <_Z11ds1307_initv>:
    1c7a:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <_Z8i2c_initv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1c7e:	83 e0       	ldi	r24, 0x03	; 3
    1c80:	8a 95       	dec	r24
    1c82:	f1 f7       	brne	.-4      	; 0x1c80 <_Z11ds1307_initv+0x6>
    1c84:	00 00       	nop
    1c86:	08 95       	ret

00001c88 <_Z14ds1307_setdatehhhhhhh>:
    1c88:	cf 92       	push	r12
    1c8a:	ef 92       	push	r14
    1c8c:	ff 92       	push	r15
    1c8e:	0f 93       	push	r16
    1c90:	1f 93       	push	r17
    1c92:	cf 93       	push	r28
    1c94:	df 93       	push	r29
    1c96:	c8 2f       	mov	r28, r24
    1c98:	d6 2f       	mov	r29, r22
    1c9a:	14 2f       	mov	r17, r20
    1c9c:	f2 2e       	mov	r15, r18
    1c9e:	80 ed       	ldi	r24, 0xD0	; 208
    1ca0:	0e 94 09 0f 	call	0x1e12	; 0x1e12 <_Z14i2c_start_waith>
    1ca4:	80 e0       	ldi	r24, 0x00	; 0
    1ca6:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1caa:	8c 2d       	mov	r24, r12
    1cac:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1cb0:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cb4:	8e 2d       	mov	r24, r14
    1cb6:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1cba:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cbe:	80 2f       	mov	r24, r16
    1cc0:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1cc4:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cc8:	8f 2d       	mov	r24, r15
    1cca:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1cce:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cd2:	81 2f       	mov	r24, r17
    1cd4:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1cd8:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cdc:	8d 2f       	mov	r24, r29
    1cde:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1ce2:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1ce6:	8c 2f       	mov	r24, r28
    1ce8:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_Z14ds1307_dec2bcdh>
    1cec:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1cf6:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <_Z8i2c_stopv>
    1cfa:	df 91       	pop	r29
    1cfc:	cf 91       	pop	r28
    1cfe:	1f 91       	pop	r17
    1d00:	0f 91       	pop	r16
    1d02:	ff 90       	pop	r15
    1d04:	ef 90       	pop	r14
    1d06:	cf 90       	pop	r12
    1d08:	08 95       	ret

00001d0a <_Z14ds1307_getdatePhS_S_S_S_S_S_>:
    1d0a:	6f 92       	push	r6
    1d0c:	7f 92       	push	r7
    1d0e:	8f 92       	push	r8
    1d10:	9f 92       	push	r9
    1d12:	af 92       	push	r10
    1d14:	bf 92       	push	r11
    1d16:	cf 92       	push	r12
    1d18:	df 92       	push	r13
    1d1a:	ef 92       	push	r14
    1d1c:	ff 92       	push	r15
    1d1e:	0f 93       	push	r16
    1d20:	1f 93       	push	r17
    1d22:	cf 93       	push	r28
    1d24:	df 93       	push	r29
    1d26:	ec 01       	movw	r28, r24
    1d28:	3b 01       	movw	r6, r22
    1d2a:	5a 01       	movw	r10, r20
    1d2c:	49 01       	movw	r8, r18
    1d2e:	80 ed       	ldi	r24, 0xD0	; 208
    1d30:	0e 94 09 0f 	call	0x1e12	; 0x1e12 <_Z14i2c_start_waith>
    1d34:	80 e0       	ldi	r24, 0x00	; 0
    1d36:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_Z9i2c_writeh>
    1d3a:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <_Z8i2c_stopv>
    1d3e:	81 ed       	ldi	r24, 0xD1	; 209
    1d40:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <_Z13i2c_rep_starth>
    1d44:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <_Z11i2c_readAckv>
    1d48:	8f 77       	andi	r24, 0x7F	; 127
    1d4a:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d4e:	f6 01       	movw	r30, r12
    1d50:	80 83       	st	Z, r24
    1d52:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <_Z11i2c_readAckv>
    1d56:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d5a:	f7 01       	movw	r30, r14
    1d5c:	80 83       	st	Z, r24
    1d5e:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <_Z11i2c_readAckv>
    1d62:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d66:	f8 01       	movw	r30, r16
    1d68:	80 83       	st	Z, r24
    1d6a:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <_Z11i2c_readAckv>
    1d6e:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d72:	f4 01       	movw	r30, r8
    1d74:	80 83       	st	Z, r24
    1d76:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <_Z11i2c_readAckv>
    1d7a:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d7e:	f5 01       	movw	r30, r10
    1d80:	80 83       	st	Z, r24
    1d82:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <_Z11i2c_readAckv>
    1d86:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d8a:	f3 01       	movw	r30, r6
    1d8c:	80 83       	st	Z, r24
    1d8e:	0e 94 57 0f 	call	0x1eae	; 0x1eae <_Z11i2c_readNakv>
    1d92:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <_Z14ds1307_bcd2dech>
    1d96:	88 83       	st	Y, r24
    1d98:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <_Z8i2c_stopv>
    1d9c:	df 91       	pop	r29
    1d9e:	cf 91       	pop	r28
    1da0:	1f 91       	pop	r17
    1da2:	0f 91       	pop	r16
    1da4:	ff 90       	pop	r15
    1da6:	ef 90       	pop	r14
    1da8:	df 90       	pop	r13
    1daa:	cf 90       	pop	r12
    1dac:	bf 90       	pop	r11
    1dae:	af 90       	pop	r10
    1db0:	9f 90       	pop	r9
    1db2:	8f 90       	pop	r8
    1db4:	7f 90       	pop	r7
    1db6:	6f 90       	pop	r6
    1db8:	08 95       	ret

00001dba <_Z8i2c_initv>:
    1dba:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1dbe:	8d ef       	ldi	r24, 0xFD	; 253
    1dc0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    1dc4:	08 95       	ret

00001dc6 <_Z9i2c_starth>:
    1dc6:	94 ea       	ldi	r25, 0xA4	; 164
    1dc8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1dcc:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1dd0:	99 23       	and	r25, r25
    1dd2:	e4 f7       	brge	.-8      	; 0x1dcc <_Z9i2c_starth+0x6>
    1dd4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1dd8:	98 7f       	andi	r25, 0xF8	; 248
    1dda:	98 30       	cpi	r25, 0x08	; 8
    1ddc:	11 f0       	breq	.+4      	; 0x1de2 <_Z9i2c_starth+0x1c>
    1dde:	90 31       	cpi	r25, 0x10	; 16
    1de0:	91 f4       	brne	.+36     	; 0x1e06 <_Z9i2c_starth+0x40>
    1de2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1de6:	84 e8       	ldi	r24, 0x84	; 132
    1de8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1dec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1df0:	88 23       	and	r24, r24
    1df2:	e4 f7       	brge	.-8      	; 0x1dec <_Z9i2c_starth+0x26>
    1df4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1df8:	88 7f       	andi	r24, 0xF8	; 248
    1dfa:	88 31       	cpi	r24, 0x18	; 24
    1dfc:	31 f0       	breq	.+12     	; 0x1e0a <_Z9i2c_starth+0x44>
    1dfe:	80 34       	cpi	r24, 0x40	; 64
    1e00:	31 f4       	brne	.+12     	; 0x1e0e <_Z9i2c_starth+0x48>
    1e02:	80 e0       	ldi	r24, 0x00	; 0
    1e04:	08 95       	ret
    1e06:	81 e0       	ldi	r24, 0x01	; 1
    1e08:	08 95       	ret
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	08 95       	ret
    1e0e:	81 e0       	ldi	r24, 0x01	; 1
    1e10:	08 95       	ret

00001e12 <_Z14i2c_start_waith>:
    1e12:	94 ea       	ldi	r25, 0xA4	; 164
    1e14:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e18:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e1c:	99 23       	and	r25, r25
    1e1e:	e4 f7       	brge	.-8      	; 0x1e18 <_Z14i2c_start_waith+0x6>
    1e20:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1e24:	98 7f       	andi	r25, 0xF8	; 248
    1e26:	98 30       	cpi	r25, 0x08	; 8
    1e28:	11 f0       	breq	.+4      	; 0x1e2e <_Z14i2c_start_waith+0x1c>
    1e2a:	90 31       	cpi	r25, 0x10	; 16
    1e2c:	91 f7       	brne	.-28     	; 0x1e12 <_Z14i2c_start_waith>
    1e2e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1e32:	94 e8       	ldi	r25, 0x84	; 132
    1e34:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e38:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e3c:	99 23       	and	r25, r25
    1e3e:	e4 f7       	brge	.-8      	; 0x1e38 <_Z14i2c_start_waith+0x26>
    1e40:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1e44:	98 7f       	andi	r25, 0xF8	; 248
    1e46:	90 32       	cpi	r25, 0x20	; 32
    1e48:	11 f0       	breq	.+4      	; 0x1e4e <_Z14i2c_start_waith+0x3c>
    1e4a:	98 35       	cpi	r25, 0x58	; 88
    1e4c:	41 f4       	brne	.+16     	; 0x1e5e <_Z14i2c_start_waith+0x4c>
    1e4e:	94 e9       	ldi	r25, 0x94	; 148
    1e50:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e54:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e58:	94 fd       	sbrc	r25, 4
    1e5a:	fc cf       	rjmp	.-8      	; 0x1e54 <_Z14i2c_start_waith+0x42>
    1e5c:	da cf       	rjmp	.-76     	; 0x1e12 <_Z14i2c_start_waith>
    1e5e:	08 95       	ret

00001e60 <_Z13i2c_rep_starth>:
    1e60:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <_Z9i2c_starth>
    1e64:	08 95       	ret

00001e66 <_Z8i2c_stopv>:
    1e66:	84 e9       	ldi	r24, 0x94	; 148
    1e68:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e6c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e70:	84 fd       	sbrc	r24, 4
    1e72:	fc cf       	rjmp	.-8      	; 0x1e6c <_Z8i2c_stopv+0x6>
    1e74:	08 95       	ret

00001e76 <_Z9i2c_writeh>:
    1e76:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1e7a:	84 e8       	ldi	r24, 0x84	; 132
    1e7c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e80:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e84:	88 23       	and	r24, r24
    1e86:	e4 f7       	brge	.-8      	; 0x1e80 <_Z9i2c_writeh+0xa>
    1e88:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1e8c:	88 7f       	andi	r24, 0xF8	; 248
    1e8e:	88 32       	cpi	r24, 0x28	; 40
    1e90:	11 f0       	breq	.+4      	; 0x1e96 <_Z9i2c_writeh+0x20>
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	08 95       	ret
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	08 95       	ret

00001e9a <_Z11i2c_readAckv>:
    1e9a:	84 ec       	ldi	r24, 0xC4	; 196
    1e9c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1ea0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1ea4:	88 23       	and	r24, r24
    1ea6:	e4 f7       	brge	.-8      	; 0x1ea0 <_Z11i2c_readAckv+0x6>
    1ea8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1eac:	08 95       	ret

00001eae <_Z11i2c_readNakv>:
    1eae:	84 e8       	ldi	r24, 0x84	; 132
    1eb0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1eb4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1eb8:	88 23       	and	r24, r24
    1eba:	e4 f7       	brge	.-8      	; 0x1eb4 <_Z11i2c_readNakv+0x6>
    1ebc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1ec0:	08 95       	ret

00001ec2 <_Z8btnPressv>:
    1ec2:	8f e0       	ldi	r24, 0x0F	; 15
    1ec4:	87 b9       	out	0x07, r24	; 7
    1ec6:	60 e0       	ldi	r22, 0x00	; 0
    1ec8:	70 e0       	ldi	r23, 0x00	; 0
    1eca:	64 30       	cpi	r22, 0x04	; 4
    1ecc:	71 05       	cpc	r23, r1
    1ece:	94 f5       	brge	.+100    	; 0x1f34 <_Z8btnPressv+0x72>
    1ed0:	81 e0       	ldi	r24, 0x01	; 1
    1ed2:	90 e0       	ldi	r25, 0x00	; 0
    1ed4:	fb 01       	movw	r30, r22
    1ed6:	e3 5c       	subi	r30, 0xC3	; 195
    1ed8:	fe 4f       	sbci	r31, 0xFE	; 254
    1eda:	00 80       	ld	r0, Z
    1edc:	02 c0       	rjmp	.+4      	; 0x1ee2 <_Z8btnPressv+0x20>
    1ede:	88 0f       	add	r24, r24
    1ee0:	99 1f       	adc	r25, r25
    1ee2:	0a 94       	dec	r0
    1ee4:	e2 f7       	brpl	.-8      	; 0x1ede <_Z8btnPressv+0x1c>
    1ee6:	88 b9       	out	0x08, r24	; 8
    1ee8:	80 e0       	ldi	r24, 0x00	; 0
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	83 30       	cpi	r24, 0x03	; 3
    1eee:	91 05       	cpc	r25, r1
    1ef0:	f4 f4       	brge	.+60     	; 0x1f2e <_Z8btnPressv+0x6c>
    1ef2:	49 b1       	in	r20, 0x09	; 9
    1ef4:	50 e0       	ldi	r21, 0x00	; 0
    1ef6:	21 e0       	ldi	r18, 0x01	; 1
    1ef8:	30 e0       	ldi	r19, 0x00	; 0
    1efa:	fc 01       	movw	r30, r24
    1efc:	e6 5c       	subi	r30, 0xC6	; 198
    1efe:	fe 4f       	sbci	r31, 0xFE	; 254
    1f00:	00 80       	ld	r0, Z
    1f02:	02 c0       	rjmp	.+4      	; 0x1f08 <_Z8btnPressv+0x46>
    1f04:	22 0f       	add	r18, r18
    1f06:	33 1f       	adc	r19, r19
    1f08:	0a 94       	dec	r0
    1f0a:	e2 f7       	brpl	.-8      	; 0x1f04 <_Z8btnPressv+0x42>
    1f0c:	42 17       	cp	r20, r18
    1f0e:	53 07       	cpc	r21, r19
    1f10:	61 f4       	brne	.+24     	; 0x1f2a <_Z8btnPressv+0x68>
    1f12:	9b 01       	movw	r18, r22
    1f14:	22 0f       	add	r18, r18
    1f16:	33 1f       	adc	r19, r19
    1f18:	62 0f       	add	r22, r18
    1f1a:	73 1f       	adc	r23, r19
    1f1c:	6f 5b       	subi	r22, 0xBF	; 191
    1f1e:	7e 4f       	sbci	r23, 0xFE	; 254
    1f20:	fb 01       	movw	r30, r22
    1f22:	e8 0f       	add	r30, r24
    1f24:	f9 1f       	adc	r31, r25
    1f26:	80 81       	ld	r24, Z
    1f28:	08 95       	ret
    1f2a:	01 96       	adiw	r24, 0x01	; 1
    1f2c:	df cf       	rjmp	.-66     	; 0x1eec <_Z8btnPressv+0x2a>
    1f2e:	6f 5f       	subi	r22, 0xFF	; 255
    1f30:	7f 4f       	sbci	r23, 0xFF	; 255
    1f32:	cb cf       	rjmp	.-106    	; 0x1eca <_Z8btnPressv+0x8>
    1f34:	86 e2       	ldi	r24, 0x26	; 38
    1f36:	08 95       	ret

00001f38 <main>:

#ifndef F_CPU
#define F_CPU 1000000UL
#endif
int main()
{
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	cd b7       	in	r28, 0x3d	; 61
    1f3e:	de b7       	in	r29, 0x3e	; 62
    1f40:	2c 97       	sbiw	r28, 0x0c	; 12
    1f42:	0f b6       	in	r0, 0x3f	; 63
    1f44:	f8 94       	cli
    1f46:	de bf       	out	0x3e, r29	; 62
    1f48:	0f be       	out	0x3f, r0	; 63
    1f4a:	cd bf       	out	0x3d, r28	; 61
	init_buzzer();		// Initialize pins used for buzzer and Interrupt button
    1f4c:	0e 94 20 0a 	call	0x1440	; 0x1440 <_Z11init_buzzerv>
	LCD_Init();			/* Initialization of LCD*/
    1f50:	0e 94 bd 0c 	call	0x197a	; 0x197a <_Z8LCD_Initv>
	LCD_String("   WELCOME!!!");
    1f54:	85 e7       	ldi	r24, 0x75	; 117
    1f56:	91 e0       	ldi	r25, 0x01	; 1
    1f58:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <_Z10LCD_StringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1f5c:	2f e3       	ldi	r18, 0x3F	; 63
    1f5e:	8d e0       	ldi	r24, 0x0D	; 13
    1f60:	93 e0       	ldi	r25, 0x03	; 3
    1f62:	21 50       	subi	r18, 0x01	; 1
    1f64:	80 40       	sbci	r24, 0x00	; 0
    1f66:	90 40       	sbci	r25, 0x00	; 0
    1f68:	e1 f7       	brne	.-8      	; 0x1f62 <main+0x2a>
    1f6a:	00 c0       	rjmp	.+0      	; 0x1f6c <main+0x34>
    1f6c:	00 00       	nop
	_delay_ms(1000);
	LCD_Clear();
    1f6e:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <_Z9LCD_Clearv>
	ds1307_init();
    1f72:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <_Z11ds1307_initv>
	int clocktime[6] = {21,05,4,12,8,35};
    1f76:	8c e0       	ldi	r24, 0x0C	; 12
    1f78:	ed e4       	ldi	r30, 0x4D	; 77
    1f7a:	f1 e0       	ldi	r31, 0x01	; 1
    1f7c:	de 01       	movw	r26, r28
    1f7e:	11 96       	adiw	r26, 0x01	; 1
    1f80:	01 90       	ld	r0, Z+
    1f82:	0d 92       	st	X+, r0
    1f84:	8a 95       	dec	r24
    1f86:	e1 f7       	brne	.-8      	; 0x1f80 <main+0x48>
	setClockTime(clocktime);
    1f88:	ce 01       	movw	r24, r28
    1f8a:	01 96       	adiw	r24, 0x01	; 1
    1f8c:	0e 94 34 09 	call	0x1268	; 0x1268 <_Z12setClockTimePi>
	setAlarm(1209);
    1f90:	89 eb       	ldi	r24, 0xB9	; 185
    1f92:	94 e0       	ldi	r25, 0x04	; 4
    1f94:	0e 94 49 08 	call	0x1092	; 0x1092 <_Z8setAlarmi>
	int menu = 0;
    1f98:	00 e0       	ldi	r16, 0x00	; 0
    1f9a:	10 e0       	ldi	r17, 0x00	; 0
	char key;
	while(1){
		checkAlarm();
    1f9c:	0e 94 7e 08 	call	0x10fc	; 0x10fc <_Z10checkAlarmv>
		key = btnPress();
    1fa0:	0e 94 61 0f 	call	0x1ec2	; 0x1ec2 <_Z8btnPressv>
    1fa4:	f8 2e       	mov	r15, r24
		if (menu==0){
    1fa6:	01 15       	cp	r16, r1
    1fa8:	11 05       	cpc	r17, r1
    1faa:	11 f4       	brne	.+4      	; 0x1fb0 <main+0x78>
			displayTime();
    1fac:	0e 94 b6 09 	call	0x136c	; 0x136c <_Z11displayTimev>
		}
		if (key=='*'){
    1fb0:	2a e2       	ldi	r18, 0x2A	; 42
    1fb2:	f2 12       	cpse	r15, r18
    1fb4:	0d c0       	rjmp	.+26     	; 0x1fd0 <main+0x98>
    1fb6:	8f e7       	ldi	r24, 0x7F	; 127
    1fb8:	98 e3       	ldi	r25, 0x38	; 56
    1fba:	21 e0       	ldi	r18, 0x01	; 1
    1fbc:	81 50       	subi	r24, 0x01	; 1
    1fbe:	90 40       	sbci	r25, 0x00	; 0
    1fc0:	20 40       	sbci	r18, 0x00	; 0
    1fc2:	e1 f7       	brne	.-8      	; 0x1fbc <main+0x84>
    1fc4:	00 c0       	rjmp	.+0      	; 0x1fc6 <main+0x8e>
    1fc6:	00 00       	nop
			_delay_ms(400);
			menu ++;
    1fc8:	0f 5f       	subi	r16, 0xFF	; 255
    1fca:	1f 4f       	sbci	r17, 0xFF	; 255
			LCD_Clear();
    1fcc:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <_Z9LCD_Clearv>
		}
		if (menu>0){
    1fd0:	10 16       	cp	r1, r16
    1fd2:	11 06       	cpc	r1, r17
    1fd4:	24 f4       	brge	.+8      	; 0x1fde <main+0xa6>
			LCD_Menu(key,menu);
    1fd6:	b8 01       	movw	r22, r16
    1fd8:	8f 2d       	mov	r24, r15
    1fda:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <_Z8LCD_Menuci>
		}
		if (menu==3){
    1fde:	03 30       	cpi	r16, 0x03	; 3
    1fe0:	11 05       	cpc	r17, r1
    1fe2:	11 f4       	brne	.+4      	; 0x1fe8 <main+0xb0>
			menu = 0;
    1fe4:	00 e0       	ldi	r16, 0x00	; 0
    1fe6:	10 e0       	ldi	r17, 0x00	; 0
		}
		if (key=='#'){
    1fe8:	83 e2       	ldi	r24, 0x23	; 35
    1fea:	f8 12       	cpse	r15, r24
    1fec:	d7 cf       	rjmp	.-82     	; 0x1f9c <main+0x64>
    1fee:	9f e7       	ldi	r25, 0x7F	; 127
    1ff0:	28 e3       	ldi	r18, 0x38	; 56
    1ff2:	81 e0       	ldi	r24, 0x01	; 1
    1ff4:	91 50       	subi	r25, 0x01	; 1
    1ff6:	20 40       	sbci	r18, 0x00	; 0
    1ff8:	80 40       	sbci	r24, 0x00	; 0
    1ffa:	e1 f7       	brne	.-8      	; 0x1ff4 <main+0xbc>
    1ffc:	00 c0       	rjmp	.+0      	; 0x1ffe <main+0xc6>
    1ffe:	00 00       	nop
			_delay_ms(400);
			menu --;
    2000:	01 50       	subi	r16, 0x01	; 1
    2002:	11 09       	sbc	r17, r1
			LCD_Clear();
    2004:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <_Z9LCD_Clearv>
    2008:	c9 cf       	rjmp	.-110    	; 0x1f9c <main+0x64>

0000200a <__cmpsf2>:
    200a:	0e 94 ef 10 	call	0x21de	; 0x21de <__fp_cmp>
    200e:	08 f4       	brcc	.+2      	; 0x2012 <__cmpsf2+0x8>
    2010:	81 e0       	ldi	r24, 0x01	; 1
    2012:	08 95       	ret

00002014 <__divsf3>:
    2014:	0e 94 1e 10 	call	0x203c	; 0x203c <__divsf3x>
    2018:	0c 94 2a 11 	jmp	0x2254	; 0x2254 <__fp_round>
    201c:	0e 94 23 11 	call	0x2246	; 0x2246 <__fp_pscB>
    2020:	58 f0       	brcs	.+22     	; 0x2038 <__divsf3+0x24>
    2022:	0e 94 1c 11 	call	0x2238	; 0x2238 <__fp_pscA>
    2026:	40 f0       	brcs	.+16     	; 0x2038 <__divsf3+0x24>
    2028:	29 f4       	brne	.+10     	; 0x2034 <__divsf3+0x20>
    202a:	5f 3f       	cpi	r21, 0xFF	; 255
    202c:	29 f0       	breq	.+10     	; 0x2038 <__divsf3+0x24>
    202e:	0c 94 13 11 	jmp	0x2226	; 0x2226 <__fp_inf>
    2032:	51 11       	cpse	r21, r1
    2034:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__fp_szero>
    2038:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__fp_nan>

0000203c <__divsf3x>:
    203c:	0e 94 3b 11 	call	0x2276	; 0x2276 <__fp_split3>
    2040:	68 f3       	brcs	.-38     	; 0x201c <__divsf3+0x8>

00002042 <__divsf3_pse>:
    2042:	99 23       	and	r25, r25
    2044:	b1 f3       	breq	.-20     	; 0x2032 <__divsf3+0x1e>
    2046:	55 23       	and	r21, r21
    2048:	91 f3       	breq	.-28     	; 0x202e <__divsf3+0x1a>
    204a:	95 1b       	sub	r25, r21
    204c:	55 0b       	sbc	r21, r21
    204e:	bb 27       	eor	r27, r27
    2050:	aa 27       	eor	r26, r26
    2052:	62 17       	cp	r22, r18
    2054:	73 07       	cpc	r23, r19
    2056:	84 07       	cpc	r24, r20
    2058:	38 f0       	brcs	.+14     	; 0x2068 <__divsf3_pse+0x26>
    205a:	9f 5f       	subi	r25, 0xFF	; 255
    205c:	5f 4f       	sbci	r21, 0xFF	; 255
    205e:	22 0f       	add	r18, r18
    2060:	33 1f       	adc	r19, r19
    2062:	44 1f       	adc	r20, r20
    2064:	aa 1f       	adc	r26, r26
    2066:	a9 f3       	breq	.-22     	; 0x2052 <__divsf3_pse+0x10>
    2068:	35 d0       	rcall	.+106    	; 0x20d4 <__divsf3_pse+0x92>
    206a:	0e 2e       	mov	r0, r30
    206c:	3a f0       	brmi	.+14     	; 0x207c <__divsf3_pse+0x3a>
    206e:	e0 e8       	ldi	r30, 0x80	; 128
    2070:	32 d0       	rcall	.+100    	; 0x20d6 <__divsf3_pse+0x94>
    2072:	91 50       	subi	r25, 0x01	; 1
    2074:	50 40       	sbci	r21, 0x00	; 0
    2076:	e6 95       	lsr	r30
    2078:	00 1c       	adc	r0, r0
    207a:	ca f7       	brpl	.-14     	; 0x206e <__divsf3_pse+0x2c>
    207c:	2b d0       	rcall	.+86     	; 0x20d4 <__divsf3_pse+0x92>
    207e:	fe 2f       	mov	r31, r30
    2080:	29 d0       	rcall	.+82     	; 0x20d4 <__divsf3_pse+0x92>
    2082:	66 0f       	add	r22, r22
    2084:	77 1f       	adc	r23, r23
    2086:	88 1f       	adc	r24, r24
    2088:	bb 1f       	adc	r27, r27
    208a:	26 17       	cp	r18, r22
    208c:	37 07       	cpc	r19, r23
    208e:	48 07       	cpc	r20, r24
    2090:	ab 07       	cpc	r26, r27
    2092:	b0 e8       	ldi	r27, 0x80	; 128
    2094:	09 f0       	breq	.+2      	; 0x2098 <__divsf3_pse+0x56>
    2096:	bb 0b       	sbc	r27, r27
    2098:	80 2d       	mov	r24, r0
    209a:	bf 01       	movw	r22, r30
    209c:	ff 27       	eor	r31, r31
    209e:	93 58       	subi	r25, 0x83	; 131
    20a0:	5f 4f       	sbci	r21, 0xFF	; 255
    20a2:	3a f0       	brmi	.+14     	; 0x20b2 <__divsf3_pse+0x70>
    20a4:	9e 3f       	cpi	r25, 0xFE	; 254
    20a6:	51 05       	cpc	r21, r1
    20a8:	78 f0       	brcs	.+30     	; 0x20c8 <__divsf3_pse+0x86>
    20aa:	0c 94 13 11 	jmp	0x2226	; 0x2226 <__fp_inf>
    20ae:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__fp_szero>
    20b2:	5f 3f       	cpi	r21, 0xFF	; 255
    20b4:	e4 f3       	brlt	.-8      	; 0x20ae <__divsf3_pse+0x6c>
    20b6:	98 3e       	cpi	r25, 0xE8	; 232
    20b8:	d4 f3       	brlt	.-12     	; 0x20ae <__divsf3_pse+0x6c>
    20ba:	86 95       	lsr	r24
    20bc:	77 95       	ror	r23
    20be:	67 95       	ror	r22
    20c0:	b7 95       	ror	r27
    20c2:	f7 95       	ror	r31
    20c4:	9f 5f       	subi	r25, 0xFF	; 255
    20c6:	c9 f7       	brne	.-14     	; 0x20ba <__divsf3_pse+0x78>
    20c8:	88 0f       	add	r24, r24
    20ca:	91 1d       	adc	r25, r1
    20cc:	96 95       	lsr	r25
    20ce:	87 95       	ror	r24
    20d0:	97 f9       	bld	r25, 7
    20d2:	08 95       	ret
    20d4:	e1 e0       	ldi	r30, 0x01	; 1
    20d6:	66 0f       	add	r22, r22
    20d8:	77 1f       	adc	r23, r23
    20da:	88 1f       	adc	r24, r24
    20dc:	bb 1f       	adc	r27, r27
    20de:	62 17       	cp	r22, r18
    20e0:	73 07       	cpc	r23, r19
    20e2:	84 07       	cpc	r24, r20
    20e4:	ba 07       	cpc	r27, r26
    20e6:	20 f0       	brcs	.+8      	; 0x20f0 <__divsf3_pse+0xae>
    20e8:	62 1b       	sub	r22, r18
    20ea:	73 0b       	sbc	r23, r19
    20ec:	84 0b       	sbc	r24, r20
    20ee:	ba 0b       	sbc	r27, r26
    20f0:	ee 1f       	adc	r30, r30
    20f2:	88 f7       	brcc	.-30     	; 0x20d6 <__divsf3_pse+0x94>
    20f4:	e0 95       	com	r30
    20f6:	08 95       	ret

000020f8 <__fixsfsi>:
    20f8:	0e 94 83 10 	call	0x2106	; 0x2106 <__fixunssfsi>
    20fc:	68 94       	set
    20fe:	b1 11       	cpse	r27, r1
    2100:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__fp_szero>
    2104:	08 95       	ret

00002106 <__fixunssfsi>:
    2106:	0e 94 43 11 	call	0x2286	; 0x2286 <__fp_splitA>
    210a:	88 f0       	brcs	.+34     	; 0x212e <__fixunssfsi+0x28>
    210c:	9f 57       	subi	r25, 0x7F	; 127
    210e:	98 f0       	brcs	.+38     	; 0x2136 <__fixunssfsi+0x30>
    2110:	b9 2f       	mov	r27, r25
    2112:	99 27       	eor	r25, r25
    2114:	b7 51       	subi	r27, 0x17	; 23
    2116:	b0 f0       	brcs	.+44     	; 0x2144 <__fixunssfsi+0x3e>
    2118:	e1 f0       	breq	.+56     	; 0x2152 <__fixunssfsi+0x4c>
    211a:	66 0f       	add	r22, r22
    211c:	77 1f       	adc	r23, r23
    211e:	88 1f       	adc	r24, r24
    2120:	99 1f       	adc	r25, r25
    2122:	1a f0       	brmi	.+6      	; 0x212a <__fixunssfsi+0x24>
    2124:	ba 95       	dec	r27
    2126:	c9 f7       	brne	.-14     	; 0x211a <__fixunssfsi+0x14>
    2128:	14 c0       	rjmp	.+40     	; 0x2152 <__fixunssfsi+0x4c>
    212a:	b1 30       	cpi	r27, 0x01	; 1
    212c:	91 f0       	breq	.+36     	; 0x2152 <__fixunssfsi+0x4c>
    212e:	0e 94 5d 11 	call	0x22ba	; 0x22ba <__fp_zero>
    2132:	b1 e0       	ldi	r27, 0x01	; 1
    2134:	08 95       	ret
    2136:	0c 94 5d 11 	jmp	0x22ba	; 0x22ba <__fp_zero>
    213a:	67 2f       	mov	r22, r23
    213c:	78 2f       	mov	r23, r24
    213e:	88 27       	eor	r24, r24
    2140:	b8 5f       	subi	r27, 0xF8	; 248
    2142:	39 f0       	breq	.+14     	; 0x2152 <__fixunssfsi+0x4c>
    2144:	b9 3f       	cpi	r27, 0xF9	; 249
    2146:	cc f3       	brlt	.-14     	; 0x213a <__fixunssfsi+0x34>
    2148:	86 95       	lsr	r24
    214a:	77 95       	ror	r23
    214c:	67 95       	ror	r22
    214e:	b3 95       	inc	r27
    2150:	d9 f7       	brne	.-10     	; 0x2148 <__fixunssfsi+0x42>
    2152:	3e f4       	brtc	.+14     	; 0x2162 <__fixunssfsi+0x5c>
    2154:	90 95       	com	r25
    2156:	80 95       	com	r24
    2158:	70 95       	com	r23
    215a:	61 95       	neg	r22
    215c:	7f 4f       	sbci	r23, 0xFF	; 255
    215e:	8f 4f       	sbci	r24, 0xFF	; 255
    2160:	9f 4f       	sbci	r25, 0xFF	; 255
    2162:	08 95       	ret

00002164 <__floatunsisf>:
    2164:	e8 94       	clt
    2166:	09 c0       	rjmp	.+18     	; 0x217a <__floatsisf+0x12>

00002168 <__floatsisf>:
    2168:	97 fb       	bst	r25, 7
    216a:	3e f4       	brtc	.+14     	; 0x217a <__floatsisf+0x12>
    216c:	90 95       	com	r25
    216e:	80 95       	com	r24
    2170:	70 95       	com	r23
    2172:	61 95       	neg	r22
    2174:	7f 4f       	sbci	r23, 0xFF	; 255
    2176:	8f 4f       	sbci	r24, 0xFF	; 255
    2178:	9f 4f       	sbci	r25, 0xFF	; 255
    217a:	99 23       	and	r25, r25
    217c:	a9 f0       	breq	.+42     	; 0x21a8 <__floatsisf+0x40>
    217e:	f9 2f       	mov	r31, r25
    2180:	96 e9       	ldi	r25, 0x96	; 150
    2182:	bb 27       	eor	r27, r27
    2184:	93 95       	inc	r25
    2186:	f6 95       	lsr	r31
    2188:	87 95       	ror	r24
    218a:	77 95       	ror	r23
    218c:	67 95       	ror	r22
    218e:	b7 95       	ror	r27
    2190:	f1 11       	cpse	r31, r1
    2192:	f8 cf       	rjmp	.-16     	; 0x2184 <__floatsisf+0x1c>
    2194:	fa f4       	brpl	.+62     	; 0x21d4 <__floatsisf+0x6c>
    2196:	bb 0f       	add	r27, r27
    2198:	11 f4       	brne	.+4      	; 0x219e <__floatsisf+0x36>
    219a:	60 ff       	sbrs	r22, 0
    219c:	1b c0       	rjmp	.+54     	; 0x21d4 <__floatsisf+0x6c>
    219e:	6f 5f       	subi	r22, 0xFF	; 255
    21a0:	7f 4f       	sbci	r23, 0xFF	; 255
    21a2:	8f 4f       	sbci	r24, 0xFF	; 255
    21a4:	9f 4f       	sbci	r25, 0xFF	; 255
    21a6:	16 c0       	rjmp	.+44     	; 0x21d4 <__floatsisf+0x6c>
    21a8:	88 23       	and	r24, r24
    21aa:	11 f0       	breq	.+4      	; 0x21b0 <__floatsisf+0x48>
    21ac:	96 e9       	ldi	r25, 0x96	; 150
    21ae:	11 c0       	rjmp	.+34     	; 0x21d2 <__floatsisf+0x6a>
    21b0:	77 23       	and	r23, r23
    21b2:	21 f0       	breq	.+8      	; 0x21bc <__floatsisf+0x54>
    21b4:	9e e8       	ldi	r25, 0x8E	; 142
    21b6:	87 2f       	mov	r24, r23
    21b8:	76 2f       	mov	r23, r22
    21ba:	05 c0       	rjmp	.+10     	; 0x21c6 <__floatsisf+0x5e>
    21bc:	66 23       	and	r22, r22
    21be:	71 f0       	breq	.+28     	; 0x21dc <__floatsisf+0x74>
    21c0:	96 e8       	ldi	r25, 0x86	; 134
    21c2:	86 2f       	mov	r24, r22
    21c4:	70 e0       	ldi	r23, 0x00	; 0
    21c6:	60 e0       	ldi	r22, 0x00	; 0
    21c8:	2a f0       	brmi	.+10     	; 0x21d4 <__floatsisf+0x6c>
    21ca:	9a 95       	dec	r25
    21cc:	66 0f       	add	r22, r22
    21ce:	77 1f       	adc	r23, r23
    21d0:	88 1f       	adc	r24, r24
    21d2:	da f7       	brpl	.-10     	; 0x21ca <__floatsisf+0x62>
    21d4:	88 0f       	add	r24, r24
    21d6:	96 95       	lsr	r25
    21d8:	87 95       	ror	r24
    21da:	97 f9       	bld	r25, 7
    21dc:	08 95       	ret

000021de <__fp_cmp>:
    21de:	99 0f       	add	r25, r25
    21e0:	00 08       	sbc	r0, r0
    21e2:	55 0f       	add	r21, r21
    21e4:	aa 0b       	sbc	r26, r26
    21e6:	e0 e8       	ldi	r30, 0x80	; 128
    21e8:	fe ef       	ldi	r31, 0xFE	; 254
    21ea:	16 16       	cp	r1, r22
    21ec:	17 06       	cpc	r1, r23
    21ee:	e8 07       	cpc	r30, r24
    21f0:	f9 07       	cpc	r31, r25
    21f2:	c0 f0       	brcs	.+48     	; 0x2224 <__fp_cmp+0x46>
    21f4:	12 16       	cp	r1, r18
    21f6:	13 06       	cpc	r1, r19
    21f8:	e4 07       	cpc	r30, r20
    21fa:	f5 07       	cpc	r31, r21
    21fc:	98 f0       	brcs	.+38     	; 0x2224 <__fp_cmp+0x46>
    21fe:	62 1b       	sub	r22, r18
    2200:	73 0b       	sbc	r23, r19
    2202:	84 0b       	sbc	r24, r20
    2204:	95 0b       	sbc	r25, r21
    2206:	39 f4       	brne	.+14     	; 0x2216 <__fp_cmp+0x38>
    2208:	0a 26       	eor	r0, r26
    220a:	61 f0       	breq	.+24     	; 0x2224 <__fp_cmp+0x46>
    220c:	23 2b       	or	r18, r19
    220e:	24 2b       	or	r18, r20
    2210:	25 2b       	or	r18, r21
    2212:	21 f4       	brne	.+8      	; 0x221c <__fp_cmp+0x3e>
    2214:	08 95       	ret
    2216:	0a 26       	eor	r0, r26
    2218:	09 f4       	brne	.+2      	; 0x221c <__fp_cmp+0x3e>
    221a:	a1 40       	sbci	r26, 0x01	; 1
    221c:	a6 95       	lsr	r26
    221e:	8f ef       	ldi	r24, 0xFF	; 255
    2220:	81 1d       	adc	r24, r1
    2222:	81 1d       	adc	r24, r1
    2224:	08 95       	ret

00002226 <__fp_inf>:
    2226:	97 f9       	bld	r25, 7
    2228:	9f 67       	ori	r25, 0x7F	; 127
    222a:	80 e8       	ldi	r24, 0x80	; 128
    222c:	70 e0       	ldi	r23, 0x00	; 0
    222e:	60 e0       	ldi	r22, 0x00	; 0
    2230:	08 95       	ret

00002232 <__fp_nan>:
    2232:	9f ef       	ldi	r25, 0xFF	; 255
    2234:	80 ec       	ldi	r24, 0xC0	; 192
    2236:	08 95       	ret

00002238 <__fp_pscA>:
    2238:	00 24       	eor	r0, r0
    223a:	0a 94       	dec	r0
    223c:	16 16       	cp	r1, r22
    223e:	17 06       	cpc	r1, r23
    2240:	18 06       	cpc	r1, r24
    2242:	09 06       	cpc	r0, r25
    2244:	08 95       	ret

00002246 <__fp_pscB>:
    2246:	00 24       	eor	r0, r0
    2248:	0a 94       	dec	r0
    224a:	12 16       	cp	r1, r18
    224c:	13 06       	cpc	r1, r19
    224e:	14 06       	cpc	r1, r20
    2250:	05 06       	cpc	r0, r21
    2252:	08 95       	ret

00002254 <__fp_round>:
    2254:	09 2e       	mov	r0, r25
    2256:	03 94       	inc	r0
    2258:	00 0c       	add	r0, r0
    225a:	11 f4       	brne	.+4      	; 0x2260 <__fp_round+0xc>
    225c:	88 23       	and	r24, r24
    225e:	52 f0       	brmi	.+20     	; 0x2274 <__fp_round+0x20>
    2260:	bb 0f       	add	r27, r27
    2262:	40 f4       	brcc	.+16     	; 0x2274 <__fp_round+0x20>
    2264:	bf 2b       	or	r27, r31
    2266:	11 f4       	brne	.+4      	; 0x226c <__fp_round+0x18>
    2268:	60 ff       	sbrs	r22, 0
    226a:	04 c0       	rjmp	.+8      	; 0x2274 <__fp_round+0x20>
    226c:	6f 5f       	subi	r22, 0xFF	; 255
    226e:	7f 4f       	sbci	r23, 0xFF	; 255
    2270:	8f 4f       	sbci	r24, 0xFF	; 255
    2272:	9f 4f       	sbci	r25, 0xFF	; 255
    2274:	08 95       	ret

00002276 <__fp_split3>:
    2276:	57 fd       	sbrc	r21, 7
    2278:	90 58       	subi	r25, 0x80	; 128
    227a:	44 0f       	add	r20, r20
    227c:	55 1f       	adc	r21, r21
    227e:	59 f0       	breq	.+22     	; 0x2296 <__fp_splitA+0x10>
    2280:	5f 3f       	cpi	r21, 0xFF	; 255
    2282:	71 f0       	breq	.+28     	; 0x22a0 <__fp_splitA+0x1a>
    2284:	47 95       	ror	r20

00002286 <__fp_splitA>:
    2286:	88 0f       	add	r24, r24
    2288:	97 fb       	bst	r25, 7
    228a:	99 1f       	adc	r25, r25
    228c:	61 f0       	breq	.+24     	; 0x22a6 <__fp_splitA+0x20>
    228e:	9f 3f       	cpi	r25, 0xFF	; 255
    2290:	79 f0       	breq	.+30     	; 0x22b0 <__fp_splitA+0x2a>
    2292:	87 95       	ror	r24
    2294:	08 95       	ret
    2296:	12 16       	cp	r1, r18
    2298:	13 06       	cpc	r1, r19
    229a:	14 06       	cpc	r1, r20
    229c:	55 1f       	adc	r21, r21
    229e:	f2 cf       	rjmp	.-28     	; 0x2284 <__fp_split3+0xe>
    22a0:	46 95       	lsr	r20
    22a2:	f1 df       	rcall	.-30     	; 0x2286 <__fp_splitA>
    22a4:	08 c0       	rjmp	.+16     	; 0x22b6 <__fp_splitA+0x30>
    22a6:	16 16       	cp	r1, r22
    22a8:	17 06       	cpc	r1, r23
    22aa:	18 06       	cpc	r1, r24
    22ac:	99 1f       	adc	r25, r25
    22ae:	f1 cf       	rjmp	.-30     	; 0x2292 <__fp_splitA+0xc>
    22b0:	86 95       	lsr	r24
    22b2:	71 05       	cpc	r23, r1
    22b4:	61 05       	cpc	r22, r1
    22b6:	08 94       	sec
    22b8:	08 95       	ret

000022ba <__fp_zero>:
    22ba:	e8 94       	clt

000022bc <__fp_szero>:
    22bc:	bb 27       	eor	r27, r27
    22be:	66 27       	eor	r22, r22
    22c0:	77 27       	eor	r23, r23
    22c2:	cb 01       	movw	r24, r22
    22c4:	97 f9       	bld	r25, 7
    22c6:	08 95       	ret

000022c8 <__gesf2>:
    22c8:	0e 94 ef 10 	call	0x21de	; 0x21de <__fp_cmp>
    22cc:	08 f4       	brcc	.+2      	; 0x22d0 <__gesf2+0x8>
    22ce:	8f ef       	ldi	r24, 0xFF	; 255
    22d0:	08 95       	ret

000022d2 <__mulsf3>:
    22d2:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <__mulsf3x>
    22d6:	0c 94 2a 11 	jmp	0x2254	; 0x2254 <__fp_round>
    22da:	0e 94 1c 11 	call	0x2238	; 0x2238 <__fp_pscA>
    22de:	38 f0       	brcs	.+14     	; 0x22ee <__mulsf3+0x1c>
    22e0:	0e 94 23 11 	call	0x2246	; 0x2246 <__fp_pscB>
    22e4:	20 f0       	brcs	.+8      	; 0x22ee <__mulsf3+0x1c>
    22e6:	95 23       	and	r25, r21
    22e8:	11 f0       	breq	.+4      	; 0x22ee <__mulsf3+0x1c>
    22ea:	0c 94 13 11 	jmp	0x2226	; 0x2226 <__fp_inf>
    22ee:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__fp_nan>
    22f2:	11 24       	eor	r1, r1
    22f4:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__fp_szero>

000022f8 <__mulsf3x>:
    22f8:	0e 94 3b 11 	call	0x2276	; 0x2276 <__fp_split3>
    22fc:	70 f3       	brcs	.-36     	; 0x22da <__mulsf3+0x8>

000022fe <__mulsf3_pse>:
    22fe:	95 9f       	mul	r25, r21
    2300:	c1 f3       	breq	.-16     	; 0x22f2 <__mulsf3+0x20>
    2302:	95 0f       	add	r25, r21
    2304:	50 e0       	ldi	r21, 0x00	; 0
    2306:	55 1f       	adc	r21, r21
    2308:	62 9f       	mul	r22, r18
    230a:	f0 01       	movw	r30, r0
    230c:	72 9f       	mul	r23, r18
    230e:	bb 27       	eor	r27, r27
    2310:	f0 0d       	add	r31, r0
    2312:	b1 1d       	adc	r27, r1
    2314:	63 9f       	mul	r22, r19
    2316:	aa 27       	eor	r26, r26
    2318:	f0 0d       	add	r31, r0
    231a:	b1 1d       	adc	r27, r1
    231c:	aa 1f       	adc	r26, r26
    231e:	64 9f       	mul	r22, r20
    2320:	66 27       	eor	r22, r22
    2322:	b0 0d       	add	r27, r0
    2324:	a1 1d       	adc	r26, r1
    2326:	66 1f       	adc	r22, r22
    2328:	82 9f       	mul	r24, r18
    232a:	22 27       	eor	r18, r18
    232c:	b0 0d       	add	r27, r0
    232e:	a1 1d       	adc	r26, r1
    2330:	62 1f       	adc	r22, r18
    2332:	73 9f       	mul	r23, r19
    2334:	b0 0d       	add	r27, r0
    2336:	a1 1d       	adc	r26, r1
    2338:	62 1f       	adc	r22, r18
    233a:	83 9f       	mul	r24, r19
    233c:	a0 0d       	add	r26, r0
    233e:	61 1d       	adc	r22, r1
    2340:	22 1f       	adc	r18, r18
    2342:	74 9f       	mul	r23, r20
    2344:	33 27       	eor	r19, r19
    2346:	a0 0d       	add	r26, r0
    2348:	61 1d       	adc	r22, r1
    234a:	23 1f       	adc	r18, r19
    234c:	84 9f       	mul	r24, r20
    234e:	60 0d       	add	r22, r0
    2350:	21 1d       	adc	r18, r1
    2352:	82 2f       	mov	r24, r18
    2354:	76 2f       	mov	r23, r22
    2356:	6a 2f       	mov	r22, r26
    2358:	11 24       	eor	r1, r1
    235a:	9f 57       	subi	r25, 0x7F	; 127
    235c:	50 40       	sbci	r21, 0x00	; 0
    235e:	9a f0       	brmi	.+38     	; 0x2386 <__mulsf3_pse+0x88>
    2360:	f1 f0       	breq	.+60     	; 0x239e <__mulsf3_pse+0xa0>
    2362:	88 23       	and	r24, r24
    2364:	4a f0       	brmi	.+18     	; 0x2378 <__mulsf3_pse+0x7a>
    2366:	ee 0f       	add	r30, r30
    2368:	ff 1f       	adc	r31, r31
    236a:	bb 1f       	adc	r27, r27
    236c:	66 1f       	adc	r22, r22
    236e:	77 1f       	adc	r23, r23
    2370:	88 1f       	adc	r24, r24
    2372:	91 50       	subi	r25, 0x01	; 1
    2374:	50 40       	sbci	r21, 0x00	; 0
    2376:	a9 f7       	brne	.-22     	; 0x2362 <__mulsf3_pse+0x64>
    2378:	9e 3f       	cpi	r25, 0xFE	; 254
    237a:	51 05       	cpc	r21, r1
    237c:	80 f0       	brcs	.+32     	; 0x239e <__mulsf3_pse+0xa0>
    237e:	0c 94 13 11 	jmp	0x2226	; 0x2226 <__fp_inf>
    2382:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__fp_szero>
    2386:	5f 3f       	cpi	r21, 0xFF	; 255
    2388:	e4 f3       	brlt	.-8      	; 0x2382 <__mulsf3_pse+0x84>
    238a:	98 3e       	cpi	r25, 0xE8	; 232
    238c:	d4 f3       	brlt	.-12     	; 0x2382 <__mulsf3_pse+0x84>
    238e:	86 95       	lsr	r24
    2390:	77 95       	ror	r23
    2392:	67 95       	ror	r22
    2394:	b7 95       	ror	r27
    2396:	f7 95       	ror	r31
    2398:	e7 95       	ror	r30
    239a:	9f 5f       	subi	r25, 0xFF	; 255
    239c:	c1 f7       	brne	.-16     	; 0x238e <__mulsf3_pse+0x90>
    239e:	fe 2b       	or	r31, r30
    23a0:	88 0f       	add	r24, r24
    23a2:	91 1d       	adc	r25, r1
    23a4:	96 95       	lsr	r25
    23a6:	87 95       	ror	r24
    23a8:	97 f9       	bld	r25, 7
    23aa:	08 95       	ret

000023ac <__divmodhi4>:
    23ac:	97 fb       	bst	r25, 7
    23ae:	07 2e       	mov	r0, r23
    23b0:	16 f4       	brtc	.+4      	; 0x23b6 <__divmodhi4+0xa>
    23b2:	00 94       	com	r0
    23b4:	07 d0       	rcall	.+14     	; 0x23c4 <__divmodhi4_neg1>
    23b6:	77 fd       	sbrc	r23, 7
    23b8:	09 d0       	rcall	.+18     	; 0x23cc <__divmodhi4_neg2>
    23ba:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <__udivmodhi4>
    23be:	07 fc       	sbrc	r0, 7
    23c0:	05 d0       	rcall	.+10     	; 0x23cc <__divmodhi4_neg2>
    23c2:	3e f4       	brtc	.+14     	; 0x23d2 <__divmodhi4_exit>

000023c4 <__divmodhi4_neg1>:
    23c4:	90 95       	com	r25
    23c6:	81 95       	neg	r24
    23c8:	9f 4f       	sbci	r25, 0xFF	; 255
    23ca:	08 95       	ret

000023cc <__divmodhi4_neg2>:
    23cc:	70 95       	com	r23
    23ce:	61 95       	neg	r22
    23d0:	7f 4f       	sbci	r23, 0xFF	; 255

000023d2 <__divmodhi4_exit>:
    23d2:	08 95       	ret

000023d4 <__udivmodhi4>:
    23d4:	aa 1b       	sub	r26, r26
    23d6:	bb 1b       	sub	r27, r27
    23d8:	51 e1       	ldi	r21, 0x11	; 17
    23da:	07 c0       	rjmp	.+14     	; 0x23ea <__udivmodhi4_ep>

000023dc <__udivmodhi4_loop>:
    23dc:	aa 1f       	adc	r26, r26
    23de:	bb 1f       	adc	r27, r27
    23e0:	a6 17       	cp	r26, r22
    23e2:	b7 07       	cpc	r27, r23
    23e4:	10 f0       	brcs	.+4      	; 0x23ea <__udivmodhi4_ep>
    23e6:	a6 1b       	sub	r26, r22
    23e8:	b7 0b       	sbc	r27, r23

000023ea <__udivmodhi4_ep>:
    23ea:	88 1f       	adc	r24, r24
    23ec:	99 1f       	adc	r25, r25
    23ee:	5a 95       	dec	r21
    23f0:	a9 f7       	brne	.-22     	; 0x23dc <__udivmodhi4_loop>
    23f2:	80 95       	com	r24
    23f4:	90 95       	com	r25
    23f6:	bc 01       	movw	r22, r24
    23f8:	cd 01       	movw	r24, r26
    23fa:	08 95       	ret

000023fc <__itoa_ncheck>:
    23fc:	bb 27       	eor	r27, r27
    23fe:	4a 30       	cpi	r20, 0x0A	; 10
    2400:	31 f4       	brne	.+12     	; 0x240e <__itoa_ncheck+0x12>
    2402:	99 23       	and	r25, r25
    2404:	22 f4       	brpl	.+8      	; 0x240e <__itoa_ncheck+0x12>
    2406:	bd e2       	ldi	r27, 0x2D	; 45
    2408:	90 95       	com	r25
    240a:	81 95       	neg	r24
    240c:	9f 4f       	sbci	r25, 0xFF	; 255
    240e:	0c 94 0a 12 	jmp	0x2414	; 0x2414 <__utoa_common>

00002412 <__utoa_ncheck>:
    2412:	bb 27       	eor	r27, r27

00002414 <__utoa_common>:
    2414:	fb 01       	movw	r30, r22
    2416:	55 27       	eor	r21, r21
    2418:	aa 27       	eor	r26, r26
    241a:	88 0f       	add	r24, r24
    241c:	99 1f       	adc	r25, r25
    241e:	aa 1f       	adc	r26, r26
    2420:	a4 17       	cp	r26, r20
    2422:	10 f0       	brcs	.+4      	; 0x2428 <__utoa_common+0x14>
    2424:	a4 1b       	sub	r26, r20
    2426:	83 95       	inc	r24
    2428:	50 51       	subi	r21, 0x10	; 16
    242a:	b9 f7       	brne	.-18     	; 0x241a <__utoa_common+0x6>
    242c:	a0 5d       	subi	r26, 0xD0	; 208
    242e:	aa 33       	cpi	r26, 0x3A	; 58
    2430:	08 f0       	brcs	.+2      	; 0x2434 <__utoa_common+0x20>
    2432:	a9 5d       	subi	r26, 0xD9	; 217
    2434:	a1 93       	st	Z+, r26
    2436:	00 97       	sbiw	r24, 0x00	; 0
    2438:	79 f7       	brne	.-34     	; 0x2418 <__utoa_common+0x4>
    243a:	b1 11       	cpse	r27, r1
    243c:	b1 93       	st	Z+, r27
    243e:	11 92       	st	Z+, r1
    2440:	cb 01       	movw	r24, r22
    2442:	0c 94 23 12 	jmp	0x2446	; 0x2446 <strrev>

00002446 <strrev>:
    2446:	dc 01       	movw	r26, r24
    2448:	fc 01       	movw	r30, r24
    244a:	67 2f       	mov	r22, r23
    244c:	71 91       	ld	r23, Z+
    244e:	77 23       	and	r23, r23
    2450:	e1 f7       	brne	.-8      	; 0x244a <strrev+0x4>
    2452:	32 97       	sbiw	r30, 0x02	; 2
    2454:	04 c0       	rjmp	.+8      	; 0x245e <strrev+0x18>
    2456:	7c 91       	ld	r23, X
    2458:	6d 93       	st	X+, r22
    245a:	70 83       	st	Z, r23
    245c:	62 91       	ld	r22, -Z
    245e:	ae 17       	cp	r26, r30
    2460:	bf 07       	cpc	r27, r31
    2462:	c8 f3       	brcs	.-14     	; 0x2456 <strrev+0x10>
    2464:	08 95       	ret

00002466 <_exit>:
    2466:	f8 94       	cli

00002468 <__stop_program>:
    2468:	ff cf       	rjmp	.-2      	; 0x2468 <__stop_program>
