
Audio_Output_Avr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000019a6  00001a3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800104  00800104  00001a3e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001a3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00001ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c82  00000000  00000000  00001b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e2  00000000  00000000  0000278a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a4  00000000  00000000  00002f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00003510  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000529  00000000  00000000  00003678  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a09  00000000  00000000  00003ba1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000045aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__ctors_end>
       4:	0c 94 35 08 	jmp	0x106a	; 0x106a <__vector_1>
       8:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
       c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      10:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      14:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      18:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      1c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      20:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      24:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      28:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      2c:	0c 94 23 08 	jmp	0x1046	; 0x1046 <__vector_11>
      30:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      34:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      38:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      3c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      40:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      44:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      48:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      4c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      50:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      54:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      58:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      5c:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      60:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>
      64:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	52 00       	.word	0x0052	; ????
      6a:	08 00       	.word	0x0008	; ????
      6c:	52 00       	.word	0x0052	; ????
      6e:	08 00       	.word	0x0008	; ????
      70:	a5 00       	.word	0x00a5	; ????
      72:	08 00       	.word	0x0008	; ????
      74:	52 00       	.word	0x0052	; ????
      76:	08 00       	.word	0x0008	; ????
      78:	52 00       	.word	0x0052	; ????
      7a:	08 00       	.word	0x0008	; ????
      7c:	93 00       	.word	0x0093	; ????
      7e:	08 00       	.word	0x0008	; ????
      80:	52 00       	.word	0x0052	; ????
      82:	08 00       	.word	0x0008	; ????
      84:	52 00       	.word	0x0052	; ????
      86:	08 00       	.word	0x0008	; ????
      88:	83 00       	.word	0x0083	; ????
      8a:	08 00       	.word	0x0008	; ????
      8c:	52 00       	.word	0x0052	; ????
      8e:	08 00       	.word	0x0008	; ????
      90:	52 00       	.word	0x0052	; ????
      92:	08 00       	.word	0x0008	; ????
      94:	75 00       	.word	0x0075	; ????
      96:	08 00       	.word	0x0008	; ????
      98:	52 00       	.word	0x0052	; ????
      9a:	08 00       	.word	0x0008	; ????
      9c:	52 00       	.word	0x0052	; ????
      9e:	08 00       	.word	0x0008	; ????
      a0:	7b 00       	.word	0x007b	; ????
      a2:	08 00       	.word	0x0008	; ????
      a4:	83 00       	.word	0x0083	; ????
      a6:	08 00       	.word	0x0008	; ????
      a8:	52 00       	.word	0x0052	; ????
      aa:	08 00       	.word	0x0008	; ????
      ac:	52 00       	.word	0x0052	; ????
      ae:	08 00       	.word	0x0008	; ????
      b0:	a5 00       	.word	0x00a5	; ????
      b2:	08 00       	.word	0x0008	; ????
      b4:	52 00       	.word	0x0052	; ????
      b6:	08 00       	.word	0x0008	; ????
      b8:	52 00       	.word	0x0052	; ????
      ba:	08 00       	.word	0x0008	; ????
      bc:	93 00       	.word	0x0093	; ????
      be:	08 00       	.word	0x0008	; ????
      c0:	52 00       	.word	0x0052	; ????
      c2:	08 00       	.word	0x0008	; ????
      c4:	52 00       	.word	0x0052	; ????
      c6:	08 00       	.word	0x0008	; ????
      c8:	83 00       	.word	0x0083	; ????
      ca:	08 00       	.word	0x0008	; ????
      cc:	52 00       	.word	0x0052	; ????
      ce:	08 00       	.word	0x0008	; ????
      d0:	52 00       	.word	0x0052	; ????
      d2:	08 00       	.word	0x0008	; ????
      d4:	75 00       	.word	0x0075	; ????
      d6:	fe ff       	.word	0xfffe	; ????
      d8:	52 00       	.word	0x0052	; ????
      da:	08 00       	.word	0x0008	; ????
      dc:	52 00       	.word	0x0052	; ????
      de:	08 00       	.word	0x0008	; ????
      e0:	a5 00       	.word	0x00a5	; ????
      e2:	08 00       	.word	0x0008	; ????
      e4:	52 00       	.word	0x0052	; ????
      e6:	08 00       	.word	0x0008	; ????
      e8:	52 00       	.word	0x0052	; ????
      ea:	08 00       	.word	0x0008	; ????
      ec:	93 00       	.word	0x0093	; ????
      ee:	08 00       	.word	0x0008	; ????
      f0:	52 00       	.word	0x0052	; ????
      f2:	08 00       	.word	0x0008	; ????
      f4:	52 00       	.word	0x0052	; ????
      f6:	08 00       	.word	0x0008	; ????
      f8:	83 00       	.word	0x0083	; ????
      fa:	08 00       	.word	0x0008	; ????
      fc:	52 00       	.word	0x0052	; ????
      fe:	08 00       	.word	0x0008	; ????
     100:	52 00       	.word	0x0052	; ????
     102:	08 00       	.word	0x0008	; ????
     104:	75 00       	.word	0x0075	; ????
     106:	08 00       	.word	0x0008	; ????
     108:	52 00       	.word	0x0052	; ????
     10a:	08 00       	.word	0x0008	; ????
     10c:	52 00       	.word	0x0052	; ????
     10e:	08 00       	.word	0x0008	; ????
     110:	7b 00       	.word	0x007b	; ????
     112:	08 00       	.word	0x0008	; ????
     114:	83 00       	.word	0x0083	; ????
     116:	08 00       	.word	0x0008	; ????
     118:	52 00       	.word	0x0052	; ????
     11a:	08 00       	.word	0x0008	; ????
     11c:	52 00       	.word	0x0052	; ????
     11e:	08 00       	.word	0x0008	; ????
     120:	a5 00       	.word	0x00a5	; ????
     122:	08 00       	.word	0x0008	; ????
     124:	52 00       	.word	0x0052	; ????
     126:	08 00       	.word	0x0008	; ????
     128:	52 00       	.word	0x0052	; ????
     12a:	08 00       	.word	0x0008	; ????
     12c:	93 00       	.word	0x0093	; ????
     12e:	08 00       	.word	0x0008	; ????
     130:	52 00       	.word	0x0052	; ????
     132:	08 00       	.word	0x0008	; ????
     134:	52 00       	.word	0x0052	; ????
     136:	08 00       	.word	0x0008	; ????
     138:	83 00       	.word	0x0083	; ????
     13a:	08 00       	.word	0x0008	; ????
     13c:	52 00       	.word	0x0052	; ????
     13e:	08 00       	.word	0x0008	; ????
     140:	52 00       	.word	0x0052	; ????
     142:	08 00       	.word	0x0008	; ????
     144:	75 00       	.word	0x0075	; ????
     146:	fe ff       	.word	0xfffe	; ????
     148:	52 00       	.word	0x0052	; ????
     14a:	08 00       	.word	0x0008	; ????
     14c:	52 00       	.word	0x0052	; ????
     14e:	08 00       	.word	0x0008	; ????
     150:	a5 00       	.word	0x00a5	; ????
     152:	08 00       	.word	0x0008	; ????
     154:	52 00       	.word	0x0052	; ????
     156:	08 00       	.word	0x0008	; ????
     158:	52 00       	.word	0x0052	; ????
     15a:	08 00       	.word	0x0008	; ????
     15c:	93 00       	.word	0x0093	; ????
     15e:	08 00       	.word	0x0008	; ????
     160:	52 00       	.word	0x0052	; ????
     162:	08 00       	.word	0x0008	; ????
     164:	52 00       	.word	0x0052	; ????
     166:	08 00       	.word	0x0008	; ????
     168:	83 00       	.word	0x0083	; ????
     16a:	08 00       	.word	0x0008	; ????
     16c:	52 00       	.word	0x0052	; ????
     16e:	08 00       	.word	0x0008	; ????
     170:	52 00       	.word	0x0052	; ????
     172:	08 00       	.word	0x0008	; ????
     174:	75 00       	.word	0x0075	; ????
     176:	08 00       	.word	0x0008	; ????
     178:	52 00       	.word	0x0052	; ????
     17a:	08 00       	.word	0x0008	; ????
     17c:	52 00       	.word	0x0052	; ????
     17e:	08 00       	.word	0x0008	; ????
     180:	7b 00       	.word	0x007b	; ????
     182:	08 00       	.word	0x0008	; ????
     184:	83 00       	.word	0x0083	; ????
     186:	08 00       	.word	0x0008	; ????
     188:	52 00       	.word	0x0052	; ????
     18a:	08 00       	.word	0x0008	; ????
     18c:	52 00       	.word	0x0052	; ????
     18e:	08 00       	.word	0x0008	; ????
     190:	a5 00       	.word	0x00a5	; ????
     192:	08 00       	.word	0x0008	; ????
     194:	52 00       	.word	0x0052	; ????
     196:	08 00       	.word	0x0008	; ????
     198:	52 00       	.word	0x0052	; ????
     19a:	08 00       	.word	0x0008	; ????
     19c:	93 00       	.word	0x0093	; ????
     19e:	08 00       	.word	0x0008	; ????
     1a0:	52 00       	.word	0x0052	; ????
     1a2:	08 00       	.word	0x0008	; ????
     1a4:	52 00       	.word	0x0052	; ????
     1a6:	08 00       	.word	0x0008	; ????
     1a8:	83 00       	.word	0x0083	; ????
     1aa:	08 00       	.word	0x0008	; ????
     1ac:	52 00       	.word	0x0052	; ????
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	52 00       	.word	0x0052	; ????
     1b2:	08 00       	.word	0x0008	; ????
     1b4:	75 00       	.word	0x0075	; ????
     1b6:	fe ff       	.word	0xfffe	; ????
     1b8:	52 00       	.word	0x0052	; ????
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	52 00       	.word	0x0052	; ????
     1be:	08 00       	.word	0x0008	; ????
     1c0:	a5 00       	.word	0x00a5	; ????
     1c2:	08 00       	.word	0x0008	; ????
     1c4:	52 00       	.word	0x0052	; ????
     1c6:	08 00       	.word	0x0008	; ????
     1c8:	52 00       	.word	0x0052	; ????
     1ca:	08 00       	.word	0x0008	; ????
     1cc:	93 00       	.word	0x0093	; ????
     1ce:	08 00       	.word	0x0008	; ????
     1d0:	52 00       	.word	0x0052	; ????
     1d2:	08 00       	.word	0x0008	; ????
     1d4:	52 00       	.word	0x0052	; ????
     1d6:	08 00       	.word	0x0008	; ????
     1d8:	83 00       	.word	0x0083	; ????
     1da:	08 00       	.word	0x0008	; ????
     1dc:	52 00       	.word	0x0052	; ????
     1de:	08 00       	.word	0x0008	; ????
     1e0:	52 00       	.word	0x0052	; ????
     1e2:	08 00       	.word	0x0008	; ????
     1e4:	75 00       	.word	0x0075	; ????
     1e6:	08 00       	.word	0x0008	; ????
     1e8:	52 00       	.word	0x0052	; ????
     1ea:	08 00       	.word	0x0008	; ????
     1ec:	52 00       	.word	0x0052	; ????
     1ee:	08 00       	.word	0x0008	; ????
     1f0:	7b 00       	.word	0x007b	; ????
     1f2:	08 00       	.word	0x0008	; ????
     1f4:	83 00       	.word	0x0083	; ????
     1f6:	08 00       	.word	0x0008	; ????
     1f8:	52 00       	.word	0x0052	; ????
     1fa:	08 00       	.word	0x0008	; ????
     1fc:	52 00       	.word	0x0052	; ????
     1fe:	08 00       	.word	0x0008	; ????
     200:	a5 00       	.word	0x00a5	; ????
     202:	08 00       	.word	0x0008	; ????
     204:	52 00       	.word	0x0052	; ????
     206:	08 00       	.word	0x0008	; ????
     208:	52 00       	.word	0x0052	; ????
     20a:	08 00       	.word	0x0008	; ????
     20c:	93 00       	.word	0x0093	; ????
     20e:	08 00       	.word	0x0008	; ????
     210:	52 00       	.word	0x0052	; ????
     212:	08 00       	.word	0x0008	; ????
     214:	52 00       	.word	0x0052	; ????
     216:	08 00       	.word	0x0008	; ????
     218:	b9 00       	.word	0x00b9	; ????
     21a:	f0 ff       	sbrs	r31, 0
     21c:	93 00       	.word	0x0093	; ????
     21e:	f0 ff       	sbrs	r31, 0
     220:	7b 00       	.word	0x007b	; ????
     222:	f0 ff       	sbrs	r31, 0
     224:	dc 00       	.word	0x00dc	; ????
     226:	f0 ff       	sbrs	r31, 0
     228:	b9 00       	.word	0x00b9	; ????
     22a:	f0 ff       	sbrs	r31, 0
     22c:	7b 00       	.word	0x007b	; ????
     22e:	f0 ff       	sbrs	r31, 0
     230:	93 00       	.word	0x0093	; ????
     232:	f0 ff       	sbrs	r31, 0
     234:	b9 00       	.word	0x00b9	; ????
     236:	f0 ff       	sbrs	r31, 0
     238:	dc 00       	.word	0x00dc	; ????
     23a:	f0 ff       	sbrs	r31, 0
     23c:	b9 00       	.word	0x00b9	; ????
     23e:	f0 ff       	sbrs	r31, 0
     240:	93 00       	.word	0x0093	; ????
     242:	f0 ff       	sbrs	r31, 0
     244:	7b 00       	.word	0x007b	; ????
     246:	f0 ff       	sbrs	r31, 0
	...
     388:	b8 01       	movw	r22, r16
     38a:	04 00       	.word	0x0004	; ????
     38c:	b8 01       	movw	r22, r16
     38e:	04 00       	.word	0x0004	; ????
     390:	b8 01       	movw	r22, r16
     392:	04 00       	.word	0x0004	; ????
     394:	5d 01       	movw	r10, r26
     396:	f8 ff       	.word	0xfff8	; ????
     398:	0b 02       	muls	r16, r27
     39a:	10 00       	.word	0x0010	; ????
     39c:	b8 01       	movw	r22, r16
     39e:	04 00       	.word	0x0004	; ????
     3a0:	5d 01       	movw	r10, r26
     3a2:	f8 ff       	.word	0xfff8	; ????
     3a4:	0b 02       	muls	r16, r27
     3a6:	10 00       	.word	0x0010	; ????
     3a8:	b8 01       	movw	r22, r16
     3aa:	02 00       	.word	0x0002	; ????
     3ac:	93 02       	muls	r25, r19
     3ae:	04 00       	.word	0x0004	; ????
     3b0:	93 02       	muls	r25, r19
     3b2:	04 00       	.word	0x0004	; ????
     3b4:	93 02       	muls	r25, r19
     3b6:	04 00       	.word	0x0004	; ????
     3b8:	ba 02       	muls	r27, r26
     3ba:	f8 ff       	.word	0xfff8	; ????
     3bc:	0b 02       	muls	r16, r27
     3be:	10 00       	.word	0x0010	; ????
     3c0:	b8 01       	movw	r22, r16
     3c2:	04 00       	.word	0x0004	; ????
     3c4:	5d 01       	movw	r10, r26
     3c6:	f8 ff       	.word	0xfff8	; ????
     3c8:	0b 02       	muls	r16, r27
     3ca:	10 00       	.word	0x0010	; ????
     3cc:	b8 01       	movw	r22, r16
     3ce:	02 00       	.word	0x0002	; ????
     3d0:	70 03       	mulsu	r23, r16
     3d2:	04 00       	.word	0x0004	; ????
     3d4:	b8 01       	movw	r22, r16
     3d6:	f8 ff       	.word	0xfff8	; ????
     3d8:	b8 01       	movw	r22, r16
     3da:	10 00       	.word	0x0010	; ????
     3dc:	70 03       	mulsu	r23, r16
     3de:	04 00       	.word	0x0004	; ????
     3e0:	3f 03       	fmul	r19, r23
     3e2:	f8 ff       	.word	0xfff8	; ????
     3e4:	10 03       	mulsu	r17, r16
     3e6:	10 00       	.word	0x0010	; ????
     3e8:	6e 02       	muls	r22, r30
     3ea:	10 00       	.word	0x0010	; ????
     3ec:	4b 02       	muls	r20, r27
     3ee:	10 00       	.word	0x0010	; ????
     3f0:	6e 02       	muls	r22, r30
     3f2:	08 00       	.word	0x0008	; ????
     3f4:	00 00       	nop
     3f6:	08 00       	.word	0x0008	; ????
     3f8:	b8 01       	movw	r22, r16
     3fa:	08 00       	.word	0x0008	; ????
     3fc:	6e 02       	muls	r22, r30
     3fe:	04 00       	.word	0x0004	; ????
     400:	4b 02       	muls	r20, r27
     402:	f8 ff       	.word	0xfff8	; ????
     404:	2a 02       	muls	r18, r26
     406:	10 00       	.word	0x0010	; ????
     408:	0b 02       	muls	r16, r27
     40a:	10 00       	.word	0x0010	; ????
     40c:	ee 01       	movw	r28, r28
     40e:	10 00       	.word	0x0010	; ????
     410:	0b 02       	muls	r16, r27
     412:	10 00       	.word	0x0010	; ????
     414:	00 00       	nop
     416:	08 00       	.word	0x0008	; ????
     418:	5d 01       	movw	r10, r26
     41a:	08 00       	.word	0x0008	; ????
     41c:	9f 01       	movw	r18, r30
     41e:	04 00       	.word	0x0004	; ????
     420:	5d 01       	movw	r10, r26
     422:	f8 ff       	.word	0xfff8	; ????
     424:	b8 01       	movw	r22, r16
     426:	f0 ff       	sbrs	r31, 0
     428:	0b 02       	muls	r16, r27
     42a:	04 00       	.word	0x0004	; ????
     42c:	b8 01       	movw	r22, r16
     42e:	f8 ff       	.word	0xfff8	; ????
     430:	0b 02       	muls	r16, r27
     432:	10 00       	.word	0x0010	; ????
     434:	93 02       	muls	r25, r19
     436:	02 00       	.word	0x0002	; ????
     438:	70 03       	mulsu	r23, r16
     43a:	04 00       	.word	0x0004	; ????
     43c:	b8 01       	movw	r22, r16
     43e:	f8 ff       	.word	0xfff8	; ????
     440:	b8 01       	movw	r22, r16
     442:	10 00       	.word	0x0010	; ????
     444:	70 03       	mulsu	r23, r16
     446:	04 00       	.word	0x0004	; ????
     448:	3f 03       	fmul	r19, r23
     44a:	f8 ff       	.word	0xfff8	; ????
     44c:	10 03       	mulsu	r17, r16
     44e:	10 00       	.word	0x0010	; ????
     450:	6e 02       	muls	r22, r30
     452:	10 00       	.word	0x0010	; ????
     454:	4b 02       	muls	r20, r27
     456:	10 00       	.word	0x0010	; ????
     458:	6e 02       	muls	r22, r30
     45a:	08 00       	.word	0x0008	; ????
     45c:	00 00       	nop
     45e:	08 00       	.word	0x0008	; ????
     460:	b8 01       	movw	r22, r16
     462:	08 00       	.word	0x0008	; ????
     464:	6e 02       	muls	r22, r30
     466:	04 00       	.word	0x0004	; ????
     468:	4b 02       	muls	r20, r27
     46a:	f8 ff       	.word	0xfff8	; ????
     46c:	2a 02       	muls	r18, r26
     46e:	10 00       	.word	0x0010	; ????
     470:	0b 02       	muls	r16, r27
     472:	10 00       	.word	0x0010	; ????
     474:	ee 01       	movw	r28, r28
     476:	10 00       	.word	0x0010	; ????
     478:	0b 02       	muls	r16, r27
     47a:	10 00       	.word	0x0010	; ????
     47c:	00 00       	nop
     47e:	08 00       	.word	0x0008	; ????
     480:	5d 01       	movw	r10, r26
     482:	08 00       	.word	0x0008	; ????
     484:	9f 01       	movw	r18, r30
     486:	04 00       	.word	0x0004	; ????
     488:	5d 01       	movw	r10, r26
     48a:	f8 ff       	.word	0xfff8	; ????
     48c:	b8 01       	movw	r22, r16
     48e:	f0 ff       	sbrs	r31, 0
     490:	b8 01       	movw	r22, r16
     492:	04 00       	.word	0x0004	; ????
     494:	5d 01       	movw	r10, r26
     496:	f8 ff       	.word	0xfff8	; ????
     498:	0b 02       	muls	r16, r27
     49a:	10 00       	.word	0x0010	; ????
     49c:	b8 01       	movw	r22, r16
     49e:	02 00       	.word	0x0002	; ????
	...
     6a8:	88 01       	movw	r16, r16
     6aa:	08 00       	.word	0x0008	; ????
     6ac:	06 01       	movw	r0, r12
     6ae:	08 00       	.word	0x0008	; ????
     6b0:	37 01       	movw	r6, r14
     6b2:	10 00       	.word	0x0010	; ????
     6b4:	5d 01       	movw	r10, r26
     6b6:	10 00       	.word	0x0010	; ????
     6b8:	88 01       	movw	r16, r16
     6ba:	08 00       	.word	0x0008	; ????
     6bc:	06 01       	movw	r0, r12
     6be:	08 00       	.word	0x0008	; ????
     6c0:	37 01       	movw	r6, r14
     6c2:	10 00       	.word	0x0010	; ????
     6c4:	5d 01       	movw	r10, r26
     6c6:	10 00       	.word	0x0010	; ????
     6c8:	88 01       	movw	r16, r16
     6ca:	08 00       	.word	0x0008	; ????
     6cc:	06 01       	movw	r0, r12
     6ce:	08 00       	.word	0x0008	; ????
     6d0:	37 01       	movw	r6, r14
     6d2:	10 00       	.word	0x0010	; ????
     6d4:	5d 01       	movw	r10, r26
     6d6:	10 00       	.word	0x0010	; ????
     6d8:	88 01       	movw	r16, r16
     6da:	08 00       	.word	0x0008	; ????
     6dc:	06 01       	movw	r0, r12
     6de:	08 00       	.word	0x0008	; ????
     6e0:	37 01       	movw	r6, r14
     6e2:	10 00       	.word	0x0010	; ????
     6e4:	5d 01       	movw	r10, r26
     6e6:	10 00       	.word	0x0010	; ????
     6e8:	88 01       	movw	r16, r16
     6ea:	08 00       	.word	0x0008	; ????
     6ec:	06 01       	movw	r0, r12
     6ee:	08 00       	.word	0x0008	; ????
     6f0:	4a 01       	movw	r8, r20
     6f2:	10 00       	.word	0x0010	; ????
     6f4:	5d 01       	movw	r10, r26
     6f6:	10 00       	.word	0x0010	; ????
     6f8:	88 01       	movw	r16, r16
     6fa:	08 00       	.word	0x0008	; ????
     6fc:	06 01       	movw	r0, r12
     6fe:	08 00       	.word	0x0008	; ????
     700:	4a 01       	movw	r8, r20
     702:	10 00       	.word	0x0010	; ????
     704:	5d 01       	movw	r10, r26
     706:	10 00       	.word	0x0010	; ????
     708:	88 01       	movw	r16, r16
     70a:	08 00       	.word	0x0008	; ????
     70c:	06 01       	movw	r0, r12
     70e:	08 00       	.word	0x0008	; ????
     710:	4a 01       	movw	r8, r20
     712:	10 00       	.word	0x0010	; ????
     714:	5d 01       	movw	r10, r26
     716:	10 00       	.word	0x0010	; ????
     718:	88 01       	movw	r16, r16
     71a:	08 00       	.word	0x0008	; ????
     71c:	06 01       	movw	r0, r12
     71e:	08 00       	.word	0x0008	; ????
     720:	4a 01       	movw	r8, r20
     722:	10 00       	.word	0x0010	; ????
     724:	5d 01       	movw	r10, r26
     726:	10 00       	.word	0x0010	; ????
     728:	88 01       	movw	r16, r16
     72a:	fc ff       	.word	0xfffc	; ????
     72c:	06 01       	movw	r0, r12
     72e:	fc ff       	.word	0xfffc	; ????
     730:	37 01       	movw	r6, r14
     732:	10 00       	.word	0x0010	; ????
     734:	5d 01       	movw	r10, r26
     736:	10 00       	.word	0x0010	; ????
     738:	88 01       	movw	r16, r16
     73a:	04 00       	.word	0x0004	; ????
     73c:	06 01       	movw	r0, r12
     73e:	04 00       	.word	0x0004	; ????
     740:	37 01       	movw	r6, r14
     742:	10 00       	.word	0x0010	; ????
     744:	5d 01       	movw	r10, r26
     746:	10 00       	.word	0x0010	; ????
     748:	26 01       	movw	r4, r12
     74a:	ff ff       	.word	0xffff	; ????
     74c:	5d 01       	movw	r10, r26
     74e:	fc ff       	.word	0xfffc	; ????
     750:	e9 00       	.word	0x00e9	; ????
     752:	fc ff       	.word	0xfffc	; ????
     754:	37 01       	movw	r6, r14
     756:	10 00       	.word	0x0010	; ????
     758:	26 01       	movw	r4, r12
     75a:	10 00       	.word	0x0010	; ????
     75c:	5d 01       	movw	r10, r26
     75e:	04 00       	.word	0x0004	; ????
     760:	e9 00       	.word	0x00e9	; ????
     762:	fc ff       	.word	0xfffc	; ????
     764:	37 01       	movw	r6, r14
     766:	10 00       	.word	0x0010	; ????
     768:	26 01       	movw	r4, r12
     76a:	10 00       	.word	0x0010	; ????
     76c:	06 01       	movw	r0, r12
     76e:	ff ff       	.word	0xffff	; ????
     770:	88 01       	movw	r16, r16
     772:	fc ff       	.word	0xfffc	; ????
     774:	06 01       	movw	r0, r12
     776:	fc ff       	.word	0xfffc	; ????
     778:	37 01       	movw	r6, r14
     77a:	10 00       	.word	0x0010	; ????
     77c:	5d 01       	movw	r10, r26
     77e:	10 00       	.word	0x0010	; ????
     780:	88 01       	movw	r16, r16
     782:	04 00       	.word	0x0004	; ????
     784:	06 01       	movw	r0, r12
     786:	04 00       	.word	0x0004	; ????
     788:	37 01       	movw	r6, r14
     78a:	10 00       	.word	0x0010	; ????
     78c:	5d 01       	movw	r10, r26
     78e:	10 00       	.word	0x0010	; ????
     790:	26 01       	movw	r4, r12
     792:	ff ff       	.word	0xffff	; ????
     794:	5d 01       	movw	r10, r26
     796:	fc ff       	.word	0xfffc	; ????
     798:	e9 00       	.word	0x00e9	; ????
     79a:	fc ff       	.word	0xfffc	; ????
     79c:	37 01       	movw	r6, r14
     79e:	10 00       	.word	0x0010	; ????
     7a0:	26 01       	movw	r4, r12
     7a2:	10 00       	.word	0x0010	; ????
     7a4:	5d 01       	movw	r10, r26
     7a6:	04 00       	.word	0x0004	; ????
     7a8:	e9 00       	.word	0x00e9	; ????
     7aa:	fc ff       	.word	0xfffc	; ????
     7ac:	37 01       	movw	r6, r14
     7ae:	10 00       	.word	0x0010	; ????
     7b0:	26 01       	movw	r4, r12
     7b2:	10 00       	.word	0x0010	; ????
     7b4:	06 01       	movw	r0, r12
     7b6:	ff ff       	.word	0xffff	; ????
     7b8:	88 01       	movw	r16, r16
     7ba:	fc ff       	.word	0xfffc	; ????
     7bc:	06 01       	movw	r0, r12
     7be:	fc ff       	.word	0xfffc	; ????
     7c0:	37 01       	movw	r6, r14
     7c2:	10 00       	.word	0x0010	; ????
     7c4:	5d 01       	movw	r10, r26
     7c6:	10 00       	.word	0x0010	; ????
     7c8:	88 01       	movw	r16, r16
     7ca:	04 00       	.word	0x0004	; ????
     7cc:	06 01       	movw	r0, r12
     7ce:	04 00       	.word	0x0004	; ????
     7d0:	37 01       	movw	r6, r14
     7d2:	10 00       	.word	0x0010	; ????
     7d4:	5d 01       	movw	r10, r26
     7d6:	10 00       	.word	0x0010	; ????
     7d8:	26 01       	movw	r4, r12
     7da:	fe ff       	.word	0xfffe	; ????
     7dc:	5d 01       	movw	r10, r26
     7de:	fc ff       	.word	0xfffc	; ????
     7e0:	e9 00       	.word	0x00e9	; ????
     7e2:	fc ff       	.word	0xfffc	; ????
     7e4:	26 01       	movw	r4, r12
     7e6:	f8 ff       	.word	0xfff8	; ????
     7e8:	37 01       	movw	r6, r14
     7ea:	f8 ff       	.word	0xfff8	; ????
     7ec:	26 01       	movw	r4, r12
     7ee:	f8 ff       	.word	0xfff8	; ????
     7f0:	e9 00       	.word	0x00e9	; ????
     7f2:	f8 ff       	.word	0xfff8	; ????
     7f4:	06 01       	movw	r0, r12
     7f6:	ff ff       	.word	0xffff	; ????
     7f8:	0b 02       	muls	r16, r27
     7fa:	fe ff       	.word	0xfffe	; ????
     7fc:	d2 01       	movw	r26, r4
     7fe:	fe ff       	.word	0xfffe	; ????
     800:	06 01       	movw	r0, r12
     802:	fe ff       	.word	0xfffe	; ????
     804:	88 01       	movw	r16, r16
     806:	fe ff       	.word	0xfffe	; ????
     808:	37 01       	movw	r6, r14
     80a:	fe ff       	.word	0xfffe	; ????
     80c:	37 01       	movw	r6, r14
     80e:	fc ff       	.word	0xfffc	; ????
     810:	5d 01       	movw	r10, r26
     812:	fc ff       	.word	0xfffc	; ????
     814:	88 01       	movw	r16, r16
     816:	ff ff       	.word	0xffff	; ????
     818:	0b 02       	muls	r16, r27
     81a:	fe ff       	.word	0xfffe	; ????
     81c:	d2 01       	movw	r26, r4
     81e:	fe ff       	.word	0xfffe	; ????
     820:	06 01       	movw	r0, r12
     822:	fe ff       	.word	0xfffe	; ????
     824:	88 01       	movw	r16, r16
     826:	fe ff       	.word	0xfffe	; ????
     828:	37 01       	movw	r6, r14
     82a:	fe ff       	.word	0xfffe	; ????
     82c:	37 01       	movw	r6, r14
     82e:	fc ff       	.word	0xfffc	; ????
     830:	26 01       	movw	r4, r12
     832:	fc ff       	.word	0xfffc	; ????
     834:	0b 02       	muls	r16, r27
     836:	08 00       	.word	0x0008	; ????
     838:	88 01       	movw	r16, r16
     83a:	08 00       	.word	0x0008	; ????
     83c:	9f 01       	movw	r18, r30
     83e:	10 00       	.word	0x0010	; ????
     840:	d2 01       	movw	r26, r4
     842:	10 00       	.word	0x0010	; ????
     844:	0b 02       	muls	r16, r27
     846:	08 00       	.word	0x0008	; ????
     848:	88 01       	movw	r16, r16
     84a:	08 00       	.word	0x0008	; ????
     84c:	9f 01       	movw	r18, r30
     84e:	10 00       	.word	0x0010	; ????
     850:	d2 01       	movw	r26, r4
     852:	10 00       	.word	0x0010	; ????
     854:	0b 02       	muls	r16, r27
     856:	08 00       	.word	0x0008	; ????
     858:	88 01       	movw	r16, r16
     85a:	08 00       	.word	0x0008	; ????
     85c:	9f 01       	movw	r18, r30
     85e:	10 00       	.word	0x0010	; ????
     860:	d2 01       	movw	r26, r4
     862:	10 00       	.word	0x0010	; ????
     864:	0b 02       	muls	r16, r27
     866:	08 00       	.word	0x0008	; ????
     868:	88 01       	movw	r16, r16
     86a:	08 00       	.word	0x0008	; ????
     86c:	9f 01       	movw	r18, r30
     86e:	10 00       	.word	0x0010	; ????
     870:	d2 01       	movw	r26, r4
     872:	10 00       	.word	0x0010	; ????
     874:	00 00       	nop
     876:	04 00       	.word	0x0004	; ????
     878:	3f 03       	fmul	r19, r23
     87a:	10 00       	.word	0x0010	; ????
     87c:	a4 03       	fmuls	r18, r20
     87e:	10 00       	.word	0x0010	; ????
     880:	17 04       	cpc	r1, r7
     882:	08 00       	.word	0x0008	; ????
     884:	10 03       	mulsu	r17, r16
     886:	08 00       	.word	0x0008	; ????
     888:	3f 03       	fmul	r19, r23
     88a:	10 00       	.word	0x0010	; ????
     88c:	a4 03       	fmuls	r18, r20
     88e:	10 00       	.word	0x0010	; ????
     890:	17 04       	cpc	r1, r7
     892:	08 00       	.word	0x0008	; ????
     894:	10 03       	mulsu	r17, r16
     896:	10 00       	.word	0x0010	; ????
     898:	3f 03       	fmul	r19, r23
     89a:	10 00       	.word	0x0010	; ????
     89c:	a4 03       	fmuls	r18, r20
     89e:	10 00       	.word	0x0010	; ????
     8a0:	17 04       	cpc	r1, r7
     8a2:	08 00       	.word	0x0008	; ????
     8a4:	10 03       	mulsu	r17, r16
     8a6:	08 00       	.word	0x0008	; ????
     8a8:	3f 03       	fmul	r19, r23
     8aa:	10 00       	.word	0x0010	; ????
     8ac:	a4 03       	fmuls	r18, r20
     8ae:	10 00       	.word	0x0010	; ????
	...
     9c8:	4a 01       	movw	r8, r20
     9ca:	fc ff       	.word	0xfffc	; ????
     9cc:	00 00       	nop
     9ce:	08 00       	.word	0x0008	; ????
     9d0:	72 01       	movw	r14, r4
     9d2:	08 00       	.word	0x0008	; ????
     9d4:	88 01       	movw	r16, r16
     9d6:	fc ff       	.word	0xfffc	; ????
     9d8:	00 00       	nop
     9da:	08 00       	.word	0x0008	; ????
     9dc:	37 01       	movw	r6, r14
     9de:	08 00       	.word	0x0008	; ????
     9e0:	4a 01       	movw	r8, r20
     9e2:	f8 ff       	.word	0xfff8	; ????
     9e4:	72 01       	movw	r14, r4
     9e6:	08 00       	.word	0x0008	; ????
     9e8:	88 01       	movw	r16, r16
     9ea:	f8 ff       	.word	0xfff8	; ????
     9ec:	0b 02       	muls	r16, r27
     9ee:	08 00       	.word	0x0008	; ????
     9f0:	ee 01       	movw	r28, r28
     9f2:	f8 ff       	.word	0xfff8	; ????
     9f4:	4a 01       	movw	r8, r20
     9f6:	08 00       	.word	0x0008	; ????
     9f8:	88 01       	movw	r16, r16
     9fa:	f8 ff       	.word	0xfff8	; ????
     9fc:	ee 01       	movw	r28, r28
     9fe:	08 00       	.word	0x0008	; ????
     a00:	d2 01       	movw	r26, r4
     a02:	02 00       	.word	0x0002	; ????
     a04:	b8 01       	movw	r22, r16
     a06:	f0 ff       	sbrs	r31, 0
     a08:	88 01       	movw	r16, r16
     a0a:	f0 ff       	sbrs	r31, 0
     a0c:	4a 01       	movw	r8, r20
     a0e:	f0 ff       	sbrs	r31, 0
     a10:	26 01       	movw	r4, r12
     a12:	f0 ff       	sbrs	r31, 0
     a14:	4a 01       	movw	r8, r20
     a16:	02 00       	.word	0x0002	; ????
     a18:	00 00       	nop
     a1a:	04 00       	.word	0x0004	; ????
     a1c:	00 00       	nop
     a1e:	08 00       	.word	0x0008	; ????
     a20:	37 01       	movw	r6, r14
     a22:	04 00       	.word	0x0004	; ????
     a24:	4a 01       	movw	r8, r20
     a26:	fc ff       	.word	0xfffc	; ????
     a28:	00 00       	nop
     a2a:	08 00       	.word	0x0008	; ????
     a2c:	72 01       	movw	r14, r4
     a2e:	08 00       	.word	0x0008	; ????
     a30:	88 01       	movw	r16, r16
     a32:	fc ff       	.word	0xfffc	; ????
     a34:	00 00       	nop
     a36:	08 00       	.word	0x0008	; ????
     a38:	37 01       	movw	r6, r14
     a3a:	08 00       	.word	0x0008	; ????
     a3c:	4a 01       	movw	r8, r20
     a3e:	f8 ff       	.word	0xfff8	; ????
     a40:	72 01       	movw	r14, r4
     a42:	08 00       	.word	0x0008	; ????
     a44:	88 01       	movw	r16, r16
     a46:	f8 ff       	.word	0xfff8	; ????
     a48:	0b 02       	muls	r16, r27
     a4a:	08 00       	.word	0x0008	; ????
     a4c:	ee 01       	movw	r28, r28
     a4e:	f8 ff       	.word	0xfff8	; ????
     a50:	88 01       	movw	r16, r16
     a52:	08 00       	.word	0x0008	; ????
     a54:	ee 01       	movw	r28, r28
     a56:	f8 ff       	.word	0xfff8	; ????
     a58:	93 02       	muls	r25, r19
     a5a:	08 00       	.word	0x0008	; ????
     a5c:	6e 02       	muls	r22, r30
     a5e:	01 00       	.word	0x0001	; ????
     a60:	4b 02       	muls	r20, r27
     a62:	02 00       	.word	0x0002	; ????
     a64:	00 00       	nop
     a66:	04 00       	.word	0x0004	; ????
     a68:	00 00       	nop
     a6a:	08 00       	.word	0x0008	; ????
     a6c:	37 01       	movw	r6, r14
     a6e:	08 00       	.word	0x0008	; ????
     a70:	4a 01       	movw	r8, r20
     a72:	fc ff       	.word	0xfffc	; ????
     a74:	00 00       	nop
     a76:	08 00       	.word	0x0008	; ????
     a78:	72 01       	movw	r14, r4
     a7a:	08 00       	.word	0x0008	; ????
     a7c:	88 01       	movw	r16, r16
     a7e:	fc ff       	.word	0xfffc	; ????
     a80:	00 00       	nop
     a82:	08 00       	.word	0x0008	; ????
     a84:	37 01       	movw	r6, r14
     a86:	08 00       	.word	0x0008	; ????
     a88:	4a 01       	movw	r8, r20
     a8a:	f8 ff       	.word	0xfff8	; ????
     a8c:	72 01       	movw	r14, r4
     a8e:	08 00       	.word	0x0008	; ????
     a90:	88 01       	movw	r16, r16
     a92:	f8 ff       	.word	0xfff8	; ????
     a94:	0b 02       	muls	r16, r27
     a96:	08 00       	.word	0x0008	; ????
     a98:	ee 01       	movw	r28, r28
     a9a:	f8 ff       	.word	0xfff8	; ????
     a9c:	4a 01       	movw	r8, r20
     a9e:	08 00       	.word	0x0008	; ????
     aa0:	88 01       	movw	r16, r16
     aa2:	f8 ff       	.word	0xfff8	; ????
     aa4:	ee 01       	movw	r28, r28
     aa6:	08 00       	.word	0x0008	; ????
     aa8:	d2 01       	movw	r26, r4
     aaa:	02 00       	.word	0x0002	; ????
     aac:	b8 01       	movw	r22, r16
     aae:	f0 ff       	sbrs	r31, 0
     ab0:	88 01       	movw	r16, r16
     ab2:	f0 ff       	sbrs	r31, 0
     ab4:	4a 01       	movw	r8, r20
     ab6:	f0 ff       	sbrs	r31, 0
     ab8:	26 01       	movw	r4, r12
     aba:	f0 ff       	sbrs	r31, 0
     abc:	4a 01       	movw	r8, r20
     abe:	fc ff       	.word	0xfffc	; ????
     ac0:	00 00       	nop
     ac2:	04 00       	.word	0x0004	; ????
     ac4:	00 00       	nop
     ac6:	04 00       	.word	0x0004	; ????
     ac8:	93 02       	muls	r25, r19
     aca:	f8 ff       	.word	0xfff8	; ????
     acc:	4b 02       	muls	r20, r27
     ace:	08 00       	.word	0x0008	; ????
     ad0:	ee 01       	movw	r28, r28
     ad2:	f8 ff       	.word	0xfff8	; ????
     ad4:	b8 01       	movw	r22, r16
     ad6:	08 00       	.word	0x0008	; ????
     ad8:	88 01       	movw	r16, r16
     ada:	f8 ff       	.word	0xfff8	; ????
     adc:	4a 01       	movw	r8, r20
     ade:	f8 ff       	.word	0xfff8	; ????
     ae0:	d2 01       	movw	r26, r4
     ae2:	10 00       	.word	0x0010	; ????
     ae4:	b8 01       	movw	r22, r16
     ae6:	f8 ff       	.word	0xfff8	; ????
     ae8:	d2 01       	movw	r26, r4
     aea:	10 00       	.word	0x0010	; ????
     aec:	b8 01       	movw	r22, r16
     aee:	f8 ff       	.word	0xfff8	; ????
     af0:	d2 01       	movw	r26, r4
     af2:	10 00       	.word	0x0010	; ????
     af4:	b8 01       	movw	r22, r16
     af6:	f8 ff       	.word	0xfff8	; ????
     af8:	d2 01       	movw	r26, r4
     afa:	10 00       	.word	0x0010	; ????
     afc:	b8 01       	movw	r22, r16
     afe:	f8 ff       	.word	0xfff8	; ????
     b00:	88 01       	movw	r16, r16
     b02:	f0 ff       	sbrs	r31, 0
     b04:	4a 01       	movw	r8, r20
     b06:	f0 ff       	sbrs	r31, 0
     b08:	26 01       	movw	r4, r12
     b0a:	f0 ff       	sbrs	r31, 0
     b0c:	4a 01       	movw	r8, r20
     b0e:	10 00       	.word	0x0010	; ????
     b10:	4a 01       	movw	r8, r20
     b12:	10 00       	.word	0x0010	; ????
     b14:	4a 01       	movw	r8, r20
     b16:	02 00       	.word	0x0002	; ????
	...
     ce8:	00 00       	nop
     cea:	04 00       	.word	0x0004	; ????
     cec:	00 00       	nop
     cee:	08 00       	.word	0x0008	; ????
     cf0:	00 00       	nop
     cf2:	08 00       	.word	0x0008	; ????
     cf4:	00 00       	nop
     cf6:	08 00       	.word	0x0008	; ????
     cf8:	4a 01       	movw	r8, r20
     cfa:	08 00       	.word	0x0008	; ????
     cfc:	b8 01       	movw	r22, r16
     cfe:	08 00       	.word	0x0008	; ????
     d00:	0b 02       	muls	r16, r27
     d02:	08 00       	.word	0x0008	; ????
     d04:	ee 01       	movw	r28, r28
     d06:	08 00       	.word	0x0008	; ????
     d08:	b8 01       	movw	r22, r16
     d0a:	08 00       	.word	0x0008	; ????
     d0c:	0b 02       	muls	r16, r27
     d0e:	08 00       	.word	0x0008	; ????
     d10:	b8 01       	movw	r22, r16
     d12:	08 00       	.word	0x0008	; ????
     d14:	ee 01       	movw	r28, r28
     d16:	08 00       	.word	0x0008	; ????
     d18:	b8 01       	movw	r22, r16
     d1a:	08 00       	.word	0x0008	; ????
     d1c:	5d 01       	movw	r10, r26
     d1e:	08 00       	.word	0x0008	; ????
     d20:	88 01       	movw	r16, r16
     d22:	08 00       	.word	0x0008	; ????
     d24:	4a 01       	movw	r8, r20
     d26:	02 00       	.word	0x0002	; ????
     d28:	4a 01       	movw	r8, r20
     d2a:	08 00       	.word	0x0008	; ????
     d2c:	b8 01       	movw	r22, r16
     d2e:	08 00       	.word	0x0008	; ????
     d30:	0b 02       	muls	r16, r27
     d32:	08 00       	.word	0x0008	; ????
     d34:	ee 01       	movw	r28, r28
     d36:	08 00       	.word	0x0008	; ????
     d38:	b8 01       	movw	r22, r16
     d3a:	08 00       	.word	0x0008	; ????
     d3c:	0b 02       	muls	r16, r27
     d3e:	08 00       	.word	0x0008	; ????
     d40:	b8 01       	movw	r22, r16
     d42:	08 00       	.word	0x0008	; ????
     d44:	0b 02       	muls	r16, r27
     d46:	08 00       	.word	0x0008	; ????
     d48:	b8 01       	movw	r22, r16
     d4a:	08 00       	.word	0x0008	; ????
     d4c:	4a 01       	movw	r8, r20
     d4e:	08 00       	.word	0x0008	; ????
     d50:	37 01       	movw	r6, r14
     d52:	08 00       	.word	0x0008	; ????
     d54:	26 01       	movw	r4, r12
     d56:	02 00       	.word	0x0002	; ????
     d58:	26 01       	movw	r4, r12
     d5a:	08 00       	.word	0x0008	; ????
     d5c:	5d 01       	movw	r10, r26
     d5e:	08 00       	.word	0x0008	; ????
     d60:	9f 01       	movw	r18, r30
     d62:	08 00       	.word	0x0008	; ????
     d64:	ee 01       	movw	r28, r28
     d66:	02 00       	.word	0x0002	; ????
     d68:	26 01       	movw	r4, r12
     d6a:	08 00       	.word	0x0008	; ????
     d6c:	5d 01       	movw	r10, r26
     d6e:	08 00       	.word	0x0008	; ????
     d70:	9f 01       	movw	r18, r30
     d72:	08 00       	.word	0x0008	; ????
     d74:	b8 01       	movw	r22, r16
     d76:	02 00       	.word	0x0002	; ????
     d78:	06 01       	movw	r0, r12
     d7a:	08 00       	.word	0x0008	; ????
     d7c:	06 01       	movw	r0, r12
     d7e:	08 00       	.word	0x0008	; ????
     d80:	88 01       	movw	r16, r16
     d82:	08 00       	.word	0x0008	; ????
     d84:	5d 01       	movw	r10, r26
     d86:	08 00       	.word	0x0008	; ????
     d88:	4a 01       	movw	r8, r20
     d8a:	08 00       	.word	0x0008	; ????
     d8c:	88 01       	movw	r16, r16
     d8e:	08 00       	.word	0x0008	; ????
     d90:	5d 01       	movw	r10, r26
     d92:	08 00       	.word	0x0008	; ????
     d94:	5d 01       	movw	r10, r26
     d96:	08 00       	.word	0x0008	; ????
     d98:	4a 01       	movw	r8, r20
     d9a:	08 00       	.word	0x0008	; ????
     d9c:	4a 01       	movw	r8, r20
     d9e:	08 00       	.word	0x0008	; ????
     da0:	9f 01       	movw	r18, r30
     da2:	08 00       	.word	0x0008	; ????
     da4:	b8 01       	movw	r22, r16
     da6:	02 00       	.word	0x0002	; ????
     da8:	00 00       	nop
     daa:	08 00       	.word	0x0008	; ????
     dac:	b8 01       	movw	r22, r16
     dae:	08 00       	.word	0x0008	; ????
     db0:	b8 01       	movw	r22, r16
     db2:	08 00       	.word	0x0008	; ????
     db4:	9f 01       	movw	r18, r30
     db6:	08 00       	.word	0x0008	; ????
     db8:	88 01       	movw	r16, r16
     dba:	02 00       	.word	0x0002	; ????
     dbc:	ee 01       	movw	r28, r28
     dbe:	08 00       	.word	0x0008	; ????
     dc0:	b8 01       	movw	r22, r16
     dc2:	08 00       	.word	0x0008	; ????
     dc4:	5d 01       	movw	r10, r26
     dc6:	08 00       	.word	0x0008	; ????
     dc8:	4a 01       	movw	r8, r20
     dca:	02 00       	.word	0x0002	; ????
     dcc:	4a 01       	movw	r8, r20
     dce:	08 00       	.word	0x0008	; ????
     dd0:	88 01       	movw	r16, r16
     dd2:	08 00       	.word	0x0008	; ????
     dd4:	4a 01       	movw	r8, r20
     dd6:	08 00       	.word	0x0008	; ????
     dd8:	26 01       	movw	r4, r12
     dda:	02 00       	.word	0x0002	; ????
     ddc:	26 01       	movw	r4, r12
     dde:	08 00       	.word	0x0008	; ????
     de0:	26 01       	movw	r4, r12
     de2:	08 00       	.word	0x0008	; ????
     de4:	5d 01       	movw	r10, r26
     de6:	08 00       	.word	0x0008	; ????
     de8:	37 01       	movw	r6, r14
     dea:	08 00       	.word	0x0008	; ????
     dec:	4a 01       	movw	r8, r20
     dee:	02 00       	.word	0x0002	; ????
     df0:	00 00       	nop
     df2:	08 00       	.word	0x0008	; ????
     df4:	4a 01       	movw	r8, r20
     df6:	08 00       	.word	0x0008	; ????
     df8:	b8 01       	movw	r22, r16
     dfa:	08 00       	.word	0x0008	; ????
     dfc:	0b 02       	muls	r16, r27
     dfe:	08 00       	.word	0x0008	; ????
     e00:	ee 01       	movw	r28, r28
     e02:	08 00       	.word	0x0008	; ????
     e04:	b8 01       	movw	r22, r16
     e06:	08 00       	.word	0x0008	; ????
     e08:	0b 02       	muls	r16, r27
     e0a:	08 00       	.word	0x0008	; ????
     e0c:	b8 01       	movw	r22, r16
     e0e:	08 00       	.word	0x0008	; ????
     e10:	ee 01       	movw	r28, r28
     e12:	08 00       	.word	0x0008	; ????
     e14:	b8 01       	movw	r22, r16
     e16:	08 00       	.word	0x0008	; ????
     e18:	5d 01       	movw	r10, r26
     e1a:	08 00       	.word	0x0008	; ????
     e1c:	88 01       	movw	r16, r16
     e1e:	08 00       	.word	0x0008	; ????
     e20:	4a 01       	movw	r8, r20
     e22:	02 00       	.word	0x0002	; ????
     e24:	4a 01       	movw	r8, r20
     e26:	08 00       	.word	0x0008	; ????
     e28:	b8 01       	movw	r22, r16
     e2a:	08 00       	.word	0x0008	; ????
     e2c:	0b 02       	muls	r16, r27
     e2e:	08 00       	.word	0x0008	; ????
     e30:	ee 01       	movw	r28, r28
     e32:	08 00       	.word	0x0008	; ????
     e34:	b8 01       	movw	r22, r16
     e36:	08 00       	.word	0x0008	; ????
     e38:	0b 02       	muls	r16, r27
     e3a:	08 00       	.word	0x0008	; ????
     e3c:	b8 01       	movw	r22, r16
     e3e:	08 00       	.word	0x0008	; ????
     e40:	0b 02       	muls	r16, r27
     e42:	08 00       	.word	0x0008	; ????
     e44:	b8 01       	movw	r22, r16
     e46:	08 00       	.word	0x0008	; ????
     e48:	4a 01       	movw	r8, r20
     e4a:	08 00       	.word	0x0008	; ????
     e4c:	37 01       	movw	r6, r14
     e4e:	08 00       	.word	0x0008	; ????
     e50:	26 01       	movw	r4, r12
     e52:	02 00       	.word	0x0002	; ????
     e54:	26 01       	movw	r4, r12
     e56:	08 00       	.word	0x0008	; ????
     e58:	5d 01       	movw	r10, r26
     e5a:	08 00       	.word	0x0008	; ????
     e5c:	9f 01       	movw	r18, r30
     e5e:	08 00       	.word	0x0008	; ????
     e60:	ee 01       	movw	r28, r28
     e62:	02 00       	.word	0x0002	; ????
     e64:	26 01       	movw	r4, r12
     e66:	08 00       	.word	0x0008	; ????
     e68:	5d 01       	movw	r10, r26
     e6a:	08 00       	.word	0x0008	; ????
     e6c:	9f 01       	movw	r18, r30
     e6e:	08 00       	.word	0x0008	; ????
     e70:	b8 01       	movw	r22, r16
     e72:	02 00       	.word	0x0002	; ????
     e74:	06 01       	movw	r0, r12
     e76:	08 00       	.word	0x0008	; ????
     e78:	06 01       	movw	r0, r12
     e7a:	08 00       	.word	0x0008	; ????
     e7c:	88 01       	movw	r16, r16
     e7e:	08 00       	.word	0x0008	; ????
     e80:	5d 01       	movw	r10, r26
     e82:	08 00       	.word	0x0008	; ????
     e84:	4a 01       	movw	r8, r20
     e86:	08 00       	.word	0x0008	; ????
     e88:	88 01       	movw	r16, r16
     e8a:	08 00       	.word	0x0008	; ????
     e8c:	5d 01       	movw	r10, r26
     e8e:	08 00       	.word	0x0008	; ????
     e90:	5d 01       	movw	r10, r26
     e92:	08 00       	.word	0x0008	; ????
     e94:	4a 01       	movw	r8, r20
     e96:	08 00       	.word	0x0008	; ????
     e98:	4a 01       	movw	r8, r20
     e9a:	08 00       	.word	0x0008	; ????
     e9c:	9f 01       	movw	r18, r30
     e9e:	08 00       	.word	0x0008	; ????
     ea0:	b8 01       	movw	r22, r16
     ea2:	02 00       	.word	0x0002	; ????
     ea4:	00 00       	nop
     ea6:	08 00       	.word	0x0008	; ????
     ea8:	b8 01       	movw	r22, r16
     eaa:	08 00       	.word	0x0008	; ????
     eac:	b8 01       	movw	r22, r16
     eae:	08 00       	.word	0x0008	; ????
     eb0:	9f 01       	movw	r18, r30
     eb2:	08 00       	.word	0x0008	; ????
     eb4:	88 01       	movw	r16, r16
     eb6:	02 00       	.word	0x0002	; ????
     eb8:	ee 01       	movw	r28, r28
     eba:	08 00       	.word	0x0008	; ????
     ebc:	b8 01       	movw	r22, r16
     ebe:	08 00       	.word	0x0008	; ????
     ec0:	5d 01       	movw	r10, r26
     ec2:	08 00       	.word	0x0008	; ????
     ec4:	4a 01       	movw	r8, r20
     ec6:	02 00       	.word	0x0002	; ????
     ec8:	4a 01       	movw	r8, r20
     eca:	08 00       	.word	0x0008	; ????
     ecc:	88 01       	movw	r16, r16
     ece:	08 00       	.word	0x0008	; ????
     ed0:	4a 01       	movw	r8, r20
     ed2:	08 00       	.word	0x0008	; ????
     ed4:	26 01       	movw	r4, r12
     ed6:	02 00       	.word	0x0002	; ????
     ed8:	26 01       	movw	r4, r12
     eda:	08 00       	.word	0x0008	; ????
     edc:	26 01       	movw	r4, r12
     ede:	08 00       	.word	0x0008	; ????
     ee0:	5d 01       	movw	r10, r26
     ee2:	08 00       	.word	0x0008	; ????
     ee4:	37 01       	movw	r6, r14
     ee6:	08 00       	.word	0x0008	; ????
     ee8:	4a 01       	movw	r8, r20
     eea:	02 00       	.word	0x0002	; ????
	...

00001008 <__ctors_end>:
    1008:	11 24       	eor	r1, r1
    100a:	1f be       	out	0x3f, r1	; 63
    100c:	cf ef       	ldi	r28, 0xFF	; 255
    100e:	d8 e0       	ldi	r29, 0x08	; 8
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	cd bf       	out	0x3d, r28	; 61

00001014 <__do_copy_data>:
    1014:	11 e0       	ldi	r17, 0x01	; 1
    1016:	a0 e0       	ldi	r26, 0x00	; 0
    1018:	b1 e0       	ldi	r27, 0x01	; 1
    101a:	e6 ea       	ldi	r30, 0xA6	; 166
    101c:	f9 e1       	ldi	r31, 0x19	; 25
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <__do_copy_data+0x10>
    1020:	05 90       	lpm	r0, Z+
    1022:	0d 92       	st	X+, r0
    1024:	a4 30       	cpi	r26, 0x04	; 4
    1026:	b1 07       	cpc	r27, r17
    1028:	d9 f7       	brne	.-10     	; 0x1020 <__do_copy_data+0xc>

0000102a <__do_clear_bss>:
    102a:	21 e0       	ldi	r18, 0x01	; 1
    102c:	a4 e0       	ldi	r26, 0x04	; 4
    102e:	b1 e0       	ldi	r27, 0x01	; 1
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <.do_clear_bss_start>

00001032 <.do_clear_bss_loop>:
    1032:	1d 92       	st	X+, r1

00001034 <.do_clear_bss_start>:
    1034:	a8 30       	cpi	r26, 0x08	; 8
    1036:	b2 07       	cpc	r27, r18
    1038:	e1 f7       	brne	.-8      	; 0x1032 <.do_clear_bss_loop>
    103a:	0e 94 8b 0a 	call	0x1516	; 0x1516 <main>
    103e:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <_exit>

00001042 <__bad_interrupt>:
    1042:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001046 <__vector_11>:
	OCR1A =step;                              // step is the comparison step number
	TIMSK1 = (1 << OCIE1A);					  // set for CTC Mode
	
	sei();									// Call interrupt
	
	TCCR1B |= (1 << CS12) | (1 << CS10);     // Prescaler 1024
    1046:	1f 92       	push	r1
    1048:	0f 92       	push	r0
    104a:	0f b6       	in	r0, 0x3f	; 63
    104c:	0f 92       	push	r0
    104e:	11 24       	eor	r1, r1
    1050:	8f 93       	push	r24
    1052:	9f 93       	push	r25
    1054:	95 b1       	in	r25, 0x05	; 5
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	89 27       	eor	r24, r25
    105a:	85 b9       	out	0x05, r24	; 5
    105c:	9f 91       	pop	r25
    105e:	8f 91       	pop	r24
    1060:	0f 90       	pop	r0
    1062:	0f be       	out	0x3f, r0	; 63
    1064:	0f 90       	pop	r0
    1066:	1f 90       	pop	r1
    1068:	18 95       	reti

0000106a <__vector_1>:
    106a:	1f 92       	push	r1
    106c:	0f 92       	push	r0
    106e:	0f b6       	in	r0, 0x3f	; 63
    1070:	0f 92       	push	r0
    1072:	11 24       	eor	r1, r1
    1074:	8f 93       	push	r24
    1076:	9f 93       	push	r25
    1078:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
    107c:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
    1080:	88 ea       	ldi	r24, 0xA8	; 168
    1082:	91 e6       	ldi	r25, 0x61	; 97
    1084:	01 97       	sbiw	r24, 0x01	; 1
    1086:	f1 f7       	brne	.-4      	; 0x1084 <__vector_1+0x1a>
    1088:	9f 91       	pop	r25
    108a:	8f 91       	pop	r24
    108c:	0f 90       	pop	r0
    108e:	0f be       	out	0x3f, r0	; 63
    1090:	0f 90       	pop	r0
    1092:	1f 90       	pop	r1
    1094:	18 95       	reti

00001096 <_Z10changesongv>:
    1096:	88 e8       	ldi	r24, 0x88	; 136
    1098:	93 e1       	ldi	r25, 0x13	; 19
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	31 f0       	breq	.+12     	; 0x10aa <_Z10changesongv+0x14>
    109e:	e9 e1       	ldi	r30, 0x19	; 25
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	31 97       	sbiw	r30, 0x01	; 1
    10a4:	f1 f7       	brne	.-4      	; 0x10a2 <_Z10changesongv+0xc>
    10a6:	01 97       	sbiw	r24, 0x01	; 1
    10a8:	f8 cf       	rjmp	.-16     	; 0x109a <_Z10changesongv+0x4>
    10aa:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <songnumber>
    10ae:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <songnumber+0x1>
    10b2:	84 30       	cpi	r24, 0x04	; 4
    10b4:	91 05       	cpc	r25, r1
    10b6:	29 f4       	brne	.+10     	; 0x10c2 <_Z10changesongv+0x2c>
    10b8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <songnumber+0x1>
    10bc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <songnumber>
    10c0:	08 95       	ret
    10c2:	01 96       	adiw	r24, 0x01	; 1
    10c4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <songnumber+0x1>
    10c8:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <songnumber>
    10cc:	08 95       	ret

000010ce <_Z11tempochoosei>:
    10ce:	00 97       	sbiw	r24, 0x00	; 0
    10d0:	41 f0       	breq	.+16     	; 0x10e2 <_Z11tempochoosei+0x14>
    10d2:	81 30       	cpi	r24, 0x01	; 1
    10d4:	91 05       	cpc	r25, r1
    10d6:	41 f0       	breq	.+16     	; 0x10e8 <_Z11tempochoosei+0x1a>
    10d8:	02 97       	sbiw	r24, 0x02	; 2
    10da:	49 f4       	brne	.+18     	; 0x10ee <_Z11tempochoosei+0x20>
    10dc:	85 e5       	ldi	r24, 0x55	; 85
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	08 95       	ret
    10e2:	81 ee       	ldi	r24, 0xE1	; 225
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	08 95       	ret
    10e8:	88 e7       	ldi	r24, 0x78	; 120
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	08 95       	ret
    10ee:	88 e7       	ldi	r24, 0x78	; 120
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	08 95       	ret

000010f4 <_Z17Delay_note_methodff>:
The 50% square wave is generated by 50% of the period time pin High (5V)
50% of the period_time Low (0V)

**/

void Delay_note_method(float freq,float dur){
    10f4:	4f 92       	push	r4
    10f6:	5f 92       	push	r5
    10f8:	6f 92       	push	r6
    10fa:	7f 92       	push	r7
    10fc:	8f 92       	push	r8
    10fe:	9f 92       	push	r9
    1100:	af 92       	push	r10
    1102:	bf 92       	push	r11
    1104:	cf 92       	push	r12
    1106:	df 92       	push	r13
    1108:	ef 92       	push	r14
    110a:	ff 92       	push	r15
    110c:	cf 93       	push	r28
    110e:	df 93       	push	r29
    1110:	00 d0       	rcall	.+0      	; 0x1112 <_Z17Delay_note_methodff+0x1e>
    1112:	00 d0       	rcall	.+0      	; 0x1114 <_Z17Delay_note_methodff+0x20>
    1114:	cd b7       	in	r28, 0x3d	; 61
    1116:	de b7       	in	r29, 0x3e	; 62
    1118:	6b 01       	movw	r12, r22
    111a:	7c 01       	movw	r14, r24
    111c:	49 01       	movw	r8, r18
    111e:	5a 01       	movw	r10, r20
	
	// variables
		long int i,cycles;     
		float half_period,period;
		
		if (freq != 0){
    1120:	20 e0       	ldi	r18, 0x00	; 0
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	a9 01       	movw	r20, r18
    1126:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <__cmpsf2>
    112a:	88 23       	and	r24, r24
    112c:	09 f4       	brne	.+2      	; 0x1130 <_Z17Delay_note_methodff+0x3c>
    112e:	ad c0       	rjmp	.+346    	; 0x128a <_Z17Delay_note_methodff+0x196>
			period=(1/freq)*1000;
    1130:	a7 01       	movw	r20, r14
    1132:	96 01       	movw	r18, r12
    1134:	60 e0       	ldi	r22, 0x00	; 0
    1136:	70 e0       	ldi	r23, 0x00	; 0
    1138:	80 e8       	ldi	r24, 0x80	; 128
    113a:	9f e3       	ldi	r25, 0x3F	; 63
    113c:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <__divsf3>
    1140:	20 e0       	ldi	r18, 0x00	; 0
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	4a e7       	ldi	r20, 0x7A	; 122
    1146:	54 e4       	ldi	r21, 0x44	; 68
    1148:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    114c:	6b 01       	movw	r12, r22
    114e:	7c 01       	movw	r14, r24
			cycles=dur/period;
    1150:	9b 01       	movw	r18, r22
    1152:	ac 01       	movw	r20, r24
    1154:	c5 01       	movw	r24, r10
    1156:	b4 01       	movw	r22, r8
    1158:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <__divsf3>
    115c:	0e 94 4f 0b 	call	0x169e	; 0x169e <__fixsfsi>
    1160:	2b 01       	movw	r4, r22
    1162:	3c 01       	movw	r6, r24
			half_period = period/2;
    1164:	20 e0       	ldi	r18, 0x00	; 0
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	40 e0       	ldi	r20, 0x00	; 0
    116a:	5f e3       	ldi	r21, 0x3F	; 63
    116c:	c7 01       	movw	r24, r14
    116e:	b6 01       	movw	r22, r12
    1170:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    1174:	69 83       	std	Y+1, r22	; 0x01
    1176:	7a 83       	std	Y+2, r23	; 0x02
    1178:	8b 83       	std	Y+3, r24	; 0x03
    117a:	9c 83       	std	Y+4, r25	; 0x04

			for (i=0;i<cycles;i++)
    117c:	81 2c       	mov	r8, r1
    117e:	91 2c       	mov	r9, r1
    1180:	54 01       	movw	r10, r8
    1182:	84 14       	cp	r8, r4
    1184:	95 04       	cpc	r9, r5
    1186:	a6 04       	cpc	r10, r6
    1188:	b7 04       	cpc	r11, r7
    118a:	0c f0       	brlt	.+2      	; 0x118e <_Z17Delay_note_methodff+0x9a>
    118c:	b8 c0       	rjmp	.+368    	; 0x12fe <_Z17Delay_note_methodff+0x20a>

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    118e:	20 e0       	ldi	r18, 0x00	; 0
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	4a e7       	ldi	r20, 0x7A	; 122
    1194:	53 e4       	ldi	r21, 0x43	; 67
    1196:	69 81       	ldd	r22, Y+1	; 0x01
    1198:	7a 81       	ldd	r23, Y+2	; 0x02
    119a:	8b 81       	ldd	r24, Y+3	; 0x03
    119c:	9c 81       	ldd	r25, Y+4	; 0x04
    119e:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    11a2:	6b 01       	movw	r12, r22
    11a4:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	40 e8       	ldi	r20, 0x80	; 128
    11ac:	5f e3       	ldi	r21, 0x3F	; 63
    11ae:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <__cmpsf2>
    11b2:	88 23       	and	r24, r24
    11b4:	2c f1       	brlt	.+74     	; 0x1200 <_Z17Delay_note_methodff+0x10c>
		__ticks = 1;
	else if (__tmp > 65535)
    11b6:	20 e0       	ldi	r18, 0x00	; 0
    11b8:	3f ef       	ldi	r19, 0xFF	; 255
    11ba:	4f e7       	ldi	r20, 0x7F	; 127
    11bc:	57 e4       	ldi	r21, 0x47	; 71
    11be:	c7 01       	movw	r24, r14
    11c0:	b6 01       	movw	r22, r12
    11c2:	0e 94 37 0c 	call	0x186e	; 0x186e <__gesf2>
    11c6:	18 16       	cp	r1, r24
    11c8:	b4 f4       	brge	.+44     	; 0x11f6 <_Z17Delay_note_methodff+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	40 e2       	ldi	r20, 0x20	; 32
    11d0:	51 e4       	ldi	r21, 0x41	; 65
    11d2:	69 81       	ldd	r22, Y+1	; 0x01
    11d4:	7a 81       	ldd	r23, Y+2	; 0x02
    11d6:	8b 81       	ldd	r24, Y+3	; 0x03
    11d8:	9c 81       	ldd	r25, Y+4	; 0x04
    11da:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    11de:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
		while(__ticks)
    11e2:	61 15       	cp	r22, r1
    11e4:	71 05       	cpc	r23, r1
    11e6:	89 f0       	breq	.+34     	; 0x120a <_Z17Delay_note_methodff+0x116>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    11e8:	89 e1       	ldi	r24, 0x19	; 25
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	01 97       	sbiw	r24, 0x01	; 1
    11ee:	f1 f7       	brne	.-4      	; 0x11ec <_Z17Delay_note_methodff+0xf8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11f0:	61 50       	subi	r22, 0x01	; 1
    11f2:	71 09       	sbc	r23, r1
    11f4:	f6 cf       	rjmp	.-20     	; 0x11e2 <_Z17Delay_note_methodff+0xee>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11f6:	c7 01       	movw	r24, r14
    11f8:	b6 01       	movw	r22, r12
    11fa:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <_Z17Delay_note_methodff+0x110>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    1200:	61 e0       	ldi	r22, 0x01	; 1
    1202:	70 e0       	ldi	r23, 0x00	; 0
    1204:	cb 01       	movw	r24, r22
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	f1 f7       	brne	.-4      	; 0x1206 <_Z17Delay_note_methodff+0x112>
			{
				//50% duty cycle
				
				_delay_ms(half_period);
				
				buzzer_PORT |= _BV(buzzer_PIN);
    120a:	85 b1       	in	r24, 0x05	; 5
    120c:	81 60       	ori	r24, 0x01	; 1
    120e:	85 b9       	out	0x05, r24	; 5
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	40 e8       	ldi	r20, 0x80	; 128
    1216:	5f e3       	ldi	r21, 0x3F	; 63
    1218:	c7 01       	movw	r24, r14
    121a:	b6 01       	movw	r22, r12
    121c:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <__cmpsf2>
    1220:	88 23       	and	r24, r24
    1222:	2c f1       	brlt	.+74     	; 0x126e <_Z17Delay_note_methodff+0x17a>
		__ticks = 1;
	else if (__tmp > 65535)
    1224:	20 e0       	ldi	r18, 0x00	; 0
    1226:	3f ef       	ldi	r19, 0xFF	; 255
    1228:	4f e7       	ldi	r20, 0x7F	; 127
    122a:	57 e4       	ldi	r21, 0x47	; 71
    122c:	c7 01       	movw	r24, r14
    122e:	b6 01       	movw	r22, r12
    1230:	0e 94 37 0c 	call	0x186e	; 0x186e <__gesf2>
    1234:	18 16       	cp	r1, r24
    1236:	b4 f4       	brge	.+44     	; 0x1264 <_Z17Delay_note_methodff+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1238:	20 e0       	ldi	r18, 0x00	; 0
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	40 e2       	ldi	r20, 0x20	; 32
    123e:	51 e4       	ldi	r21, 0x41	; 65
    1240:	69 81       	ldd	r22, Y+1	; 0x01
    1242:	7a 81       	ldd	r23, Y+2	; 0x02
    1244:	8b 81       	ldd	r24, Y+3	; 0x03
    1246:	9c 81       	ldd	r25, Y+4	; 0x04
    1248:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    124c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
		while(__ticks)
    1250:	61 15       	cp	r22, r1
    1252:	71 05       	cpc	r23, r1
    1254:	89 f0       	breq	.+34     	; 0x1278 <_Z17Delay_note_methodff+0x184>
    1256:	89 e1       	ldi	r24, 0x19	; 25
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	01 97       	sbiw	r24, 0x01	; 1
    125c:	f1 f7       	brne	.-4      	; 0x125a <_Z17Delay_note_methodff+0x166>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    125e:	61 50       	subi	r22, 0x01	; 1
    1260:	71 09       	sbc	r23, r1
    1262:	f6 cf       	rjmp	.-20     	; 0x1250 <_Z17Delay_note_methodff+0x15c>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1264:	c7 01       	movw	r24, r14
    1266:	b6 01       	movw	r22, r12
    1268:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <_Z17Delay_note_methodff+0x17e>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    126e:	61 e0       	ldi	r22, 0x01	; 1
    1270:	70 e0       	ldi	r23, 0x00	; 0
    1272:	cb 01       	movw	r24, r22
    1274:	01 97       	sbiw	r24, 0x01	; 1
    1276:	f1 f7       	brne	.-4      	; 0x1274 <_Z17Delay_note_methodff+0x180>
				
				_delay_ms(half_period);
				
				buzzer_PORT &= ~ _BV(buzzer_PIN);
    1278:	85 b1       	in	r24, 0x05	; 5
    127a:	8e 7f       	andi	r24, 0xFE	; 254
    127c:	85 b9       	out	0x05, r24	; 5
		if (freq != 0){
			period=(1/freq)*1000;
			cycles=dur/period;
			half_period = period/2;

			for (i=0;i<cycles;i++)
    127e:	8f ef       	ldi	r24, 0xFF	; 255
    1280:	88 1a       	sub	r8, r24
    1282:	98 0a       	sbc	r9, r24
    1284:	a8 0a       	sbc	r10, r24
    1286:	b8 0a       	sbc	r11, r24
    1288:	7c cf       	rjmp	.-264    	; 0x1182 <_Z17Delay_note_methodff+0x8e>

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	4a e7       	ldi	r20, 0x7A	; 122
    1290:	53 e4       	ldi	r21, 0x43	; 67
    1292:	c5 01       	movw	r24, r10
    1294:	b4 01       	movw	r22, r8
    1296:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    129a:	6b 01       	movw	r12, r22
    129c:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
    129e:	20 e0       	ldi	r18, 0x00	; 0
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	40 e8       	ldi	r20, 0x80	; 128
    12a4:	5f e3       	ldi	r21, 0x3F	; 63
    12a6:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <__cmpsf2>
    12aa:	88 23       	and	r24, r24
    12ac:	1c f1       	brlt	.+70     	; 0x12f4 <_Z17Delay_note_methodff+0x200>
		__ticks = 1;
	else if (__tmp > 65535)
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	3f ef       	ldi	r19, 0xFF	; 255
    12b2:	4f e7       	ldi	r20, 0x7F	; 127
    12b4:	57 e4       	ldi	r21, 0x47	; 71
    12b6:	c7 01       	movw	r24, r14
    12b8:	b6 01       	movw	r22, r12
    12ba:	0e 94 37 0c 	call	0x186e	; 0x186e <__gesf2>
    12be:	18 16       	cp	r1, r24
    12c0:	a4 f4       	brge	.+40     	; 0x12ea <_Z17Delay_note_methodff+0x1f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	40 e2       	ldi	r20, 0x20	; 32
    12c8:	51 e4       	ldi	r21, 0x41	; 65
    12ca:	c5 01       	movw	r24, r10
    12cc:	b4 01       	movw	r22, r8
    12ce:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    12d2:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
		while(__ticks)
    12d6:	61 15       	cp	r22, r1
    12d8:	71 05       	cpc	r23, r1
    12da:	89 f0       	breq	.+34     	; 0x12fe <_Z17Delay_note_methodff+0x20a>
    12dc:	89 e1       	ldi	r24, 0x19	; 25
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	f1 f7       	brne	.-4      	; 0x12e0 <_Z17Delay_note_methodff+0x1ec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12e4:	61 50       	subi	r22, 0x01	; 1
    12e6:	71 09       	sbc	r23, r1
    12e8:	f6 cf       	rjmp	.-20     	; 0x12d6 <_Z17Delay_note_methodff+0x1e2>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ea:	c7 01       	movw	r24, r14
    12ec:	b6 01       	movw	r22, r12
    12ee:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
    12f2:	02 c0       	rjmp	.+4      	; 0x12f8 <_Z17Delay_note_methodff+0x204>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    12f4:	61 e0       	ldi	r22, 0x01	; 1
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	cb 01       	movw	r24, r22
    12fa:	01 97       	sbiw	r24, 0x01	; 1
    12fc:	f1 f7       	brne	.-4      	; 0x12fa <_Z17Delay_note_methodff+0x206>
		}

		return;
		
		
}
    12fe:	0f 90       	pop	r0
    1300:	0f 90       	pop	r0
    1302:	0f 90       	pop	r0
    1304:	0f 90       	pop	r0
    1306:	df 91       	pop	r29
    1308:	cf 91       	pop	r28
    130a:	ff 90       	pop	r15
    130c:	ef 90       	pop	r14
    130e:	df 90       	pop	r13
    1310:	cf 90       	pop	r12
    1312:	bf 90       	pop	r11
    1314:	af 90       	pop	r10
    1316:	9f 90       	pop	r9
    1318:	8f 90       	pop	r8
    131a:	7f 90       	pop	r7
    131c:	6f 90       	pop	r6
    131e:	5f 90       	pop	r5
    1320:	4f 90       	pop	r4
    1322:	08 95       	ret

00001324 <_Z4playi>:
This will take one input. The song number, starting from 0
It will take tempo and the chords and duration data from melodies.h accordingly
you can change the tone generating method between declared functions
Tempo is the 
**/
void play(int number){
    1324:	2f 92       	push	r2
    1326:	3f 92       	push	r3
    1328:	4f 92       	push	r4
    132a:	5f 92       	push	r5
    132c:	6f 92       	push	r6
    132e:	7f 92       	push	r7
    1330:	8f 92       	push	r8
    1332:	9f 92       	push	r9
    1334:	af 92       	push	r10
    1336:	bf 92       	push	r11
    1338:	cf 92       	push	r12
    133a:	df 92       	push	r13
    133c:	ef 92       	push	r14
    133e:	ff 92       	push	r15
    1340:	0f 93       	push	r16
    1342:	1f 93       	push	r17
    1344:	cf 93       	push	r28
    1346:	df 93       	push	r29
    1348:	00 d0       	rcall	.+0      	; 0x134a <_Z4playi+0x26>
    134a:	00 d0       	rcall	.+0      	; 0x134c <_Z4playi+0x28>
    134c:	cd b7       	in	r28, 0x3d	; 61
    134e:	de b7       	in	r29, 0x3e	; 62
    1350:	1c 01       	movw	r2, r24
	int tempo=tempochoose(number); // choose the right tempo from the list using the function
    1352:	0e 94 67 08 	call	0x10ce	; 0x10ce <_Z11tempochoosei>
	int notes = sizeof(melody0[number])/sizeof(melody0[number][0])/2;
	int wholenote = (60000 * 2.5) / tempo;
    1356:	bc 01       	movw	r22, r24
    1358:	99 0f       	add	r25, r25
    135a:	88 0b       	sbc	r24, r24
    135c:	99 0b       	sbc	r25, r25
    135e:	0e 94 87 0b 	call	0x170e	; 0x170e <__floatsisf>
    1362:	9b 01       	movw	r18, r22
    1364:	ac 01       	movw	r20, r24
    1366:	60 e0       	ldi	r22, 0x00	; 0
    1368:	7c e7       	ldi	r23, 0x7C	; 124
    136a:	82 e1       	ldi	r24, 0x12	; 18
    136c:	98 e4       	ldi	r25, 0x48	; 72
    136e:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <__divsf3>
    1372:	0e 94 4f 0b 	call	0x169e	; 0x169e <__fixsfsi>
    1376:	7a 83       	std	Y+2, r23	; 0x02
    1378:	69 83       	std	Y+1, r22	; 0x01
	int divider = 0;
	int noteDuration = 0;
	
	for (int thisNote = 0; thisNote < notes *2 ; thisNote = thisNote + 2) {
    137a:	1c 82       	std	Y+4, r1	; 0x04
    137c:	1b 82       	std	Y+3, r1	; 0x03
void play(int number){
	int tempo=tempochoose(number); // choose the right tempo from the list using the function
	int notes = sizeof(melody0[number])/sizeof(melody0[number][0])/2;
	int wholenote = (60000 * 2.5) / tempo;
	int divider = 0;
	int noteDuration = 0;
    137e:	e1 2c       	mov	r14, r1
    1380:	f1 2c       	mov	r15, r1
	
	for (int thisNote = 0; thisNote < notes *2 ; thisNote = thisNote + 2) {
    1382:	8b 81       	ldd	r24, Y+3	; 0x03
    1384:	9c 81       	ldd	r25, Y+4	; 0x04
    1386:	80 39       	cpi	r24, 0x90	; 144
    1388:	91 40       	sbci	r25, 0x01	; 1
    138a:	0c f0       	brlt	.+2      	; 0x138e <_Z4playi+0x6a>
    138c:	ad c0       	rjmp	.+346    	; 0x14e8 <_Z4playi+0x1c4>
		if (sp==1){
    138e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
    1392:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
    1396:	01 97       	sbiw	r24, 0x01	; 1
    1398:	09 f0       	breq	.+2      	; 0x139c <_Z4playi+0x78>
    139a:	a2 c0       	rjmp	.+324    	; 0x14e0 <_Z4playi+0x1bc>
		divider = pgm_read_word_near(melody0[number]+thisNote + 1);
    139c:	80 e2       	ldi	r24, 0x20	; 32
    139e:	93 e0       	ldi	r25, 0x03	; 3
    13a0:	28 9e       	mul	r2, r24
    13a2:	80 01       	movw	r16, r0
    13a4:	29 9e       	mul	r2, r25
    13a6:	10 0d       	add	r17, r0
    13a8:	38 9e       	mul	r3, r24
    13aa:	10 0d       	add	r17, r0
    13ac:	11 24       	eor	r1, r1
    13ae:	08 59       	subi	r16, 0x98	; 152
    13b0:	1f 4f       	sbci	r17, 0xFF	; 255
    13b2:	cb 80       	ldd	r12, Y+3	; 0x03
    13b4:	dc 80       	ldd	r13, Y+4	; 0x04
    13b6:	f6 01       	movw	r30, r12
    13b8:	31 96       	adiw	r30, 0x01	; 1
    13ba:	ee 0f       	add	r30, r30
    13bc:	ff 1f       	adc	r31, r31
    13be:	e0 0f       	add	r30, r16
    13c0:	f1 1f       	adc	r31, r17
    13c2:	65 91       	lpm	r22, Z+
    13c4:	74 91       	lpm	r23, Z
		
		if (divider > 0) { //positive divider ( positive duration)
    13c6:	16 16       	cp	r1, r22
    13c8:	17 06       	cpc	r1, r23
    13ca:	34 f4       	brge	.+12     	; 0x13d8 <_Z4playi+0xb4>
			// it is a regular note
		noteDuration = (wholenote) / divider;}
    13cc:	89 81       	ldd	r24, Y+1	; 0x01
    13ce:	9a 81       	ldd	r25, Y+2	; 0x02
    13d0:	0e 94 a9 0c 	call	0x1952	; 0x1952 <__divmodhi4>
    13d4:	7b 01       	movw	r14, r22
    13d6:	1c c0       	rjmp	.+56     	; 0x1410 <_Z4playi+0xec>
		
		else if (divider<0){
    13d8:	77 23       	and	r23, r23
    13da:	bc f4       	brge	.+46     	; 0x140a <_Z4playi+0xe6>
			noteDuration=(wholenote)/(divider);// negative durations need to be increased and made positive
    13dc:	89 81       	ldd	r24, Y+1	; 0x01
    13de:	9a 81       	ldd	r25, Y+2	; 0x02
    13e0:	0e 94 a9 0c 	call	0x1952	; 0x1952 <__divmodhi4>
			noteDuration=noteDuration*1.5;
    13e4:	07 2e       	mov	r0, r23
    13e6:	00 0c       	add	r0, r0
    13e8:	88 0b       	sbc	r24, r24
    13ea:	99 0b       	sbc	r25, r25
    13ec:	0e 94 87 0b 	call	0x170e	; 0x170e <__floatsisf>
    13f0:	20 e0       	ldi	r18, 0x00	; 0
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	40 ec       	ldi	r20, 0xC0	; 192
    13f6:	5f e3       	ldi	r21, 0x3F	; 63
    13f8:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    13fc:	0e 94 4f 0b 	call	0x169e	; 0x169e <__fixsfsi>
			noteDuration=-noteDuration;
    1400:	ee 24       	eor	r14, r14
    1402:	ff 24       	eor	r15, r15
    1404:	e6 1a       	sub	r14, r22
    1406:	f7 0a       	sbc	r15, r23
    1408:	03 c0       	rjmp	.+6      	; 0x1410 <_Z4playi+0xec>
		}
		else if(divider==0){return;} // this will be used to stop playing
    140a:	67 2b       	or	r22, r23
    140c:	09 f4       	brne	.+2      	; 0x1410 <_Z4playi+0xec>
    140e:	6c c0       	rjmp	.+216    	; 0x14e8 <_Z4playi+0x1c4>
		
		Delay_note_method((pgm_read_word_near(melody0[number]+thisNote)), noteDuration*0.9 ); // play the selected pitch
    1410:	b7 01       	movw	r22, r14
    1412:	0f 2c       	mov	r0, r15
    1414:	00 0c       	add	r0, r0
    1416:	88 0b       	sbc	r24, r24
    1418:	99 0b       	sbc	r25, r25
    141a:	0e 94 87 0b 	call	0x170e	; 0x170e <__floatsisf>
    141e:	2b 01       	movw	r4, r22
    1420:	3c 01       	movw	r6, r24
    1422:	26 e6       	ldi	r18, 0x66	; 102
    1424:	36 e6       	ldi	r19, 0x66	; 102
    1426:	46 e6       	ldi	r20, 0x66	; 102
    1428:	5f e3       	ldi	r21, 0x3F	; 63
    142a:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    142e:	4b 01       	movw	r8, r22
    1430:	5c 01       	movw	r10, r24
    1432:	f6 01       	movw	r30, r12
    1434:	ee 0f       	add	r30, r30
    1436:	ff 1f       	adc	r31, r31
    1438:	e0 0f       	add	r30, r16
    143a:	f1 1f       	adc	r31, r17
    143c:	65 91       	lpm	r22, Z+
    143e:	74 91       	lpm	r23, Z
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	0e 94 85 0b 	call	0x170a	; 0x170a <__floatunsisf>
    1448:	a5 01       	movw	r20, r10
    144a:	94 01       	movw	r18, r8
    144c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <_Z17Delay_note_methodff>
		_delay_ms(noteDuration*0.5);
    1450:	20 e0       	ldi	r18, 0x00	; 0
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	40 e0       	ldi	r20, 0x00	; 0
    1456:	5f e3       	ldi	r21, 0x3F	; 63
    1458:	c3 01       	movw	r24, r6
    145a:	b2 01       	movw	r22, r4
    145c:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    1460:	2b 01       	movw	r4, r22
    1462:	3c 01       	movw	r6, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1464:	20 e0       	ldi	r18, 0x00	; 0
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	4a e7       	ldi	r20, 0x7A	; 122
    146a:	53 e4       	ldi	r21, 0x43	; 67
    146c:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    1470:	4b 01       	movw	r8, r22
    1472:	5c 01       	movw	r10, r24
	if (__tmp < 1.0)
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	40 e8       	ldi	r20, 0x80	; 128
    147a:	5f e3       	ldi	r21, 0x3F	; 63
    147c:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <__cmpsf2>
    1480:	88 23       	and	r24, r24
    1482:	1c f1       	brlt	.+70     	; 0x14ca <_Z4playi+0x1a6>
		__ticks = 1;
	else if (__tmp > 65535)
    1484:	20 e0       	ldi	r18, 0x00	; 0
    1486:	3f ef       	ldi	r19, 0xFF	; 255
    1488:	4f e7       	ldi	r20, 0x7F	; 127
    148a:	57 e4       	ldi	r21, 0x47	; 71
    148c:	c5 01       	movw	r24, r10
    148e:	b4 01       	movw	r22, r8
    1490:	0e 94 37 0c 	call	0x186e	; 0x186e <__gesf2>
    1494:	18 16       	cp	r1, r24
    1496:	a4 f4       	brge	.+40     	; 0x14c0 <_Z4playi+0x19c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	40 e2       	ldi	r20, 0x20	; 32
    149e:	51 e4       	ldi	r21, 0x41	; 65
    14a0:	c3 01       	movw	r24, r6
    14a2:	b2 01       	movw	r22, r4
    14a4:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__mulsf3>
    14a8:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
		while(__ticks)
    14ac:	61 15       	cp	r22, r1
    14ae:	71 05       	cpc	r23, r1
    14b0:	89 f0       	breq	.+34     	; 0x14d4 <_Z4playi+0x1b0>
    14b2:	89 e1       	ldi	r24, 0x19	; 25
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	01 97       	sbiw	r24, 0x01	; 1
    14b8:	f1 f7       	brne	.-4      	; 0x14b6 <_Z4playi+0x192>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14ba:	61 50       	subi	r22, 0x01	; 1
    14bc:	71 09       	sbc	r23, r1
    14be:	f6 cf       	rjmp	.-20     	; 0x14ac <_Z4playi+0x188>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14c0:	c5 01       	movw	r24, r10
    14c2:	b4 01       	movw	r22, r8
    14c4:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <_Z4playi+0x1aa>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
    14ca:	61 e0       	ldi	r22, 0x01	; 1
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	cb 01       	movw	r24, r22
    14d0:	01 97       	sbiw	r24, 0x01	; 1
    14d2:	f1 f7       	brne	.-4      	; 0x14d0 <_Z4playi+0x1ac>
	int notes = sizeof(melody0[number])/sizeof(melody0[number][0])/2;
	int wholenote = (60000 * 2.5) / tempo;
	int divider = 0;
	int noteDuration = 0;
	
	for (int thisNote = 0; thisNote < notes *2 ; thisNote = thisNote + 2) {
    14d4:	8b 81       	ldd	r24, Y+3	; 0x03
    14d6:	9c 81       	ldd	r25, Y+4	; 0x04
    14d8:	02 96       	adiw	r24, 0x02	; 2
    14da:	9c 83       	std	Y+4, r25	; 0x04
    14dc:	8b 83       	std	Y+3, r24	; 0x03
    14de:	51 cf       	rjmp	.-350    	; 0x1382 <_Z4playi+0x5e>
		Delay_note_method((pgm_read_word_near(melody0[number]+thisNote)), noteDuration*0.9 ); // play the selected pitch
		_delay_ms(noteDuration*0.5);
		
		}
		else{
		sp=0;
    14e0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
    14e4:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
		}
	}
	
		
	
}
    14e8:	0f 90       	pop	r0
    14ea:	0f 90       	pop	r0
    14ec:	0f 90       	pop	r0
    14ee:	0f 90       	pop	r0
    14f0:	df 91       	pop	r29
    14f2:	cf 91       	pop	r28
    14f4:	1f 91       	pop	r17
    14f6:	0f 91       	pop	r16
    14f8:	ff 90       	pop	r15
    14fa:	ef 90       	pop	r14
    14fc:	df 90       	pop	r13
    14fe:	cf 90       	pop	r12
    1500:	bf 90       	pop	r11
    1502:	af 90       	pop	r10
    1504:	9f 90       	pop	r9
    1506:	8f 90       	pop	r8
    1508:	7f 90       	pop	r7
    150a:	6f 90       	pop	r6
    150c:	5f 90       	pop	r5
    150e:	4f 90       	pop	r4
    1510:	3f 90       	pop	r3
    1512:	2f 90       	pop	r2
    1514:	08 95       	ret

00001516 <main>:


int main(void)
{
	// pins ports declaration
	buzzer_DDR |= _BV(buzzer_PIN) ;// make buzzer pin output
    1516:	84 b1       	in	r24, 0x04	; 4
    1518:	81 60       	ori	r24, 0x01	; 1
    151a:	84 b9       	out	0x04, r24	; 4
	//set button pins as inputs
	buzzer_DDR &= ~_BV(playbutton);
    151c:	24 b1       	in	r18, 0x04	; 4
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	ac 01       	movw	r20, r24
    1524:	00 90 02 01 	lds	r0, 0x0102	; 0x800102 <playbutton>
    1528:	02 c0       	rjmp	.+4      	; 0x152e <main+0x18>
    152a:	44 0f       	add	r20, r20
    152c:	55 1f       	adc	r21, r21
    152e:	0a 94       	dec	r0
    1530:	e2 f7       	brpl	.-8      	; 0x152a <main+0x14>
    1532:	40 95       	com	r20
    1534:	24 23       	and	r18, r20
    1536:	24 b9       	out	0x04, r18	; 4
	buzzer_DDR &= ~_BV(changenextsong);
    1538:	24 b1       	in	r18, 0x04	; 4
    153a:	00 90 00 01 	lds	r0, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <main+0x2e>
    1540:	88 0f       	add	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	0a 94       	dec	r0
    1546:	e2 f7       	brpl	.-8      	; 0x1540 <main+0x2a>
    1548:	80 95       	com	r24
    154a:	82 23       	and	r24, r18
    154c:	84 b9       	out	0x04, r24	; 4
	
	
	EICRA |= _BV(ISC01) | _BV(ISC00);	 // set rising edge method
    154e:	e9 e6       	ldi	r30, 0x69	; 105
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	80 81       	ld	r24, Z
    1554:	83 60       	ori	r24, 0x03	; 3
    1556:	80 83       	st	Z, r24
	EIMSK |= _BV(INT0);					// enable pin PD1 External interrupt  
    1558:	8d b3       	in	r24, 0x1d	; 29
    155a:	81 60       	ori	r24, 0x01	; 1
    155c:	8d bb       	out	0x1d, r24	; 29
	
    sei();							  //  this Enables the Global Interrupt Enable (I-bit) in the Status Register (SREG)
    155e:	78 94       	sei
	
    while (1) 
    {
		if (PINB & _BV(playbutton)){
    1560:	83 b1       	in	r24, 0x03	; 3
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	00 90 02 01 	lds	r0, 0x0102	; 0x800102 <playbutton>
    1568:	02 c0       	rjmp	.+4      	; 0x156e <main+0x58>
    156a:	95 95       	asr	r25
    156c:	87 95       	ror	r24
    156e:	0a 94       	dec	r0
    1570:	e2 f7       	brpl	.-8      	; 0x156a <main+0x54>
    1572:	80 ff       	sbrs	r24, 0
    1574:	0c c0       	rjmp	.+24     	; 0x158e <main+0x78>
			sp=1;
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
    157e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
			play(songnumber);
    1582:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <songnumber>
    1586:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <songnumber+0x1>
    158a:	0e 94 92 09 	call	0x1324	; 0x1324 <_Z4playi>
		}
		
		if (PINB & _BV(changenextsong))
    158e:	83 b1       	in	r24, 0x03	; 3
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	00 90 00 01 	lds	r0, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1596:	02 c0       	rjmp	.+4      	; 0x159c <main+0x86>
    1598:	95 95       	asr	r25
    159a:	87 95       	ror	r24
    159c:	0a 94       	dec	r0
    159e:	e2 f7       	brpl	.-8      	; 0x1598 <main+0x82>
    15a0:	80 fd       	sbrc	r24, 0
		{
			changesong();
    15a2:	0e 94 4b 08 	call	0x1096	; 0x1096 <_Z10changesongv>
    15a6:	88 ea       	ldi	r24, 0xA8	; 168
    15a8:	91 e6       	ldi	r25, 0x61	; 97
    15aa:	01 97       	sbiw	r24, 0x01	; 1
    15ac:	f1 f7       	brne	.-4      	; 0x15aa <main+0x94>
    15ae:	d8 cf       	rjmp	.-80     	; 0x1560 <main+0x4a>

000015b0 <__cmpsf2>:
    15b0:	0e 94 c2 0b 	call	0x1784	; 0x1784 <__fp_cmp>
    15b4:	08 f4       	brcc	.+2      	; 0x15b8 <__cmpsf2+0x8>
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	08 95       	ret

000015ba <__divsf3>:
    15ba:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__divsf3x>
    15be:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_round>
    15c2:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__fp_pscB>
    15c6:	58 f0       	brcs	.+22     	; 0x15de <__divsf3+0x24>
    15c8:	0e 94 ef 0b 	call	0x17de	; 0x17de <__fp_pscA>
    15cc:	40 f0       	brcs	.+16     	; 0x15de <__divsf3+0x24>
    15ce:	29 f4       	brne	.+10     	; 0x15da <__divsf3+0x20>
    15d0:	5f 3f       	cpi	r21, 0xFF	; 255
    15d2:	29 f0       	breq	.+10     	; 0x15de <__divsf3+0x24>
    15d4:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_inf>
    15d8:	51 11       	cpse	r21, r1
    15da:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_szero>
    15de:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <__fp_nan>

000015e2 <__divsf3x>:
    15e2:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_split3>
    15e6:	68 f3       	brcs	.-38     	; 0x15c2 <__divsf3+0x8>

000015e8 <__divsf3_pse>:
    15e8:	99 23       	and	r25, r25
    15ea:	b1 f3       	breq	.-20     	; 0x15d8 <__divsf3+0x1e>
    15ec:	55 23       	and	r21, r21
    15ee:	91 f3       	breq	.-28     	; 0x15d4 <__divsf3+0x1a>
    15f0:	95 1b       	sub	r25, r21
    15f2:	55 0b       	sbc	r21, r21
    15f4:	bb 27       	eor	r27, r27
    15f6:	aa 27       	eor	r26, r26
    15f8:	62 17       	cp	r22, r18
    15fa:	73 07       	cpc	r23, r19
    15fc:	84 07       	cpc	r24, r20
    15fe:	38 f0       	brcs	.+14     	; 0x160e <__divsf3_pse+0x26>
    1600:	9f 5f       	subi	r25, 0xFF	; 255
    1602:	5f 4f       	sbci	r21, 0xFF	; 255
    1604:	22 0f       	add	r18, r18
    1606:	33 1f       	adc	r19, r19
    1608:	44 1f       	adc	r20, r20
    160a:	aa 1f       	adc	r26, r26
    160c:	a9 f3       	breq	.-22     	; 0x15f8 <__divsf3_pse+0x10>
    160e:	35 d0       	rcall	.+106    	; 0x167a <__divsf3_pse+0x92>
    1610:	0e 2e       	mov	r0, r30
    1612:	3a f0       	brmi	.+14     	; 0x1622 <__divsf3_pse+0x3a>
    1614:	e0 e8       	ldi	r30, 0x80	; 128
    1616:	32 d0       	rcall	.+100    	; 0x167c <__divsf3_pse+0x94>
    1618:	91 50       	subi	r25, 0x01	; 1
    161a:	50 40       	sbci	r21, 0x00	; 0
    161c:	e6 95       	lsr	r30
    161e:	00 1c       	adc	r0, r0
    1620:	ca f7       	brpl	.-14     	; 0x1614 <__divsf3_pse+0x2c>
    1622:	2b d0       	rcall	.+86     	; 0x167a <__divsf3_pse+0x92>
    1624:	fe 2f       	mov	r31, r30
    1626:	29 d0       	rcall	.+82     	; 0x167a <__divsf3_pse+0x92>
    1628:	66 0f       	add	r22, r22
    162a:	77 1f       	adc	r23, r23
    162c:	88 1f       	adc	r24, r24
    162e:	bb 1f       	adc	r27, r27
    1630:	26 17       	cp	r18, r22
    1632:	37 07       	cpc	r19, r23
    1634:	48 07       	cpc	r20, r24
    1636:	ab 07       	cpc	r26, r27
    1638:	b0 e8       	ldi	r27, 0x80	; 128
    163a:	09 f0       	breq	.+2      	; 0x163e <__divsf3_pse+0x56>
    163c:	bb 0b       	sbc	r27, r27
    163e:	80 2d       	mov	r24, r0
    1640:	bf 01       	movw	r22, r30
    1642:	ff 27       	eor	r31, r31
    1644:	93 58       	subi	r25, 0x83	; 131
    1646:	5f 4f       	sbci	r21, 0xFF	; 255
    1648:	3a f0       	brmi	.+14     	; 0x1658 <__divsf3_pse+0x70>
    164a:	9e 3f       	cpi	r25, 0xFE	; 254
    164c:	51 05       	cpc	r21, r1
    164e:	78 f0       	brcs	.+30     	; 0x166e <__divsf3_pse+0x86>
    1650:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_inf>
    1654:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_szero>
    1658:	5f 3f       	cpi	r21, 0xFF	; 255
    165a:	e4 f3       	brlt	.-8      	; 0x1654 <__divsf3_pse+0x6c>
    165c:	98 3e       	cpi	r25, 0xE8	; 232
    165e:	d4 f3       	brlt	.-12     	; 0x1654 <__divsf3_pse+0x6c>
    1660:	86 95       	lsr	r24
    1662:	77 95       	ror	r23
    1664:	67 95       	ror	r22
    1666:	b7 95       	ror	r27
    1668:	f7 95       	ror	r31
    166a:	9f 5f       	subi	r25, 0xFF	; 255
    166c:	c9 f7       	brne	.-14     	; 0x1660 <__divsf3_pse+0x78>
    166e:	88 0f       	add	r24, r24
    1670:	91 1d       	adc	r25, r1
    1672:	96 95       	lsr	r25
    1674:	87 95       	ror	r24
    1676:	97 f9       	bld	r25, 7
    1678:	08 95       	ret
    167a:	e1 e0       	ldi	r30, 0x01	; 1
    167c:	66 0f       	add	r22, r22
    167e:	77 1f       	adc	r23, r23
    1680:	88 1f       	adc	r24, r24
    1682:	bb 1f       	adc	r27, r27
    1684:	62 17       	cp	r22, r18
    1686:	73 07       	cpc	r23, r19
    1688:	84 07       	cpc	r24, r20
    168a:	ba 07       	cpc	r27, r26
    168c:	20 f0       	brcs	.+8      	; 0x1696 <__divsf3_pse+0xae>
    168e:	62 1b       	sub	r22, r18
    1690:	73 0b       	sbc	r23, r19
    1692:	84 0b       	sbc	r24, r20
    1694:	ba 0b       	sbc	r27, r26
    1696:	ee 1f       	adc	r30, r30
    1698:	88 f7       	brcc	.-30     	; 0x167c <__divsf3_pse+0x94>
    169a:	e0 95       	com	r30
    169c:	08 95       	ret

0000169e <__fixsfsi>:
    169e:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fixunssfsi>
    16a2:	68 94       	set
    16a4:	b1 11       	cpse	r27, r1
    16a6:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_szero>
    16aa:	08 95       	ret

000016ac <__fixunssfsi>:
    16ac:	0e 94 16 0c 	call	0x182c	; 0x182c <__fp_splitA>
    16b0:	88 f0       	brcs	.+34     	; 0x16d4 <__fixunssfsi+0x28>
    16b2:	9f 57       	subi	r25, 0x7F	; 127
    16b4:	98 f0       	brcs	.+38     	; 0x16dc <__fixunssfsi+0x30>
    16b6:	b9 2f       	mov	r27, r25
    16b8:	99 27       	eor	r25, r25
    16ba:	b7 51       	subi	r27, 0x17	; 23
    16bc:	b0 f0       	brcs	.+44     	; 0x16ea <__fixunssfsi+0x3e>
    16be:	e1 f0       	breq	.+56     	; 0x16f8 <__fixunssfsi+0x4c>
    16c0:	66 0f       	add	r22, r22
    16c2:	77 1f       	adc	r23, r23
    16c4:	88 1f       	adc	r24, r24
    16c6:	99 1f       	adc	r25, r25
    16c8:	1a f0       	brmi	.+6      	; 0x16d0 <__fixunssfsi+0x24>
    16ca:	ba 95       	dec	r27
    16cc:	c9 f7       	brne	.-14     	; 0x16c0 <__fixunssfsi+0x14>
    16ce:	14 c0       	rjmp	.+40     	; 0x16f8 <__fixunssfsi+0x4c>
    16d0:	b1 30       	cpi	r27, 0x01	; 1
    16d2:	91 f0       	breq	.+36     	; 0x16f8 <__fixunssfsi+0x4c>
    16d4:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fp_zero>
    16d8:	b1 e0       	ldi	r27, 0x01	; 1
    16da:	08 95       	ret
    16dc:	0c 94 30 0c 	jmp	0x1860	; 0x1860 <__fp_zero>
    16e0:	67 2f       	mov	r22, r23
    16e2:	78 2f       	mov	r23, r24
    16e4:	88 27       	eor	r24, r24
    16e6:	b8 5f       	subi	r27, 0xF8	; 248
    16e8:	39 f0       	breq	.+14     	; 0x16f8 <__fixunssfsi+0x4c>
    16ea:	b9 3f       	cpi	r27, 0xF9	; 249
    16ec:	cc f3       	brlt	.-14     	; 0x16e0 <__fixunssfsi+0x34>
    16ee:	86 95       	lsr	r24
    16f0:	77 95       	ror	r23
    16f2:	67 95       	ror	r22
    16f4:	b3 95       	inc	r27
    16f6:	d9 f7       	brne	.-10     	; 0x16ee <__fixunssfsi+0x42>
    16f8:	3e f4       	brtc	.+14     	; 0x1708 <__fixunssfsi+0x5c>
    16fa:	90 95       	com	r25
    16fc:	80 95       	com	r24
    16fe:	70 95       	com	r23
    1700:	61 95       	neg	r22
    1702:	7f 4f       	sbci	r23, 0xFF	; 255
    1704:	8f 4f       	sbci	r24, 0xFF	; 255
    1706:	9f 4f       	sbci	r25, 0xFF	; 255
    1708:	08 95       	ret

0000170a <__floatunsisf>:
    170a:	e8 94       	clt
    170c:	09 c0       	rjmp	.+18     	; 0x1720 <__floatsisf+0x12>

0000170e <__floatsisf>:
    170e:	97 fb       	bst	r25, 7
    1710:	3e f4       	brtc	.+14     	; 0x1720 <__floatsisf+0x12>
    1712:	90 95       	com	r25
    1714:	80 95       	com	r24
    1716:	70 95       	com	r23
    1718:	61 95       	neg	r22
    171a:	7f 4f       	sbci	r23, 0xFF	; 255
    171c:	8f 4f       	sbci	r24, 0xFF	; 255
    171e:	9f 4f       	sbci	r25, 0xFF	; 255
    1720:	99 23       	and	r25, r25
    1722:	a9 f0       	breq	.+42     	; 0x174e <__floatsisf+0x40>
    1724:	f9 2f       	mov	r31, r25
    1726:	96 e9       	ldi	r25, 0x96	; 150
    1728:	bb 27       	eor	r27, r27
    172a:	93 95       	inc	r25
    172c:	f6 95       	lsr	r31
    172e:	87 95       	ror	r24
    1730:	77 95       	ror	r23
    1732:	67 95       	ror	r22
    1734:	b7 95       	ror	r27
    1736:	f1 11       	cpse	r31, r1
    1738:	f8 cf       	rjmp	.-16     	; 0x172a <__floatsisf+0x1c>
    173a:	fa f4       	brpl	.+62     	; 0x177a <__floatsisf+0x6c>
    173c:	bb 0f       	add	r27, r27
    173e:	11 f4       	brne	.+4      	; 0x1744 <__floatsisf+0x36>
    1740:	60 ff       	sbrs	r22, 0
    1742:	1b c0       	rjmp	.+54     	; 0x177a <__floatsisf+0x6c>
    1744:	6f 5f       	subi	r22, 0xFF	; 255
    1746:	7f 4f       	sbci	r23, 0xFF	; 255
    1748:	8f 4f       	sbci	r24, 0xFF	; 255
    174a:	9f 4f       	sbci	r25, 0xFF	; 255
    174c:	16 c0       	rjmp	.+44     	; 0x177a <__floatsisf+0x6c>
    174e:	88 23       	and	r24, r24
    1750:	11 f0       	breq	.+4      	; 0x1756 <__floatsisf+0x48>
    1752:	96 e9       	ldi	r25, 0x96	; 150
    1754:	11 c0       	rjmp	.+34     	; 0x1778 <__floatsisf+0x6a>
    1756:	77 23       	and	r23, r23
    1758:	21 f0       	breq	.+8      	; 0x1762 <__floatsisf+0x54>
    175a:	9e e8       	ldi	r25, 0x8E	; 142
    175c:	87 2f       	mov	r24, r23
    175e:	76 2f       	mov	r23, r22
    1760:	05 c0       	rjmp	.+10     	; 0x176c <__floatsisf+0x5e>
    1762:	66 23       	and	r22, r22
    1764:	71 f0       	breq	.+28     	; 0x1782 <__floatsisf+0x74>
    1766:	96 e8       	ldi	r25, 0x86	; 134
    1768:	86 2f       	mov	r24, r22
    176a:	70 e0       	ldi	r23, 0x00	; 0
    176c:	60 e0       	ldi	r22, 0x00	; 0
    176e:	2a f0       	brmi	.+10     	; 0x177a <__floatsisf+0x6c>
    1770:	9a 95       	dec	r25
    1772:	66 0f       	add	r22, r22
    1774:	77 1f       	adc	r23, r23
    1776:	88 1f       	adc	r24, r24
    1778:	da f7       	brpl	.-10     	; 0x1770 <__floatsisf+0x62>
    177a:	88 0f       	add	r24, r24
    177c:	96 95       	lsr	r25
    177e:	87 95       	ror	r24
    1780:	97 f9       	bld	r25, 7
    1782:	08 95       	ret

00001784 <__fp_cmp>:
    1784:	99 0f       	add	r25, r25
    1786:	00 08       	sbc	r0, r0
    1788:	55 0f       	add	r21, r21
    178a:	aa 0b       	sbc	r26, r26
    178c:	e0 e8       	ldi	r30, 0x80	; 128
    178e:	fe ef       	ldi	r31, 0xFE	; 254
    1790:	16 16       	cp	r1, r22
    1792:	17 06       	cpc	r1, r23
    1794:	e8 07       	cpc	r30, r24
    1796:	f9 07       	cpc	r31, r25
    1798:	c0 f0       	brcs	.+48     	; 0x17ca <__fp_cmp+0x46>
    179a:	12 16       	cp	r1, r18
    179c:	13 06       	cpc	r1, r19
    179e:	e4 07       	cpc	r30, r20
    17a0:	f5 07       	cpc	r31, r21
    17a2:	98 f0       	brcs	.+38     	; 0x17ca <__fp_cmp+0x46>
    17a4:	62 1b       	sub	r22, r18
    17a6:	73 0b       	sbc	r23, r19
    17a8:	84 0b       	sbc	r24, r20
    17aa:	95 0b       	sbc	r25, r21
    17ac:	39 f4       	brne	.+14     	; 0x17bc <__fp_cmp+0x38>
    17ae:	0a 26       	eor	r0, r26
    17b0:	61 f0       	breq	.+24     	; 0x17ca <__fp_cmp+0x46>
    17b2:	23 2b       	or	r18, r19
    17b4:	24 2b       	or	r18, r20
    17b6:	25 2b       	or	r18, r21
    17b8:	21 f4       	brne	.+8      	; 0x17c2 <__fp_cmp+0x3e>
    17ba:	08 95       	ret
    17bc:	0a 26       	eor	r0, r26
    17be:	09 f4       	brne	.+2      	; 0x17c2 <__fp_cmp+0x3e>
    17c0:	a1 40       	sbci	r26, 0x01	; 1
    17c2:	a6 95       	lsr	r26
    17c4:	8f ef       	ldi	r24, 0xFF	; 255
    17c6:	81 1d       	adc	r24, r1
    17c8:	81 1d       	adc	r24, r1
    17ca:	08 95       	ret

000017cc <__fp_inf>:
    17cc:	97 f9       	bld	r25, 7
    17ce:	9f 67       	ori	r25, 0x7F	; 127
    17d0:	80 e8       	ldi	r24, 0x80	; 128
    17d2:	70 e0       	ldi	r23, 0x00	; 0
    17d4:	60 e0       	ldi	r22, 0x00	; 0
    17d6:	08 95       	ret

000017d8 <__fp_nan>:
    17d8:	9f ef       	ldi	r25, 0xFF	; 255
    17da:	80 ec       	ldi	r24, 0xC0	; 192
    17dc:	08 95       	ret

000017de <__fp_pscA>:
    17de:	00 24       	eor	r0, r0
    17e0:	0a 94       	dec	r0
    17e2:	16 16       	cp	r1, r22
    17e4:	17 06       	cpc	r1, r23
    17e6:	18 06       	cpc	r1, r24
    17e8:	09 06       	cpc	r0, r25
    17ea:	08 95       	ret

000017ec <__fp_pscB>:
    17ec:	00 24       	eor	r0, r0
    17ee:	0a 94       	dec	r0
    17f0:	12 16       	cp	r1, r18
    17f2:	13 06       	cpc	r1, r19
    17f4:	14 06       	cpc	r1, r20
    17f6:	05 06       	cpc	r0, r21
    17f8:	08 95       	ret

000017fa <__fp_round>:
    17fa:	09 2e       	mov	r0, r25
    17fc:	03 94       	inc	r0
    17fe:	00 0c       	add	r0, r0
    1800:	11 f4       	brne	.+4      	; 0x1806 <__fp_round+0xc>
    1802:	88 23       	and	r24, r24
    1804:	52 f0       	brmi	.+20     	; 0x181a <__fp_round+0x20>
    1806:	bb 0f       	add	r27, r27
    1808:	40 f4       	brcc	.+16     	; 0x181a <__fp_round+0x20>
    180a:	bf 2b       	or	r27, r31
    180c:	11 f4       	brne	.+4      	; 0x1812 <__fp_round+0x18>
    180e:	60 ff       	sbrs	r22, 0
    1810:	04 c0       	rjmp	.+8      	; 0x181a <__fp_round+0x20>
    1812:	6f 5f       	subi	r22, 0xFF	; 255
    1814:	7f 4f       	sbci	r23, 0xFF	; 255
    1816:	8f 4f       	sbci	r24, 0xFF	; 255
    1818:	9f 4f       	sbci	r25, 0xFF	; 255
    181a:	08 95       	ret

0000181c <__fp_split3>:
    181c:	57 fd       	sbrc	r21, 7
    181e:	90 58       	subi	r25, 0x80	; 128
    1820:	44 0f       	add	r20, r20
    1822:	55 1f       	adc	r21, r21
    1824:	59 f0       	breq	.+22     	; 0x183c <__fp_splitA+0x10>
    1826:	5f 3f       	cpi	r21, 0xFF	; 255
    1828:	71 f0       	breq	.+28     	; 0x1846 <__fp_splitA+0x1a>
    182a:	47 95       	ror	r20

0000182c <__fp_splitA>:
    182c:	88 0f       	add	r24, r24
    182e:	97 fb       	bst	r25, 7
    1830:	99 1f       	adc	r25, r25
    1832:	61 f0       	breq	.+24     	; 0x184c <__fp_splitA+0x20>
    1834:	9f 3f       	cpi	r25, 0xFF	; 255
    1836:	79 f0       	breq	.+30     	; 0x1856 <__fp_splitA+0x2a>
    1838:	87 95       	ror	r24
    183a:	08 95       	ret
    183c:	12 16       	cp	r1, r18
    183e:	13 06       	cpc	r1, r19
    1840:	14 06       	cpc	r1, r20
    1842:	55 1f       	adc	r21, r21
    1844:	f2 cf       	rjmp	.-28     	; 0x182a <__fp_split3+0xe>
    1846:	46 95       	lsr	r20
    1848:	f1 df       	rcall	.-30     	; 0x182c <__fp_splitA>
    184a:	08 c0       	rjmp	.+16     	; 0x185c <__fp_splitA+0x30>
    184c:	16 16       	cp	r1, r22
    184e:	17 06       	cpc	r1, r23
    1850:	18 06       	cpc	r1, r24
    1852:	99 1f       	adc	r25, r25
    1854:	f1 cf       	rjmp	.-30     	; 0x1838 <__fp_splitA+0xc>
    1856:	86 95       	lsr	r24
    1858:	71 05       	cpc	r23, r1
    185a:	61 05       	cpc	r22, r1
    185c:	08 94       	sec
    185e:	08 95       	ret

00001860 <__fp_zero>:
    1860:	e8 94       	clt

00001862 <__fp_szero>:
    1862:	bb 27       	eor	r27, r27
    1864:	66 27       	eor	r22, r22
    1866:	77 27       	eor	r23, r23
    1868:	cb 01       	movw	r24, r22
    186a:	97 f9       	bld	r25, 7
    186c:	08 95       	ret

0000186e <__gesf2>:
    186e:	0e 94 c2 0b 	call	0x1784	; 0x1784 <__fp_cmp>
    1872:	08 f4       	brcc	.+2      	; 0x1876 <__gesf2+0x8>
    1874:	8f ef       	ldi	r24, 0xFF	; 255
    1876:	08 95       	ret

00001878 <__mulsf3>:
    1878:	0e 94 4f 0c 	call	0x189e	; 0x189e <__mulsf3x>
    187c:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_round>
    1880:	0e 94 ef 0b 	call	0x17de	; 0x17de <__fp_pscA>
    1884:	38 f0       	brcs	.+14     	; 0x1894 <__mulsf3+0x1c>
    1886:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__fp_pscB>
    188a:	20 f0       	brcs	.+8      	; 0x1894 <__mulsf3+0x1c>
    188c:	95 23       	and	r25, r21
    188e:	11 f0       	breq	.+4      	; 0x1894 <__mulsf3+0x1c>
    1890:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_inf>
    1894:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <__fp_nan>
    1898:	11 24       	eor	r1, r1
    189a:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_szero>

0000189e <__mulsf3x>:
    189e:	0e 94 0e 0c 	call	0x181c	; 0x181c <__fp_split3>
    18a2:	70 f3       	brcs	.-36     	; 0x1880 <__mulsf3+0x8>

000018a4 <__mulsf3_pse>:
    18a4:	95 9f       	mul	r25, r21
    18a6:	c1 f3       	breq	.-16     	; 0x1898 <__mulsf3+0x20>
    18a8:	95 0f       	add	r25, r21
    18aa:	50 e0       	ldi	r21, 0x00	; 0
    18ac:	55 1f       	adc	r21, r21
    18ae:	62 9f       	mul	r22, r18
    18b0:	f0 01       	movw	r30, r0
    18b2:	72 9f       	mul	r23, r18
    18b4:	bb 27       	eor	r27, r27
    18b6:	f0 0d       	add	r31, r0
    18b8:	b1 1d       	adc	r27, r1
    18ba:	63 9f       	mul	r22, r19
    18bc:	aa 27       	eor	r26, r26
    18be:	f0 0d       	add	r31, r0
    18c0:	b1 1d       	adc	r27, r1
    18c2:	aa 1f       	adc	r26, r26
    18c4:	64 9f       	mul	r22, r20
    18c6:	66 27       	eor	r22, r22
    18c8:	b0 0d       	add	r27, r0
    18ca:	a1 1d       	adc	r26, r1
    18cc:	66 1f       	adc	r22, r22
    18ce:	82 9f       	mul	r24, r18
    18d0:	22 27       	eor	r18, r18
    18d2:	b0 0d       	add	r27, r0
    18d4:	a1 1d       	adc	r26, r1
    18d6:	62 1f       	adc	r22, r18
    18d8:	73 9f       	mul	r23, r19
    18da:	b0 0d       	add	r27, r0
    18dc:	a1 1d       	adc	r26, r1
    18de:	62 1f       	adc	r22, r18
    18e0:	83 9f       	mul	r24, r19
    18e2:	a0 0d       	add	r26, r0
    18e4:	61 1d       	adc	r22, r1
    18e6:	22 1f       	adc	r18, r18
    18e8:	74 9f       	mul	r23, r20
    18ea:	33 27       	eor	r19, r19
    18ec:	a0 0d       	add	r26, r0
    18ee:	61 1d       	adc	r22, r1
    18f0:	23 1f       	adc	r18, r19
    18f2:	84 9f       	mul	r24, r20
    18f4:	60 0d       	add	r22, r0
    18f6:	21 1d       	adc	r18, r1
    18f8:	82 2f       	mov	r24, r18
    18fa:	76 2f       	mov	r23, r22
    18fc:	6a 2f       	mov	r22, r26
    18fe:	11 24       	eor	r1, r1
    1900:	9f 57       	subi	r25, 0x7F	; 127
    1902:	50 40       	sbci	r21, 0x00	; 0
    1904:	9a f0       	brmi	.+38     	; 0x192c <__mulsf3_pse+0x88>
    1906:	f1 f0       	breq	.+60     	; 0x1944 <__mulsf3_pse+0xa0>
    1908:	88 23       	and	r24, r24
    190a:	4a f0       	brmi	.+18     	; 0x191e <__mulsf3_pse+0x7a>
    190c:	ee 0f       	add	r30, r30
    190e:	ff 1f       	adc	r31, r31
    1910:	bb 1f       	adc	r27, r27
    1912:	66 1f       	adc	r22, r22
    1914:	77 1f       	adc	r23, r23
    1916:	88 1f       	adc	r24, r24
    1918:	91 50       	subi	r25, 0x01	; 1
    191a:	50 40       	sbci	r21, 0x00	; 0
    191c:	a9 f7       	brne	.-22     	; 0x1908 <__mulsf3_pse+0x64>
    191e:	9e 3f       	cpi	r25, 0xFE	; 254
    1920:	51 05       	cpc	r21, r1
    1922:	80 f0       	brcs	.+32     	; 0x1944 <__mulsf3_pse+0xa0>
    1924:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_inf>
    1928:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_szero>
    192c:	5f 3f       	cpi	r21, 0xFF	; 255
    192e:	e4 f3       	brlt	.-8      	; 0x1928 <__mulsf3_pse+0x84>
    1930:	98 3e       	cpi	r25, 0xE8	; 232
    1932:	d4 f3       	brlt	.-12     	; 0x1928 <__mulsf3_pse+0x84>
    1934:	86 95       	lsr	r24
    1936:	77 95       	ror	r23
    1938:	67 95       	ror	r22
    193a:	b7 95       	ror	r27
    193c:	f7 95       	ror	r31
    193e:	e7 95       	ror	r30
    1940:	9f 5f       	subi	r25, 0xFF	; 255
    1942:	c1 f7       	brne	.-16     	; 0x1934 <__mulsf3_pse+0x90>
    1944:	fe 2b       	or	r31, r30
    1946:	88 0f       	add	r24, r24
    1948:	91 1d       	adc	r25, r1
    194a:	96 95       	lsr	r25
    194c:	87 95       	ror	r24
    194e:	97 f9       	bld	r25, 7
    1950:	08 95       	ret

00001952 <__divmodhi4>:
    1952:	97 fb       	bst	r25, 7
    1954:	07 2e       	mov	r0, r23
    1956:	16 f4       	brtc	.+4      	; 0x195c <__divmodhi4+0xa>
    1958:	00 94       	com	r0
    195a:	07 d0       	rcall	.+14     	; 0x196a <__divmodhi4_neg1>
    195c:	77 fd       	sbrc	r23, 7
    195e:	09 d0       	rcall	.+18     	; 0x1972 <__divmodhi4_neg2>
    1960:	0e 94 bd 0c 	call	0x197a	; 0x197a <__udivmodhi4>
    1964:	07 fc       	sbrc	r0, 7
    1966:	05 d0       	rcall	.+10     	; 0x1972 <__divmodhi4_neg2>
    1968:	3e f4       	brtc	.+14     	; 0x1978 <__divmodhi4_exit>

0000196a <__divmodhi4_neg1>:
    196a:	90 95       	com	r25
    196c:	81 95       	neg	r24
    196e:	9f 4f       	sbci	r25, 0xFF	; 255
    1970:	08 95       	ret

00001972 <__divmodhi4_neg2>:
    1972:	70 95       	com	r23
    1974:	61 95       	neg	r22
    1976:	7f 4f       	sbci	r23, 0xFF	; 255

00001978 <__divmodhi4_exit>:
    1978:	08 95       	ret

0000197a <__udivmodhi4>:
    197a:	aa 1b       	sub	r26, r26
    197c:	bb 1b       	sub	r27, r27
    197e:	51 e1       	ldi	r21, 0x11	; 17
    1980:	07 c0       	rjmp	.+14     	; 0x1990 <__udivmodhi4_ep>

00001982 <__udivmodhi4_loop>:
    1982:	aa 1f       	adc	r26, r26
    1984:	bb 1f       	adc	r27, r27
    1986:	a6 17       	cp	r26, r22
    1988:	b7 07       	cpc	r27, r23
    198a:	10 f0       	brcs	.+4      	; 0x1990 <__udivmodhi4_ep>
    198c:	a6 1b       	sub	r26, r22
    198e:	b7 0b       	sbc	r27, r23

00001990 <__udivmodhi4_ep>:
    1990:	88 1f       	adc	r24, r24
    1992:	99 1f       	adc	r25, r25
    1994:	5a 95       	dec	r21
    1996:	a9 f7       	brne	.-22     	; 0x1982 <__udivmodhi4_loop>
    1998:	80 95       	com	r24
    199a:	90 95       	com	r25
    199c:	bc 01       	movw	r22, r24
    199e:	cd 01       	movw	r24, r26
    19a0:	08 95       	ret

000019a2 <_exit>:
    19a2:	f8 94       	cli

000019a4 <__stop_program>:
    19a4:	ff cf       	rjmp	.-2      	; 0x19a4 <__stop_program>
